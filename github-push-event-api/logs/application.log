2018-03-20 13:26:41.889  INFO 13768 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 13768 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-20 13:26:41.891  INFO 13768 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-20 13:26:41.926  INFO 13768 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Tue Mar 20 13:26:41 IST 2018]; root of context hierarchy
2018-03-20 13:26:42.829  INFO 13768 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-20 13:26:42.836  INFO 13768 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-20 13:26:42.837  INFO 13768 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-20 13:26:42.920  INFO 13768 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-20 13:26:42.920  INFO 13768 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 996 ms
2018-03-20 13:26:43.130  INFO 13768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-20 13:26:43.130  INFO 13768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-20 13:26:43.130  INFO 13768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-20 13:26:43.130  INFO 13768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-20 13:26:43.130  INFO 13768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-20 13:26:43.131  INFO 13768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-20 13:26:43.131  INFO 13768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-20 13:26:43.131  INFO 13768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-20 13:26:43.131  INFO 13768 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-20 13:26:43.392  INFO 13768 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Tue Mar 20 13:26:41 IST 2018]; root of context hierarchy
2018-03-20 13:26:43.434  INFO 13768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-20 13:26:43.434  INFO 13768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-20 13:26:43.436  INFO 13768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-20 13:26:43.436  INFO 13768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-20 13:26:43.459  INFO 13768 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-20 13:26:43.459  INFO 13768 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-20 13:26:43.486  INFO 13768 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-20 13:26:43.681  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-20 13:26:43.682  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-20 13:26:43.683  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-20 13:26:43.684  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-20 13:26:43.684  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-20 13:26:43.694  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-20 13:26:43.695  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-20 13:26:43.695  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-20 13:26:43.696  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-20 13:26:43.696  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-20 13:26:43.697  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-20 13:26:43.698  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-20 13:26:43.698  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-20 13:26:43.699  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-20 13:26:43.699  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-20 13:26:43.699  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-20 13:26:43.700  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-20 13:26:43.700  INFO 13768 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-20 13:26:43.783  INFO 13768 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-20 13:26:43.791  INFO 13768 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-20 13:26:43.885  INFO 13768 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-20 13:26:43.889  INFO 13768 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 2.187 seconds (JVM running for 2.949)
2018-03-20 13:27:56.123  INFO 13768 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-20 13:27:56.124  INFO 13768 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-20 13:27:56.140  INFO 13768 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2018-03-20 13:27:56.146  INFO 13768 --- [http-nio-8080-exec-2] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-20 13:27:56.163  INFO 13768 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : am in create api()
2018-03-20 13:27:56.164  INFO 13768 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "6d7e28528bc492f86ecbafb6ad07269fdd7d77a0",
  "after": "ca9d49a56486e304891dc2691e0021fd0c5db534",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/6d7e28528bc4...ca9d49a56486",
  "commits": [
    {
      "id": "ca9d49a56486e304891dc2691e0021fd0c5db534",
      "tree_id": "dab3fcf2c423a68cc1bbdc56b525ff650cbee1bb",
      "distinct": true,
      "message": "adding petstore version",
      "timestamp": "2018-03-19T09:05:32+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/ca9d49a56486e304891dc2691e0021fd0c5db534",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "petstore-swagger1.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "ca9d49a56486e304891dc2691e0021fd0c5db534",
    "tree_id": "dab3fcf2c423a68cc1bbdc56b525ff650cbee1bb",
    "distinct": true,
    "message": "adding petstore version",
    "timestamp": "2018-03-19T09:05:32+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/ca9d49a56486e304891dc2691e0021fd0c5db534",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "petstore-swagger1.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-19T03:26:25Z",
    "pushed_at": 1521430547,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47139,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-20 13:28:03.547  INFO 13768 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@5c4726b7
2018-03-20 13:28:03.548  INFO 13768 --- [http-nio-8080-exec-2] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-20 13:28:07.004  INFO 13768 --- [http-nio-8080-exec-2] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/v2
2018-03-20 13:28:07.071  INFO 13768 --- [http-nio-8080-exec-2] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-20 13:28:07.619  INFO 13768 --- [http-nio-8080-exec-2] com.innominds.util.APIMProxy             : result is:	{
"error" : {
"code" : "ValidationException", "message" : {
"lang" : "en", "value" : "The request could not be completed due to data input errors."
}, "detail" : {
"errorCode" : "483", "devErrorMessage" : "The request could not be completed due to data input errors.", "userErrorMessage" : "The request could not be completed due to data input errors.", "userErrorKey" : "error.validation.entity", "validationErrors" : [
{
"field" : "SsgUrl", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}, {
"field" : "Name", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}
]
}
}
}
2018-03-23 14:48:25.163  INFO 11908 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 11908 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-23 14:48:25.298  INFO 11908 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-23 14:48:25.994  INFO 11908 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 14:48:25 IST 2018]; root of context hierarchy
2018-03-23 14:48:30.279  INFO 11908 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-23 14:48:30.293  INFO 11908 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-23 14:48:30.295  INFO 11908 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-23 14:48:30.423  INFO 11908 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-23 14:48:30.423  INFO 11908 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4747 ms
2018-03-23 14:48:30.648  INFO 11908 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-23 14:48:30.658  INFO 11908 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-23 14:48:30.658  INFO 11908 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-23 14:48:30.658  INFO 11908 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-23 14:48:30.658  INFO 11908 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-23 14:48:30.658  INFO 11908 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-23 14:48:30.658  INFO 11908 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-23 14:48:30.658  INFO 11908 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-23 14:48:30.658  INFO 11908 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-23 14:48:31.209  INFO 11908 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 14:48:25 IST 2018]; root of context hierarchy
2018-03-23 14:48:31.284  INFO 11908 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-23 14:48:31.284  INFO 11908 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-23 14:48:31.286  INFO 11908 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-23 14:48:31.286  INFO 11908 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-23 14:48:31.325  INFO 11908 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 14:48:31.325  INFO 11908 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 14:48:31.375  INFO 11908 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 14:48:31.660  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-23 14:48:31.660  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:48:31.670  INFO 11908 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:48:31.795  INFO 11908 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-23 14:48:31.805  INFO 11908 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-23 14:48:32.105  INFO 11908 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-23 14:48:32.118  INFO 11908 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 8.147 seconds (JVM running for 16.327)
2018-03-23 14:48:42.114  INFO 11908 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-23 14:48:42.116  INFO 11908 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-23 14:48:42.130  INFO 11908 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 14 ms
2018-03-23 14:48:42.137  INFO 11908 --- [http-nio-8080-exec-2] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 14:48:42.155  INFO 11908 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 14:48:42.155  INFO 11908 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "6d7e28528bc492f86ecbafb6ad07269fdd7d77a0",
  "after": "ca9d49a56486e304891dc2691e0021fd0c5db534",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/6d7e28528bc4...ca9d49a56486",
  "commits": [
    {
      "id": "ca9d49a56486e304891dc2691e0021fd0c5db534",
      "tree_id": "dab3fcf2c423a68cc1bbdc56b525ff650cbee1bb",
      "distinct": true,
      "message": "adding petstore version",
      "timestamp": "2018-03-19T09:05:32+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/ca9d49a56486e304891dc2691e0021fd0c5db534",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "petstore-swagger1.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "ca9d49a56486e304891dc2691e0021fd0c5db534",
    "tree_id": "dab3fcf2c423a68cc1bbdc56b525ff650cbee1bb",
    "distinct": true,
    "message": "adding petstore version",
    "timestamp": "2018-03-19T09:05:32+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/ca9d49a56486e304891dc2691e0021fd0c5db534",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "petstore-swagger1.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-19T03:26:25Z",
    "pushed_at": 1521430547,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47139,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 14:48:50.617  INFO 11908 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@7107a880
2018-03-23 14:48:50.617  INFO 11908 --- [http-nio-8080-exec-2] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 14:48:52.833  INFO 11908 --- [http-nio-8080-exec-2] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/v2
2018-03-23 14:48:52.963  INFO 11908 --- [http-nio-8080-exec-2] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 14:48:54.199  INFO 11908 --- [http-nio-8080-exec-2] com.innominds.util.APIMProxy             : result is:	{
"error" : {
"code" : "ValidationException", "message" : {
"lang" : "en", "value" : "The request could not be completed due to data input errors."
}, "detail" : {
"errorCode" : "483", "devErrorMessage" : "The request could not be completed due to data input errors.", "userErrorMessage" : "The request could not be completed due to data input errors.", "userErrorKey" : "error.validation.entity", "validationErrors" : [
{
"field" : "SsgUrl", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}, {
"field" : "Name", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}
]
}
}
}
2018-03-23 14:51:02.396  INFO 11908 --- [RMI TCP Connection(10)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2018-03-23 14:51:02.396  INFO 11908 --- [RMI TCP Connection(10)-127.0.0.1] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 14:48:25 IST 2018]; root of context hierarchy
2018-03-23 14:51:02.417  INFO 11908 --- [RMI TCP Connection(10)-127.0.0.1] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2018-03-23 14:51:02.417  INFO 11908 --- [RMI TCP Connection(10)-127.0.0.1] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2018-03-23 14:51:06.729  INFO 14164 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 14164 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-23 14:51:06.729  INFO 14164 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-23 14:51:06.769  INFO 14164 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 14:51:06 IST 2018]; root of context hierarchy
2018-03-23 14:51:07.620  INFO 14164 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-23 14:51:07.630  INFO 14164 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-23 14:51:07.630  INFO 14164 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-23 14:51:07.710  INFO 14164 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-23 14:51:07.710  INFO 14164 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 951 ms
2018-03-23 14:51:07.921  INFO 14164 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-23 14:51:07.931  INFO 14164 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-23 14:51:07.931  INFO 14164 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-23 14:51:07.931  INFO 14164 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-23 14:51:07.931  INFO 14164 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-23 14:51:07.931  INFO 14164 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-23 14:51:07.931  INFO 14164 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-23 14:51:07.931  INFO 14164 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-23 14:51:07.931  INFO 14164 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-23 14:51:08.201  INFO 14164 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 14:51:06 IST 2018]; root of context hierarchy
2018-03-23 14:51:08.251  INFO 14164 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-23 14:51:08.251  INFO 14164 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-23 14:51:08.251  INFO 14164 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-23 14:51:08.251  INFO 14164 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-23 14:51:08.281  INFO 14164 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 14:51:08.281  INFO 14164 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 14:51:08.311  INFO 14164 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 14:51:08.492  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-23 14:51:08.502  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:51:08.502  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:51:08.502  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-23 14:51:08.502  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-23 14:51:08.502  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-23 14:51:08.502  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:51:08.502  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-23 14:51:08.502  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:51:08.502  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:51:08.502  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:51:08.512  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-23 14:51:08.512  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-23 14:51:08.512  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:51:08.512  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-23 14:51:08.512  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:51:08.512  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:51:08.512  INFO 14164 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:51:08.602  INFO 14164 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-23 14:51:08.602  INFO 14164 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-23 14:51:08.692  INFO 14164 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-23 14:51:08.692  INFO 14164 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 2.174 seconds (JVM running for 3.007)
2018-03-23 14:51:19.250  INFO 14164 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-23 14:51:19.250  INFO 14164 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-23 14:51:19.251  INFO 14164 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 1 ms
2018-03-23 14:51:19.261  INFO 14164 --- [http-nio-8080-exec-2] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 14:51:19.276  INFO 14164 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 14:51:19.276  INFO 14164 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "6d7e28528bc492f86ecbafb6ad07269fdd7d77a0",
  "after": "ca9d49a56486e304891dc2691e0021fd0c5db534",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/6d7e28528bc4...ca9d49a56486",
  "commits": [
    {
      "id": "ca9d49a56486e304891dc2691e0021fd0c5db534",
      "tree_id": "dab3fcf2c423a68cc1bbdc56b525ff650cbee1bb",
      "distinct": true,
      "message": "adding petstore version",
      "timestamp": "2018-03-19T09:05:32+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/ca9d49a56486e304891dc2691e0021fd0c5db534",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "petstore-swagger1.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "ca9d49a56486e304891dc2691e0021fd0c5db534",
    "tree_id": "dab3fcf2c423a68cc1bbdc56b525ff650cbee1bb",
    "distinct": true,
    "message": "adding petstore version",
    "timestamp": "2018-03-19T09:05:32+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/ca9d49a56486e304891dc2691e0021fd0c5db534",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "petstore-swagger1.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-19T03:26:25Z",
    "pushed_at": 1521430547,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47139,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 14:51:27.108  INFO 14164 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@8f9fe72
2018-03-23 14:51:27.108  INFO 14164 --- [http-nio-8080-exec-2] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 14:51:29.090  INFO 14164 --- [http-nio-8080-exec-2] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/v2
2018-03-23 14:51:29.152  INFO 14164 --- [http-nio-8080-exec-2] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 14:51:30.073  INFO 14164 --- [http-nio-8080-exec-2] com.innominds.util.APIMProxy             : result is:	{
"error" : {
"code" : "ValidationException", "message" : {
"lang" : "en", "value" : "The request could not be completed due to data input errors."
}, "detail" : {
"errorCode" : "483", "devErrorMessage" : "The request could not be completed due to data input errors.", "userErrorMessage" : "The request could not be completed due to data input errors.", "userErrorKey" : "error.validation.entity", "validationErrors" : [
{
"field" : "SsgUrl", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}, {
"field" : "Name", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}
]
}
}
}
2018-03-23 14:52:29.013  INFO 14164 --- [RMI TCP Connection(8)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2018-03-23 14:52:29.013  INFO 14164 --- [RMI TCP Connection(8)-127.0.0.1] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 14:51:06 IST 2018]; root of context hierarchy
2018-03-23 14:52:29.013  INFO 14164 --- [RMI TCP Connection(8)-127.0.0.1] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2018-03-23 14:52:29.013  INFO 14164 --- [RMI TCP Connection(8)-127.0.0.1] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2018-03-23 14:52:33.094  INFO 13176 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 13176 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-23 14:52:33.094  INFO 13176 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-23 14:52:33.144  INFO 13176 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 14:52:33 IST 2018]; root of context hierarchy
2018-03-23 14:52:34.067  INFO 13176 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-23 14:52:34.067  INFO 13176 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-23 14:52:34.067  INFO 13176 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-23 14:52:34.158  INFO 13176 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-23 14:52:34.158  INFO 13176 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1014 ms
2018-03-23 14:52:34.369  INFO 13176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-23 14:52:34.369  INFO 13176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-23 14:52:34.369  INFO 13176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-23 14:52:34.369  INFO 13176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-23 14:52:34.369  INFO 13176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-23 14:52:34.369  INFO 13176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-23 14:52:34.369  INFO 13176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-23 14:52:34.369  INFO 13176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-23 14:52:34.369  INFO 13176 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-23 14:52:34.629  INFO 13176 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 14:52:33 IST 2018]; root of context hierarchy
2018-03-23 14:52:34.669  INFO 13176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-23 14:52:34.669  INFO 13176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-23 14:52:34.669  INFO 13176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-23 14:52:34.669  INFO 13176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-23 14:52:34.690  INFO 13176 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 14:52:34.690  INFO 13176 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 14:52:34.717  INFO 13176 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 14:52:34.917  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 14:52:34.927  INFO 13176 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-23 14:52:35.017  INFO 13176 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-23 14:52:35.027  INFO 13176 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-23 14:52:35.107  INFO 13176 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-23 14:52:35.107  INFO 13176 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 2.214 seconds (JVM running for 3.083)
2018-03-23 14:52:42.430  INFO 13176 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-23 14:52:42.430  INFO 13176 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-23 14:52:42.431  INFO 13176 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 1 ms
2018-03-23 14:52:42.441  INFO 13176 --- [http-nio-8080-exec-1] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 14:52:42.456  INFO 13176 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 14:52:42.459  INFO 13176 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "6d7e28528bc492f86ecbafb6ad07269fdd7d77a0",
  "after": "ca9d49a56486e304891dc2691e0021fd0c5db534",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/6d7e28528bc4...ca9d49a56486",
  "commits": [
    {
      "id": "ca9d49a56486e304891dc2691e0021fd0c5db534",
      "tree_id": "dab3fcf2c423a68cc1bbdc56b525ff650cbee1bb",
      "distinct": true,
      "message": "adding petstore version",
      "timestamp": "2018-03-19T09:05:32+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/ca9d49a56486e304891dc2691e0021fd0c5db534",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "petstore-swagger1.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "ca9d49a56486e304891dc2691e0021fd0c5db534",
    "tree_id": "dab3fcf2c423a68cc1bbdc56b525ff650cbee1bb",
    "distinct": true,
    "message": "adding petstore version",
    "timestamp": "2018-03-19T09:05:32+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/ca9d49a56486e304891dc2691e0021fd0c5db534",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "petstore-swagger1.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-19T03:26:25Z",
    "pushed_at": 1521430547,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47139,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 14:52:50.326  INFO 13176 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@684f20a4
2018-03-23 14:52:50.326  INFO 13176 --- [http-nio-8080-exec-1] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 14:52:53.490  INFO 13176 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/v2
2018-03-23 14:52:53.550  INFO 13176 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 14:52:54.360  INFO 13176 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{
"error" : {
"code" : "ValidationException", "message" : {
"lang" : "en", "value" : "The request could not be completed due to data input errors."
}, "detail" : {
"errorCode" : "483", "devErrorMessage" : "The request could not be completed due to data input errors.", "userErrorMessage" : "The request could not be completed due to data input errors.", "userErrorKey" : "error.validation.entity", "validationErrors" : [
{
"field" : "SsgUrl", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}, {
"field" : "Name", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}
]
}
}
}
2018-03-23 15:18:48.576  INFO 13176 --- [RMI TCP Connection(33)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2018-03-23 15:18:48.576  INFO 13176 --- [RMI TCP Connection(33)-127.0.0.1] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 14:52:33 IST 2018]; root of context hierarchy
2018-03-23 15:18:48.607  INFO 13176 --- [RMI TCP Connection(33)-127.0.0.1] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2018-03-23 15:18:48.607  INFO 13176 --- [RMI TCP Connection(33)-127.0.0.1] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2018-03-23 15:18:54.660  INFO 7200 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 7200 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-23 15:18:54.660  INFO 7200 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-23 15:18:54.700  INFO 7200 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 15:18:54 IST 2018]; root of context hierarchy
2018-03-23 15:18:55.584  INFO 7200 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-23 15:18:55.584  INFO 7200 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-23 15:18:55.584  INFO 7200 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-23 15:18:55.681  INFO 7200 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-23 15:18:55.681  INFO 7200 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 981 ms
2018-03-23 15:18:55.875  INFO 7200 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-23 15:18:55.875  INFO 7200 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-23 15:18:55.875  INFO 7200 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-23 15:18:55.875  INFO 7200 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-23 15:18:55.875  INFO 7200 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-23 15:18:55.875  INFO 7200 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-23 15:18:55.875  INFO 7200 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-23 15:18:55.875  INFO 7200 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-23 15:18:55.878  INFO 7200 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-23 15:18:56.149  INFO 7200 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 15:18:54 IST 2018]; root of context hierarchy
2018-03-23 15:18:56.189  INFO 7200 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-23 15:18:56.189  INFO 7200 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-23 15:18:56.189  INFO 7200 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-23 15:18:56.189  INFO 7200 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-23 15:18:56.200  INFO 7200 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 15:18:56.200  INFO 7200 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 15:18:56.225  INFO 7200 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 15:18:56.427  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-23 15:18:56.428  INFO 7200 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-23 15:18:56.519  INFO 7200 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-23 15:18:56.527  INFO 7200 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-23 15:18:56.631  INFO 7200 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-23 15:18:56.631  INFO 7200 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 2.173 seconds (JVM running for 3.015)
2018-03-23 15:19:26.692  INFO 7200 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-23 15:19:26.692  INFO 7200 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-23 15:19:26.693  INFO 7200 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 1 ms
2018-03-23 15:19:26.713  INFO 7200 --- [http-nio-8080-exec-1] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 15:19:26.733  INFO 7200 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 15:19:26.733  INFO 7200 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "6d7e28528bc492f86ecbafb6ad07269fdd7d77a0",
  "after": "ca9d49a56486e304891dc2691e0021fd0c5db534",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/6d7e28528bc4...ca9d49a56486",
  "commits": [
    {
      "id": "ca9d49a56486e304891dc2691e0021fd0c5db534",
      "tree_id": "dab3fcf2c423a68cc1bbdc56b525ff650cbee1bb",
      "distinct": true,
      "message": "adding petstore version",
      "timestamp": "2018-03-19T09:05:32+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/ca9d49a56486e304891dc2691e0021fd0c5db534",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "petstore-swagger1.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "ca9d49a56486e304891dc2691e0021fd0c5db534",
    "tree_id": "dab3fcf2c423a68cc1bbdc56b525ff650cbee1bb",
    "distinct": true,
    "message": "adding petstore version",
    "timestamp": "2018-03-19T09:05:32+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/ca9d49a56486e304891dc2691e0021fd0c5db534",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "petstore-swagger1.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-19T03:26:25Z",
    "pushed_at": 1521430547,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47139,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 15:19:35.194  INFO 7200 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@fcc61a7
2018-03-23 15:19:35.204  INFO 7200 --- [http-nio-8080-exec-1] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 15:19:37.065  INFO 7200 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/v2
2018-03-23 15:19:37.193  INFO 7200 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 15:19:38.119  INFO 7200 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{
"error" : {
"code" : "ValidationException", "message" : {
"lang" : "en", "value" : "The request could not be completed due to data input errors."
}, "detail" : {
"errorCode" : "483", "devErrorMessage" : "The request could not be completed due to data input errors.", "userErrorMessage" : "The request could not be completed due to data input errors.", "userErrorKey" : "error.validation.entity", "validationErrors" : [
{
"field" : "SsgUrl", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}, {
"field" : "Name", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}
]
}
}
}
2018-03-23 15:39:15.852  INFO 7200 --- [http-nio-8080-exec-5] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 15:39:15.855  INFO 7200 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 15:39:15.855  INFO 7200 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "ca9d49a56486e304891dc2691e0021fd0c5db534",
  "after": "9a47cf4eebc837e8f989b9f092b1cd37ebf97d3e",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/ca9d49a56486...9a47cf4eebc8",
  "commits": [
    {
      "id": "9a47cf4eebc837e8f989b9f092b1cd37ebf97d3e",
      "tree_id": "3fb8f634dfe3364d086b6c5431503d38c74617f8",
      "distinct": true,
      "message": "added orchestration-api.json",
      "timestamp": "2018-03-23T15:35:27+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/9a47cf4eebc837e8f989b9f092b1cd37ebf97d3e",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "orchestration-api.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "9a47cf4eebc837e8f989b9f092b1cd37ebf97d3e",
    "tree_id": "3fb8f634dfe3364d086b6c5431503d38c74617f8",
    "distinct": true,
    "message": "added orchestration-api.json",
    "timestamp": "2018-03-23T15:35:27+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/9a47cf4eebc837e8f989b9f092b1cd37ebf97d3e",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "orchestration-api.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-19T03:35:48Z",
    "pushed_at": 1521799549,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47141,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 15:39:24.356  INFO 7200 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@321700ec
2018-03-23 15:39:24.357  INFO 7200 --- [http-nio-8080-exec-5] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 15:39:36.373  INFO 7200 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 15:39:39.140  INFO 7200 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('db306fbf-9943-4d7a-8212-e293553f43fc')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger orchestration-api.json","SpecFilesize":"81015","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1521799310370","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"orchestration-api.json","SsgUrl":"orchestration-api.json","AccessStatus":"PRIVATE","Uuid":"db306fbf-9943-4d7a-8212-e293553f43fc","ApiLocationUrl":"https://swagger.io","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-23 15:50:06.348  INFO 7200 --- [http-nio-8080-exec-8] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 15:50:06.350  INFO 7200 --- [http-nio-8080-exec-8] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 15:50:06.351  INFO 7200 --- [http-nio-8080-exec-8] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "9a47cf4eebc837e8f989b9f092b1cd37ebf97d3e",
  "after": "006dc25550d6eb042a5e2ceb7037419c524a3989",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/9a47cf4eebc8...006dc25550d6",
  "commits": [
    {
      "id": "006dc25550d6eb042a5e2ceb7037419c524a3989",
      "tree_id": "abe9082aa868602b768e3c846c649bb046dd2c49",
      "distinct": true,
      "message": "added swagger -collections-veena.json",
      "timestamp": "2018-03-23T15:48:22+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/006dc25550d6eb042a5e2ceb7037419c524a3989",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "swagger -collections-veena.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "006dc25550d6eb042a5e2ceb7037419c524a3989",
    "tree_id": "abe9082aa868602b768e3c846c649bb046dd2c49",
    "distinct": true,
    "message": "added swagger -collections-veena.json",
    "timestamp": "2018-03-23T15:48:22+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/006dc25550d6eb042a5e2ceb7037419c524a3989",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "swagger -collections-veena.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-23T10:05:50Z",
    "pushed_at": 1521800335,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47141,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 15:50:13.781  INFO 7200 --- [http-nio-8080-exec-8] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@518c71cb
2018-03-23 15:50:13.782  INFO 7200 --- [http-nio-8080-exec-8] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 15:50:15.799  INFO 7200 --- [http-nio-8080-exec-8] com.innominds.util.JsonFormatter         : application url is:	http://localhost:9001/
2018-03-23 15:50:15.807  INFO 7200 --- [http-nio-8080-exec-8] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 15:50:16.620  INFO 7200 --- [http-nio-8080-exec-8] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('c47c16ea-cd92-4e7b-88c9-57a155fac9d3')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"test","InSync":"0","PrivateDescription":"test","ServiceDisruption":"0","Name":"Swagger swagger -collections-veena.json","SpecFilesize":"1021","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewogICJpbmZvIjogewogICAgInRpdGxlIjogInRlc3ROZXciLAogICAgInZlcnNpb24iOiAiMS4wLjAiLAogICAgImRlc2NyaXB0aW9uIjogInRlc3QiCiAgfSwKICAic2NoZW1lcyI6IFsKICAgICJodHRwIgogIF0sCiAgImhvc3QiOiAibG9jYWxob3N0OjkwMDEiLAogICJiYXNlUGF0aCI6ICIvIiwKICAic3dhZ2dlciI6ICIyLjAiLAogICJwYXRocyI6IHsKICAgICIvcm9vdC9wZXQiOiB7CiAgICAgICJwb3N0IjogewogICAgICAgICJ0YWdzIjogWwogICAgICAgICAgImFwaSIKICAgICAgICBdLAogICAgICAgICJzdW1tYXJ5IjogImRhdGEiLAogICAgICAgICJ0aXRsZSI6ICJ1c2VyZ2V0RGF0YSIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogImRhdGEiLAogICAgICAgICJjb25zdW1lcyI6IFsKICAgICAgICAgICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICJhcHBsaWNhdGlvbi94bWwiCiAgICAgICAgXSwKICAgICAgICAicGFyYW1ldGVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAicGV0IiwKICAgICAgICAgICAgImluIjogImJvZHkiLAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwKICAgICAgICAgICAgInNjaGVtYSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9wZXQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVzcG9uc2VzIjogewogICAgICAgICAgIm5hbWUiOiAib21pZSIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogICJkZWZpbml0aW9ucyI6IHsKICAgICJwZXQiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQ==","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1521799948313","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"swagger -collections-veena.json","SsgUrl":"swagger -collections-veena.json","AccessStatus":"PRIVATE","Uuid":"c47c16ea-cd92-4e7b-88c9-57a155fac9d3","ApiLocationUrl":"http://localhost:9001/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-23 16:20:04.949  INFO 7200 --- [http-nio-8080-exec-2] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 16:20:04.951  INFO 7200 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 16:20:04.952  INFO 7200 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "006dc25550d6eb042a5e2ceb7037419c524a3989",
  "after": "3902e25ee84778bc5a30e07bcd7ec9ad21bad0aa",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/006dc25550d6...3902e25ee847",
  "commits": [
    {
      "id": "3902e25ee84778bc5a30e07bcd7ec9ad21bad0aa",
      "tree_id": "dfffd80dfb28edd39421cba27fa1f3f69b2123b6",
      "distinct": true,
      "message": "updated the swagger -collections-veena.json file",
      "timestamp": "2018-03-23T16:18:36+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/3902e25ee84778bc5a30e07bcd7ec9ad21bad0aa",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [

      ],
      "removed": [

      ],
      "modified": [
        "swagger -collections-veena.json"
      ]
    }
  ],
  "head_commit": {
    "id": "3902e25ee84778bc5a30e07bcd7ec9ad21bad0aa",
    "tree_id": "dfffd80dfb28edd39421cba27fa1f3f69b2123b6",
    "distinct": true,
    "message": "updated the swagger -collections-veena.json file",
    "timestamp": "2018-03-23T16:18:36+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/3902e25ee84778bc5a30e07bcd7ec9ad21bad0aa",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [

    ],
    "removed": [

    ],
    "modified": [
      "swagger -collections-veena.json"
    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-23T10:18:56Z",
    "pushed_at": 1521802128,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47141,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 16:20:12.718  INFO 7200 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@5f03eeea
2018-03-23 16:20:12.718  INFO 7200 --- [http-nio-8080-exec-2] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 16:20:14.643  INFO 7200 --- [http-nio-8080-exec-2] com.innominds.util.JsonFormatter         : application url is:	http://localhost/
2018-03-23 16:20:14.643  INFO 7200 --- [http-nio-8080-exec-2] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 16:20:15.410  INFO 7200 --- [http-nio-8080-exec-2] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('fa91c7c9-15e1-4274-acca-e7096cf73d5e')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"test","InSync":"0","PrivateDescription":"test","ServiceDisruption":"0","Name":"Swagger swagger -collections-veena.json","SpecFilesize":"1102","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewogICJpbmZvIjogewogICAgInRpdGxlIjogInRlc3ROZXciLAogICAgInZlcnNpb24iOiAiMS4wLjAiLAogICAgImRlc2NyaXB0aW9uIjogInRlc3QiCiAgfSwKICAic2NoZW1lcyI6IFsKICAgICJodHRwIgogIF0sCiAgImhvc3QiOiAibG9jYWxob3N0IiwKICAiYmFzZVBhdGgiOiAiLyIsCiAgInN3YWdnZXIiOiAiMi4wIiwKICAicGF0aHMiOiB7CiAgICAiL3Jvb3QvcGV0IjogewogICAgICAicG9zdCI6IHsKICAgICAgICAidGFncyI6IFsKICAgICAgICAgICJhcGkiCiAgICAgICAgXSwKICAgICAgICAic3VtbWFyeSI6ICJkYXRhIiwKICAgICAgICAidGl0bGUiOiAidXNlcmdldERhdGEiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJkYXRhIiwKICAgICAgICAiY29uc3VtZXMiOiBbCiAgICAgICAgICAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAiYXBwbGljYXRpb24veG1sIgogICAgICAgIF0sCgkJICJwcm9kdWNlcyI6IFsKICAgICAgICAgICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICJhcHBsaWNhdGlvbi94bWwiCiAgICAgICAgXSwKICAgICAgICAicGFyYW1ldGVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAicGV0IiwKICAgICAgICAgICAgImluIjogImJvZHkiLAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwKICAgICAgICAgICAgInNjaGVtYSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9wZXQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVzcG9uc2VzIjogewogICAgICAgICAgIm5hbWUiOiAib21pZSIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogICJkZWZpbml0aW9ucyI6IHsKICAgICJwZXQiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQ==","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1521801747116","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"swagger -collections-veena.json","SsgUrl":"swagger -collections-veena.json","AccessStatus":"PRIVATE","Uuid":"fa91c7c9-15e1-4274-acca-e7096cf73d5e","ApiLocationUrl":"http://localhost/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-23 16:24:55.135  INFO 7200 --- [http-nio-8080-exec-4] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 16:24:55.138  INFO 7200 --- [http-nio-8080-exec-4] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 16:24:55.138  INFO 7200 --- [http-nio-8080-exec-4] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "3902e25ee84778bc5a30e07bcd7ec9ad21bad0aa",
  "after": "e19c443db1a8d66c79c33448156b4b8ca3d82d9a",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/3902e25ee847...e19c443db1a8",
  "commits": [
    {
      "id": "e19c443db1a8d66c79c33448156b4b8ca3d82d9a",
      "tree_id": "ce3a92b9a0578000427e00d88dcb23c1dcd72e81",
      "distinct": true,
      "message": "updated swagger -collections-veena.json file",
      "timestamp": "2018-03-23T16:23:45+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/e19c443db1a8d66c79c33448156b4b8ca3d82d9a",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [

      ],
      "removed": [

      ],
      "modified": [
        "swagger -collections-veena.json"
      ]
    }
  ],
  "head_commit": {
    "id": "e19c443db1a8d66c79c33448156b4b8ca3d82d9a",
    "tree_id": "ce3a92b9a0578000427e00d88dcb23c1dcd72e81",
    "distinct": true,
    "message": "updated swagger -collections-veena.json file",
    "timestamp": "2018-03-23T16:23:45+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/e19c443db1a8d66c79c33448156b4b8ca3d82d9a",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [

    ],
    "removed": [

    ],
    "modified": [
      "swagger -collections-veena.json"
    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-23T10:48:49Z",
    "pushed_at": 1521802437,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47141,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 16:25:02.691  INFO 7200 --- [http-nio-8080-exec-4] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@698d1c7b
2018-03-23 16:25:02.692  INFO 7200 --- [http-nio-8080-exec-4] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 16:25:04.124  INFO 7200 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://localhost/
2018-03-23 16:25:04.134  INFO 7200 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 16:25:04.674  INFO 7200 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('d2ad5f17-5e2a-4667-80c2-ca952063bc85')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"test","InSync":"0","PrivateDescription":"test","ServiceDisruption":"0","Name":"Swagger swagger -collections-veena.json","SpecFilesize":"1097","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewogICJpbmZvIjogewogICAgInRpdGxlIjogInRlc3ROZXciLAogICAgInZlcnNpb24iOiAiMS4wLjAiLAogICAgImRlc2NyaXB0aW9uIjogInRlc3QiCiAgfSwKICAic2NoZW1lcyI6IFsKICAgICJodHRwIgogIF0sCiAgImhvc3QiOiAibG9jYWxob3N0IiwKICAiYmFzZVBhdGgiOiAiLyIsCiAgInN3YWdnZXIiOiAiMi4wIiwKICAicGF0aHMiOiB7CiAgICAiL3BldCI6IHsKICAgICAgInBvc3QiOiB7CiAgICAgICAgInRhZ3MiOiBbCiAgICAgICAgICAiYXBpIgogICAgICAgIF0sCiAgICAgICAgInN1bW1hcnkiOiAiZGF0YSIsCiAgICAgICAgInRpdGxlIjogInVzZXJnZXREYXRhIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiZGF0YSIsCiAgICAgICAgImNvbnN1bWVzIjogWwogICAgICAgICAgImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICAgImFwcGxpY2F0aW9uL3htbCIKICAgICAgICBdLAoJCSAicHJvZHVjZXMiOiBbCiAgICAgICAgICAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAiYXBwbGljYXRpb24veG1sIgogICAgICAgIF0sCiAgICAgICAgInBhcmFtZXRlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogInBldCIsCiAgICAgICAgICAgICJpbiI6ICJib2R5IiwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAgICJyZXF1aXJlZCI6IHRydWUsCiAgICAgICAgICAgICJzY2hlbWEiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvcGV0IgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlc3BvbnNlcyI6IHsKICAgICAgICAgICJuYW1lIjogIm9taWUiCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICAiZGVmaW5pdGlvbnMiOiB7CiAgICAicGV0IjogewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0=","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1521802036404","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"swagger -collections-veena.json","SsgUrl":"swagger -collections-veena.json","AccessStatus":"PRIVATE","Uuid":"d2ad5f17-5e2a-4667-80c2-ca952063bc85","ApiLocationUrl":"http://localhost/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-23 16:31:41.096  INFO 7200 --- [http-nio-8080-exec-7] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 16:31:41.097  INFO 7200 --- [http-nio-8080-exec-7] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 16:31:41.098  INFO 7200 --- [http-nio-8080-exec-7] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "e19c443db1a8d66c79c33448156b4b8ca3d82d9a",
  "after": "0fa385d0279bbe160d9918ce823cdbe49a6c22bb",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/e19c443db1a8...0fa385d0279b",
  "commits": [
    {
      "id": "0fa385d0279bbe160d9918ce823cdbe49a6c22bb",
      "tree_id": "bc5404a69dd903e2a4872d6df1e54f3ad2991868",
      "distinct": true,
      "message": "updated the swagger -collections-veena.json file",
      "timestamp": "2018-03-23T16:30:11+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/0fa385d0279bbe160d9918ce823cdbe49a6c22bb",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [

      ],
      "removed": [

      ],
      "modified": [
        "swagger -collections-veena.json"
      ]
    }
  ],
  "head_commit": {
    "id": "0fa385d0279bbe160d9918ce823cdbe49a6c22bb",
    "tree_id": "bc5404a69dd903e2a4872d6df1e54f3ad2991868",
    "distinct": true,
    "message": "updated the swagger -collections-veena.json file",
    "timestamp": "2018-03-23T16:30:11+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/0fa385d0279bbe160d9918ce823cdbe49a6c22bb",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [

    ],
    "removed": [

    ],
    "modified": [
      "swagger -collections-veena.json"
    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-23T10:53:58Z",
    "pushed_at": 1521802824,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47141,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 16:31:48.255  INFO 7200 --- [http-nio-8080-exec-7] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@79b567f6
2018-03-23 16:31:48.256  INFO 7200 --- [http-nio-8080-exec-7] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 16:31:49.742  INFO 7200 --- [http-nio-8080-exec-7] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-23 16:31:49.752  INFO 7200 --- [http-nio-8080-exec-7] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 16:31:50.402  INFO 7200 --- [http-nio-8080-exec-7] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('62180f1d-4e73-459d-8f1f-1db60b1a31f2')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"test","InSync":"0","PrivateDescription":"test","ServiceDisruption":"0","Name":"Swagger swagger -collections-veena.json","SpecFilesize":"1107","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewogICJpbmZvIjogewogICAgInRpdGxlIjogInRlc3ROZXciLAogICAgInZlcnNpb24iOiAiMS4wLjAiLAogICAgImRlc2NyaXB0aW9uIjogInRlc3QiCiAgfSwKICAic2NoZW1lcyI6IFsKICAgICJodHRwIgogIF0sCiAgImhvc3QiOiAicGV0c3RvcmUuc3dhZ2dlci5pbyIsCiAgImJhc2VQYXRoIjogIi8iLAogICJzd2FnZ2VyIjogIjIuMCIsCiAgInBhdGhzIjogewogICAgIi9wZXQiOiB7CiAgICAgICJwb3N0IjogewogICAgICAgICJ0YWdzIjogWwogICAgICAgICAgImFwaSIKICAgICAgICBdLAogICAgICAgICJzdW1tYXJ5IjogImRhdGEiLAogICAgICAgICJ0aXRsZSI6ICJ1c2VyZ2V0RGF0YSIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogImRhdGEiLAogICAgICAgICJjb25zdW1lcyI6IFsKICAgICAgICAgICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICJhcHBsaWNhdGlvbi94bWwiCiAgICAgICAgXSwKCQkgInByb2R1Y2VzIjogWwogICAgICAgICAgImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICAgImFwcGxpY2F0aW9uL3htbCIKICAgICAgICBdLAogICAgICAgICJwYXJhbWV0ZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJwZXQiLAogICAgICAgICAgICAiaW4iOiAiYm9keSIsCiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICAgICAicmVxdWlyZWQiOiB0cnVlLAogICAgICAgICAgICAic2NoZW1hIjogewogICAgICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL3BldCIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZXNwb25zZXMiOiB7CiAgICAgICAgICAibmFtZSI6ICJvbWllIgogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCiAgImRlZmluaXRpb25zIjogewogICAgInBldCI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1521802442152","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"swagger -collections-veena.json","SsgUrl":"swagger -collections-veena.json","AccessStatus":"PRIVATE","Uuid":"62180f1d-4e73-459d-8f1f-1db60b1a31f2","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-23 17:06:09.877  INFO 7200 --- [http-nio-8080-exec-10] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 17:06:09.879  INFO 7200 --- [http-nio-8080-exec-10] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 17:06:09.879  INFO 7200 --- [http-nio-8080-exec-10] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "0fa385d0279bbe160d9918ce823cdbe49a6c22bb",
  "after": "b508b1b30507cb334d8ff30461dcc65dfe13948d",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/0fa385d0279b...b508b1b30507",
  "commits": [
    {
      "id": "b508b1b30507cb334d8ff30461dcc65dfe13948d",
      "tree_id": "e2a53176369813c22ddc8bb514ed9468f4061263",
      "distinct": true,
      "message": "updated swagger -collections-veena.json",
      "timestamp": "2018-03-23T17:05:05+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/b508b1b30507cb334d8ff30461dcc65dfe13948d",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [

      ],
      "removed": [

      ],
      "modified": [
        "swagger -collections-veena.json"
      ]
    }
  ],
  "head_commit": {
    "id": "b508b1b30507cb334d8ff30461dcc65dfe13948d",
    "tree_id": "e2a53176369813c22ddc8bb514ed9468f4061263",
    "distinct": true,
    "message": "updated swagger -collections-veena.json",
    "timestamp": "2018-03-23T17:05:05+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/b508b1b30507cb334d8ff30461dcc65dfe13948d",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [

    ],
    "removed": [

    ],
    "modified": [
      "swagger -collections-veena.json"
    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-23T11:00:25Z",
    "pushed_at": 1521804916,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47144,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 17:06:16.986  INFO 7200 --- [http-nio-8080-exec-10] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@770def9d
2018-03-23 17:06:16.989  INFO 7200 --- [http-nio-8080-exec-10] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 17:06:18.336  INFO 7200 --- [http-nio-8080-exec-10] com.innominds.util.JsonFormatter         : application url is:	http://apim.dev.ca.com:38443/
2018-03-23 17:06:18.346  INFO 7200 --- [http-nio-8080-exec-10] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 17:06:18.888  INFO 7200 --- [http-nio-8080-exec-10] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('54d13a02-be3c-4f40-8809-93ae0fda179e')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"test","InSync":"0","PrivateDescription":"test","ServiceDisruption":"0","Name":"Swagger swagger -collections-veena.json","SpecFilesize":"1114","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewogICJpbmZvIjogewogICAgInRpdGxlIjogInRlc3ROZXciLAogICAgInZlcnNpb24iOiAiMS4wLjAiLAogICAgImRlc2NyaXB0aW9uIjogInRlc3QiCiAgfSwKICAic2NoZW1lcyI6IFsKICAgICJodHRwIgogIF0sCiAgImhvc3QiOiAiYXBpbS5kZXYuY2EuY29tOjM4NDQzIiwKICAiYmFzZVBhdGgiOiAiLyIsCiAgInN3YWdnZXIiOiAiMi4wIiwKICAicGF0aHMiOiB7CiAgICAiL3Jvb3QvcGV0IjogewogICAgICAicG9zdCI6IHsKICAgICAgICAidGFncyI6IFsKICAgICAgICAgICJhcGkiCiAgICAgICAgXSwKICAgICAgICAic3VtbWFyeSI6ICJkYXRhIiwKICAgICAgICAidGl0bGUiOiAidXNlcmdldERhdGEiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJkYXRhIiwKICAgICAgICAiY29uc3VtZXMiOiBbCiAgICAgICAgICAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAiYXBwbGljYXRpb24veG1sIgogICAgICAgIF0sCgkJICJwcm9kdWNlcyI6IFsKICAgICAgICAgICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICJhcHBsaWNhdGlvbi94bWwiCiAgICAgICAgXSwKICAgICAgICAicGFyYW1ldGVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAicGV0IiwKICAgICAgICAgICAgImluIjogImJvZHkiLAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwKICAgICAgICAgICAgInNjaGVtYSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9wZXQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVzcG9uc2VzIjogewogICAgICAgICAgIm5hbWUiOiAib21pZSIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogICJkZWZpbml0aW9ucyI6IHsKICAgICJwZXQiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQ==","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1521804510642","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"swagger -collections-veena.json","SsgUrl":"swagger -collections-veena.json","AccessStatus":"PRIVATE","Uuid":"54d13a02-be3c-4f40-8809-93ae0fda179e","ApiLocationUrl":"http://apim.dev.ca.com:38443/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-23 17:16:05.687  INFO 7200 --- [http-nio-8080-exec-3] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-23 17:16:05.688  INFO 7200 --- [http-nio-8080-exec-3] com.innominds.rest.APIMRestService       : am in create api()
2018-03-23 17:16:05.689  INFO 7200 --- [http-nio-8080-exec-3] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "b508b1b30507cb334d8ff30461dcc65dfe13948d",
  "after": "92c48bec383b92d670717f2e0417e94be019a5e4",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/b508b1b30507...92c48bec383b",
  "commits": [
    {
      "id": "92c48bec383b92d670717f2e0417e94be019a5e4",
      "tree_id": "20984b0a904356d36141a0a5519ccdc3ccfeb896",
      "distinct": true,
      "message": "updated the swagger -collections-veena.json",
      "timestamp": "2018-03-23T17:14:22+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/92c48bec383b92d670717f2e0417e94be019a5e4",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [

      ],
      "removed": [

      ],
      "modified": [
        "swagger -collections-veena.json"
      ]
    }
  ],
  "head_commit": {
    "id": "92c48bec383b92d670717f2e0417e94be019a5e4",
    "tree_id": "20984b0a904356d36141a0a5519ccdc3ccfeb896",
    "distinct": true,
    "message": "updated the swagger -collections-veena.json",
    "timestamp": "2018-03-23T17:14:22+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/92c48bec383b92d670717f2e0417e94be019a5e4",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [

    ],
    "removed": [

    ],
    "modified": [
      "swagger -collections-veena.json"
    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-23T11:35:18Z",
    "pushed_at": 1521805478,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47144,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-23 17:16:12.767  INFO 7200 --- [http-nio-8080-exec-3] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@1e842713
2018-03-23 17:16:12.768  INFO 7200 --- [http-nio-8080-exec-3] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-23 17:16:14.245  INFO 7200 --- [http-nio-8080-exec-3] com.innominds.util.JsonFormatter         : application url is:	http://localhost:38443/
2018-03-23 17:16:14.287  INFO 7200 --- [http-nio-8080-exec-3] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-23 17:16:14.802  INFO 7200 --- [http-nio-8080-exec-3] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('47696811-7bec-49b8-b8dd-72cdff028355')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"test","InSync":"0","PrivateDescription":"test","ServiceDisruption":"0","Name":"Swagger swagger -collections-veena.json","SpecFilesize":"1108","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewogICJpbmZvIjogewogICAgInRpdGxlIjogInRlc3ROZXciLAogICAgInZlcnNpb24iOiAiMS4wLjAiLAogICAgImRlc2NyaXB0aW9uIjogInRlc3QiCiAgfSwKICAic2NoZW1lcyI6IFsKICAgICJodHRwIgogIF0sCiAgImhvc3QiOiAibG9jYWxob3N0OjM4NDQzIiwKICAiYmFzZVBhdGgiOiAiLyIsCiAgInN3YWdnZXIiOiAiMi4wIiwKICAicGF0aHMiOiB7CiAgICAiL3Jvb3QvcGV0IjogewogICAgICAicG9zdCI6IHsKICAgICAgICAidGFncyI6IFsKICAgICAgICAgICJhcGkiCiAgICAgICAgXSwKICAgICAgICAic3VtbWFyeSI6ICJkYXRhIiwKICAgICAgICAidGl0bGUiOiAidXNlcmdldERhdGEiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJkYXRhIiwKICAgICAgICAiY29uc3VtZXMiOiBbCiAgICAgICAgICAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAiYXBwbGljYXRpb24veG1sIgogICAgICAgIF0sCgkJICJwcm9kdWNlcyI6IFsKICAgICAgICAgICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICJhcHBsaWNhdGlvbi94bWwiCiAgICAgICAgXSwKICAgICAgICAicGFyYW1ldGVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAicGV0IiwKICAgICAgICAgICAgImluIjogImJvZHkiLAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwKICAgICAgICAgICAgInNjaGVtYSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9wZXQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVzcG9uc2VzIjogewogICAgICAgICAgIm5hbWUiOiAib21pZSIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogICJkZWZpbml0aW9ucyI6IHsKICAgICJwZXQiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQ==","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1521805106576","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"swagger -collections-veena.json","SsgUrl":"swagger -collections-veena.json","AccessStatus":"PRIVATE","Uuid":"47696811-7bec-49b8-b8dd-72cdff028355","ApiLocationUrl":"http://localhost:38443/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-23 19:54:45.007  INFO 7200 --- [RMI TCP Connection(173)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2018-03-23 19:54:45.048  INFO 7200 --- [RMI TCP Connection(173)-127.0.0.1] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Fri Mar 23 15:18:54 IST 2018]; root of context hierarchy
2018-03-23 19:54:45.303  INFO 7200 --- [RMI TCP Connection(173)-127.0.0.1] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2018-03-23 19:54:45.383  INFO 7200 --- [RMI TCP Connection(173)-127.0.0.1] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2018-03-26 11:44:52.583  INFO 2212 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 2212 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-26 11:44:52.698  INFO 2212 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-26 11:44:52.780  INFO 2212 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Mon Mar 26 11:44:52 IST 2018]; root of context hierarchy
2018-03-26 11:44:54.580  INFO 2212 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-26 11:44:54.611  INFO 2212 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-26 11:44:54.611  INFO 2212 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-26 11:44:54.771  INFO 2212 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-26 11:44:54.771  INFO 2212 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2001 ms
2018-03-26 11:44:54.976  INFO 2212 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-26 11:44:54.976  INFO 2212 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-26 11:44:54.976  INFO 2212 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-26 11:44:54.976  INFO 2212 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-26 11:44:54.976  INFO 2212 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-26 11:44:54.976  INFO 2212 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-26 11:44:54.976  INFO 2212 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-26 11:44:54.976  INFO 2212 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-26 11:44:54.976  INFO 2212 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-26 11:44:55.299  INFO 2212 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Mon Mar 26 11:44:52 IST 2018]; root of context hierarchy
2018-03-26 11:44:55.349  INFO 2212 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-26 11:44:55.349  INFO 2212 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-26 11:44:55.349  INFO 2212 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-26 11:44:55.359  INFO 2212 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-26 11:44:55.379  INFO 2212 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-26 11:44:55.379  INFO 2212 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-26 11:44:55.409  INFO 2212 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-26 11:44:55.661  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-26 11:44:55.664  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-26 11:44:55.666  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-26 11:44:55.666  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-26 11:44:55.667  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-26 11:44:55.667  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-26 11:44:55.667  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-26 11:44:55.670  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-26 11:44:55.670  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-26 11:44:55.670  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-26 11:44:55.672  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-26 11:44:55.672  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-26 11:44:55.672  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-26 11:44:55.672  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-26 11:44:55.672  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-26 11:44:55.672  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-26 11:44:55.675  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-26 11:44:55.675  INFO 2212 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-26 11:44:55.830  INFO 2212 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-26 11:44:55.842  INFO 2212 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-26 11:44:56.182  INFO 2212 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-26 11:44:56.187  INFO 2212 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 4.36 seconds (JVM running for 10.744)
2018-03-26 11:50:47.681  INFO 2212 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-26 11:50:47.681  INFO 2212 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-26 11:50:47.682  INFO 2212 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 1 ms
2018-03-26 11:50:47.702  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-26 11:50:47.714  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : am in create api()
2018-03-26 11:50:47.714  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "92c48bec383b92d670717f2e0417e94be019a5e4",
  "after": "0e367fa0bbbf177ec7926bbb6096cf48badf34a7",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/92c48bec383b...0e367fa0bbbf",
  "commits": [
    {
      "id": "0e367fa0bbbf177ec7926bbb6096cf48badf34a7",
      "tree_id": "62ec19565de7ecb981ada55946d7d4733d715c96",
      "distinct": true,
      "message": "added SwaggerDocumentTest.json",
      "timestamp": "2018-03-26T11:45:34+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/0e367fa0bbbf177ec7926bbb6096cf48badf34a7",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "SwaggerDocumentTest.json"
      ],
      "removed": [
        "swagger -collections-veena.json"
      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "0e367fa0bbbf177ec7926bbb6096cf48badf34a7",
    "tree_id": "62ec19565de7ecb981ada55946d7d4733d715c96",
    "distinct": true,
    "message": "added SwaggerDocumentTest.json",
    "timestamp": "2018-03-26T11:45:34+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/0e367fa0bbbf177ec7926bbb6096cf48badf34a7",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "SwaggerDocumentTest.json"
    ],
    "removed": [
      "swagger -collections-veena.json"
    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-23T11:44:40Z",
    "pushed_at": 1522044952,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47145,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-26 11:50:57.314  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@79679648
2018-03-26 11:50:57.314  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-26 11:50:59.825  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	https://reqres.in/api
2018-03-26 11:50:59.994  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-26 11:51:01.529  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('14a94ecd-0964-46ce-8dd5-e41b2b9bb8e5')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"","InSync":"0","PrivateDescription":"","ServiceDisruption":"0","Name":"Swagger SwaggerDocumentTest.json","SpecFilesize":"9101","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522044783620","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"SwaggerDocumentTest.json","SsgUrl":"SwaggerDocumentTest.json","AccessStatus":"PRIVATE","Uuid":"14a94ecd-0964-46ce-8dd5-e41b2b9bb8e5","ApiLocationUrl":"https://reqres.in/api","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-26 11:51:03.257  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://localhost:38443/
2018-03-26 11:51:03.264  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-26 11:51:04.265  INFO 2212 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{
"error" : {
"code" : "ValidationException", "message" : {
"lang" : "en", "value" : "The request could not be completed due to data input errors."
}, "detail" : {
"errorCode" : "483", "devErrorMessage" : "The request could not be completed due to data input errors.", "userErrorMessage" : "The request could not be completed due to data input errors.", "userErrorKey" : "error.validation.entity", "validationErrors" : [
{
"field" : "SsgUrl", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}, {
"field" : "Name", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}
]
}
}
}
2018-03-26 14:59:03.893  INFO 2212 --- [http-nio-8080-exec-5] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-26 14:59:03.896  INFO 2212 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : am in create api()
2018-03-26 14:59:03.896  INFO 2212 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "0e367fa0bbbf177ec7926bbb6096cf48badf34a7",
  "after": "4feca2f2d76baa968a6b8de62c6225890604b579",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/0e367fa0bbbf...4feca2f2d76b",
  "commits": [
    {
      "id": "4feca2f2d76baa968a6b8de62c6225890604b579",
      "tree_id": "e17606702a1b058b1dc64d8968e56bd970ff1aa7",
      "distinct": true,
      "message": "added jsonplaceholder.json",
      "timestamp": "2018-03-26T14:57:40+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/4feca2f2d76baa968a6b8de62c6225890604b579",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "jsonplaceholder.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "4feca2f2d76baa968a6b8de62c6225890604b579",
    "tree_id": "e17606702a1b058b1dc64d8968e56bd970ff1aa7",
    "distinct": true,
    "message": "added jsonplaceholder.json",
    "timestamp": "2018-03-26T14:57:40+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/4feca2f2d76baa968a6b8de62c6225890604b579",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "jsonplaceholder.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-26T06:15:53Z",
    "pushed_at": 1522056483,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47146,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-26 14:59:52.015  INFO 2212 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@1d8a69f7
2018-03-26 14:59:52.017  INFO 2212 --- [http-nio-8080-exec-5] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-26 14:59:54.499  INFO 2212 --- [http-nio-8080-exec-5] com.innominds.util.JsonFormatter         : application url is:	https://jsonplaceholder.typicode.com/
2018-03-26 14:59:54.589  INFO 2212 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-26 15:01:53.123  INFO 2212 --- [http-nio-8080-exec-7] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-26 15:01:53.126  INFO 2212 --- [http-nio-8080-exec-7] com.innominds.rest.APIMRestService       : am in create api()
2018-03-26 15:01:53.126  INFO 2212 --- [http-nio-8080-exec-7] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "0e367fa0bbbf177ec7926bbb6096cf48badf34a7",
  "after": "4feca2f2d76baa968a6b8de62c6225890604b579",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/0e367fa0bbbf...4feca2f2d76b",
  "commits": [
    {
      "id": "4feca2f2d76baa968a6b8de62c6225890604b579",
      "tree_id": "e17606702a1b058b1dc64d8968e56bd970ff1aa7",
      "distinct": true,
      "message": "added jsonplaceholder.json",
      "timestamp": "2018-03-26T14:57:40+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/4feca2f2d76baa968a6b8de62c6225890604b579",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "jsonplaceholder.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "4feca2f2d76baa968a6b8de62c6225890604b579",
    "tree_id": "e17606702a1b058b1dc64d8968e56bd970ff1aa7",
    "distinct": true,
    "message": "added jsonplaceholder.json",
    "timestamp": "2018-03-26T14:57:40+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/4feca2f2d76baa968a6b8de62c6225890604b579",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "jsonplaceholder.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-26T06:15:53Z",
    "pushed_at": 1522056483,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47146,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-26 15:02:00.327  INFO 2212 --- [http-nio-8080-exec-7] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@60e8432
2018-03-26 15:02:00.330  INFO 2212 --- [http-nio-8080-exec-7] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-26 15:02:02.331  INFO 2212 --- [http-nio-8080-exec-7] com.innominds.util.JsonFormatter         : application url is:	https://jsonplaceholder.typicode.com/
2018-03-26 15:02:02.334  INFO 2212 --- [http-nio-8080-exec-7] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-26 15:02:02.952  INFO 2212 --- [http-nio-8080-exec-7] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('096612a3-6189-45f0-855d-398236af5147')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"","InSync":"0","PrivateDescription":"","ServiceDisruption":"0","Name":"Swagger jsonplaceholder.json","SpecFilesize":"7824","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522056251517","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"jsonplaceholder.json","SsgUrl":"jsonplaceholder.json","AccessStatus":"PRIVATE","Uuid":"096612a3-6189-45f0-855d-398236af5147","ApiLocationUrl":"https://jsonplaceholder.typicode.com/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-26 16:41:41.887  INFO 2212 --- [RMI TCP Connection(304)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2018-03-26 16:41:41.907  INFO 2212 --- [RMI TCP Connection(304)-127.0.0.1] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Mon Mar 26 11:44:52 IST 2018]; root of context hierarchy
2018-03-26 16:41:41.938  INFO 2212 --- [RMI TCP Connection(304)-127.0.0.1] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2018-03-26 16:41:41.968  INFO 2212 --- [RMI TCP Connection(304)-127.0.0.1] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2018-03-27 14:56:54.308  INFO 6320 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 6320 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-27 14:56:54.368  INFO 6320 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-27 14:56:54.888  INFO 6320 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Tue Mar 27 14:56:54 IST 2018]; root of context hierarchy
2018-03-27 14:56:58.410  INFO 6320 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-27 14:56:58.444  INFO 6320 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-27 14:56:58.444  INFO 6320 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-27 14:56:58.659  INFO 6320 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-27 14:56:58.659  INFO 6320 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3871 ms
2018-03-27 14:56:58.929  INFO 6320 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-27 14:56:58.929  INFO 6320 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-27 14:56:58.929  INFO 6320 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-27 14:56:58.929  INFO 6320 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-27 14:56:58.929  INFO 6320 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-27 14:56:58.929  INFO 6320 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-27 14:56:58.929  INFO 6320 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-27 14:56:58.929  INFO 6320 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-27 14:56:58.931  INFO 6320 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-27 14:57:00.276  INFO 6320 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Tue Mar 27 14:56:54 IST 2018]; root of context hierarchy
2018-03-27 14:57:00.382  INFO 6320 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-27 14:57:00.382  INFO 6320 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-27 14:57:00.382  INFO 6320 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-27 14:57:00.382  INFO 6320 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-27 14:57:00.412  INFO 6320 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-27 14:57:00.412  INFO 6320 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-27 14:57:00.442  INFO 6320 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-27 14:57:00.735  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-27 14:57:00.735  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 14:57:00.737  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-27 14:57:00.737  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 14:57:00.737  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-27 14:57:00.737  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 14:57:00.740  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 14:57:00.740  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 14:57:00.740  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-27 14:57:00.740  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 14:57:00.742  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-27 14:57:00.742  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-27 14:57:00.742  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 14:57:00.742  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-27 14:57:00.742  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 14:57:00.742  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 14:57:00.742  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 14:57:00.745  INFO 6320 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-27 14:57:00.877  INFO 6320 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-27 14:57:00.895  INFO 6320 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-27 14:57:01.285  INFO 6320 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-27 14:57:01.295  INFO 6320 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 7.798 seconds (JVM running for 19.761)
2018-03-27 15:04:39.956  INFO 6320 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-27 15:04:39.956  INFO 6320 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-27 15:04:39.987  INFO 6320 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-03-27 15:04:40.007  INFO 6320 --- [http-nio-8080-exec-2] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-27 15:04:40.041  INFO 6320 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : am in create api()
2018-03-27 15:04:40.041  INFO 6320 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "4feca2f2d76baa968a6b8de62c6225890604b579",
  "after": "115626ad69fdb4d199598881507c86e9f73b8e90",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/4feca2f2d76b...115626ad69fd",
  "commits": [
    {
      "id": "115626ad69fdb4d199598881507c86e9f73b8e90",
      "tree_id": "73fb03c2092f954629b0e426ccd5d672759a172e",
      "distinct": true,
      "message": "added swagger-collections-veena.json",
      "timestamp": "2018-03-27T15:03:29+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/115626ad69fdb4d199598881507c86e9f73b8e90",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "swagger-collections-veena.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "115626ad69fdb4d199598881507c86e9f73b8e90",
    "tree_id": "73fb03c2092f954629b0e426ccd5d672759a172e",
    "distinct": true,
    "message": "added swagger-collections-veena.json",
    "timestamp": "2018-03-27T15:03:29+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/115626ad69fdb4d199598881507c86e9f73b8e90",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "swagger-collections-veena.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-26T09:28:04Z",
    "pushed_at": 1522143222,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47148,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-27 15:04:50.413  INFO 6320 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@2bd1e628
2018-03-27 15:04:50.413  INFO 6320 --- [http-nio-8080-exec-2] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-27 15:04:52.479  INFO 6320 --- [http-nio-8080-exec-2] com.innominds.util.JsonFormatter         : application url is:	http://localhost:38443/
2018-03-27 15:04:52.759  INFO 6320 --- [http-nio-8080-exec-2] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-27 15:04:54.357  INFO 6320 --- [http-nio-8080-exec-2] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('e9f953ba-baff-4890-b6bd-95f0a7b2901c')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"test","InSync":"0","PrivateDescription":"test","ServiceDisruption":"0","Name":"Swagger swagger-collections-veena.json","SpecFilesize":"1108","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewogICJpbmZvIjogewogICAgInRpdGxlIjogInRlc3ROZXciLAogICAgInZlcnNpb24iOiAiMS4wLjAiLAogICAgImRlc2NyaXB0aW9uIjogInRlc3QiCiAgfSwKICAic2NoZW1lcyI6IFsKICAgICJodHRwIgogIF0sCiAgImhvc3QiOiAibG9jYWxob3N0OjM4NDQzIiwKICAiYmFzZVBhdGgiOiAiLyIsCiAgInN3YWdnZXIiOiAiMi4wIiwKICAicGF0aHMiOiB7CiAgICAiL3Jvb3QvcGV0IjogewogICAgICAicG9zdCI6IHsKICAgICAgICAidGFncyI6IFsKICAgICAgICAgICJhcGkiCiAgICAgICAgXSwKICAgICAgICAic3VtbWFyeSI6ICJkYXRhIiwKICAgICAgICAidGl0bGUiOiAidXNlcmdldERhdGEiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJkYXRhIiwKICAgICAgICAiY29uc3VtZXMiOiBbCiAgICAgICAgICAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAiYXBwbGljYXRpb24veG1sIgogICAgICAgIF0sCgkJICJwcm9kdWNlcyI6IFsKICAgICAgICAgICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICJhcHBsaWNhdGlvbi94bWwiCiAgICAgICAgXSwKICAgICAgICAicGFyYW1ldGVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAicGV0IiwKICAgICAgICAgICAgImluIjogImJvZHkiLAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwKICAgICAgICAgICAgInNjaGVtYSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9wZXQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVzcG9uc2VzIjogewogICAgICAgICAgIm5hbWUiOiAib21pZSIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogICJkZWZpbml0aW9ucyI6IHsKICAgICJwZXQiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQ==","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522142818099","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"swagger-collections-veena.json","SsgUrl":"swagger-collections-veena.json","AccessStatus":"PRIVATE","Uuid":"e9f953ba-baff-4890-b6bd-95f0a7b2901c","ApiLocationUrl":"http://localhost:38443/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-27 15:24:35.575  INFO 6320 --- [http-nio-8080-exec-4] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-27 15:24:35.576  INFO 6320 --- [http-nio-8080-exec-4] com.innominds.rest.APIMRestService       : am in create api()
2018-03-27 15:24:35.576  INFO 6320 --- [http-nio-8080-exec-4] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "4feca2f2d76baa968a6b8de62c6225890604b579",
  "after": "115626ad69fdb4d199598881507c86e9f73b8e90",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/4feca2f2d76b...115626ad69fd",
  "commits": [
    {
      "id": "115626ad69fdb4d199598881507c86e9f73b8e90",
      "tree_id": "73fb03c2092f954629b0e426ccd5d672759a172e",
      "distinct": true,
      "message": "added swagger-collections-veena.json",
      "timestamp": "2018-03-27T15:03:29+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/115626ad69fdb4d199598881507c86e9f73b8e90",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "swagger-collections-veena.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "115626ad69fdb4d199598881507c86e9f73b8e90",
    "tree_id": "73fb03c2092f954629b0e426ccd5d672759a172e",
    "distinct": true,
    "message": "added swagger-collections-veena.json",
    "timestamp": "2018-03-27T15:03:29+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/115626ad69fdb4d199598881507c86e9f73b8e90",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "swagger-collections-veena.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-26T09:28:04Z",
    "pushed_at": 1522143222,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47148,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-27 15:24:44.119  INFO 6320 --- [http-nio-8080-exec-4] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@5505f75f
2018-03-27 15:24:44.119  INFO 6320 --- [http-nio-8080-exec-4] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-27 15:24:45.863  INFO 6320 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://localhost:38443/
2018-03-27 15:24:45.873  INFO 6320 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-27 15:24:47.265  INFO 6320 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{
"error" : {
"code" : "ValidationException", "message" : {
"lang" : "en", "value" : "The request could not be completed due to data input errors."
}, "detail" : {
"errorCode" : "483", "devErrorMessage" : "The request could not be completed due to data input errors.", "userErrorMessage" : "The request could not be completed due to data input errors.", "userErrorKey" : "error.validation.entity", "validationErrors" : [
{
"field" : "SsgUrl", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}, {
"field" : "Name", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}
]
}
}
}
2018-03-27 15:33:58.404  INFO 6320 --- [http-nio-8080-exec-6] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-27 15:34:01.130  INFO 6320 --- [http-nio-8080-exec-6] com.innominds.rest.APIMRestService       : am in create api()
2018-03-27 15:34:01.131  INFO 6320 --- [http-nio-8080-exec-6] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "4feca2f2d76baa968a6b8de62c6225890604b579",
  "after": "115626ad69fdb4d199598881507c86e9f73b8e90",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/4feca2f2d76b...115626ad69fd",
  "commits": [
    {
      "id": "115626ad69fdb4d199598881507c86e9f73b8e90",
      "tree_id": "73fb03c2092f954629b0e426ccd5d672759a172e",
      "distinct": true,
      "message": "added swagger-collections-veena.json",
      "timestamp": "2018-03-27T15:03:29+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/115626ad69fdb4d199598881507c86e9f73b8e90",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "swagger-collections-veena.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "115626ad69fdb4d199598881507c86e9f73b8e90",
    "tree_id": "73fb03c2092f954629b0e426ccd5d672759a172e",
    "distinct": true,
    "message": "added swagger-collections-veena.json",
    "timestamp": "2018-03-27T15:03:29+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/115626ad69fdb4d199598881507c86e9f73b8e90",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "swagger-collections-veena.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-26T09:28:04Z",
    "pushed_at": 1522143222,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47148,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-27 15:34:14.284  INFO 6320 --- [http-nio-8080-exec-6] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@b0eee52
2018-03-27 15:34:14.284  INFO 6320 --- [http-nio-8080-exec-6] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-27 15:34:19.008  INFO 6320 --- [http-nio-8080-exec-6] com.innominds.util.JsonFormatter         : application url is:	http://localhost:38443/
2018-03-27 15:34:19.011  INFO 6320 --- [http-nio-8080-exec-6] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-27 15:34:21.283  INFO 6320 --- [http-nio-8080-exec-6] com.innominds.util.APIMProxy             : result is:	{
"error" : {
"code" : "ValidationException", "message" : {
"lang" : "en", "value" : "The request could not be completed due to data input errors."
}, "detail" : {
"errorCode" : "483", "devErrorMessage" : "The request could not be completed due to data input errors.", "userErrorMessage" : "The request could not be completed due to data input errors.", "userErrorKey" : "error.validation.entity", "validationErrors" : [
{
"field" : "SsgUrl", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}, {
"field" : "Name", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}
]
}
}
}
2018-03-27 17:11:00.514  INFO 6064 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 6064 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-27 17:11:00.544  INFO 6064 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-27 17:11:00.694  INFO 6064 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Tue Mar 27 17:11:00 IST 2018]; root of context hierarchy
2018-03-27 17:11:01.763  INFO 6064 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-27 17:11:01.773  INFO 6064 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-27 17:11:01.773  INFO 6064 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-27 17:11:01.893  INFO 6064 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-27 17:11:01.893  INFO 6064 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1229 ms
2018-03-27 17:11:02.133  INFO 6064 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-27 17:11:02.133  INFO 6064 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-27 17:11:02.133  INFO 6064 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-27 17:11:02.133  INFO 6064 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-27 17:11:02.133  INFO 6064 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-27 17:11:02.143  INFO 6064 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-27 17:11:02.143  INFO 6064 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-27 17:11:02.143  INFO 6064 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-27 17:11:02.143  INFO 6064 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-27 17:11:02.563  INFO 6064 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Tue Mar 27 17:11:00 IST 2018]; root of context hierarchy
2018-03-27 17:11:02.612  INFO 6064 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-27 17:11:02.612  INFO 6064 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-27 17:11:02.612  INFO 6064 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-27 17:11:02.612  INFO 6064 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-27 17:11:02.642  INFO 6064 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-27 17:11:02.642  INFO 6064 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-27 17:11:02.662  INFO 6064 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-27 17:11:02.892  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-27 17:11:02.892  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-27 17:11:02.893  INFO 6064 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-27 17:11:03.023  INFO 6064 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-27 17:11:03.023  INFO 6064 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-27 17:11:03.213  INFO 6064 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-27 17:11:03.223  INFO 6064 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 3.159 seconds (JVM running for 5.504)
2018-03-27 17:13:58.864  INFO 6064 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-27 17:13:58.864  INFO 6064 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-27 17:13:58.865  INFO 6064 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 1 ms
2018-03-27 17:13:58.885  INFO 6064 --- [http-nio-8080-exec-1] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-27 17:13:58.905  INFO 6064 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : am in create api()
2018-03-27 17:13:58.905  INFO 6064 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "115626ad69fdb4d199598881507c86e9f73b8e90",
  "after": "9f01785c9140951b429c43baa2b6962a1494d8af",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/115626ad69fd...9f01785c9140",
  "commits": [
    {
      "id": "9f01785c9140951b429c43baa2b6962a1494d8af",
      "tree_id": "7ab1bc0f6502f1ed872b1038c24f616a35a00c50",
      "distinct": true,
      "message": "Uploaded Single File\n\nAdded Files :\r\nos-cells-v2.1",
      "timestamp": "2018-03-27T16:55:24+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/9f01785c9140951b429c43baa2b6962a1494d8af",
      "author": {
        "name": "Dotridge",
        "email": "33683688+Dotridge@users.noreply.github.com",
        "username": "Dotridge"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "username": "web-flow"
      },
      "added": [
        "os-cells-v2.1.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "9f01785c9140951b429c43baa2b6962a1494d8af",
    "tree_id": "7ab1bc0f6502f1ed872b1038c24f616a35a00c50",
    "distinct": true,
    "message": "Uploaded Single File\n\nAdded Files :\r\nos-cells-v2.1",
    "timestamp": "2018-03-27T16:55:24+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/9f01785c9140951b429c43baa2b6962a1494d8af",
    "author": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "username": "Dotridge"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "username": "web-flow"
    },
    "added": [
      "os-cells-v2.1.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-27T09:33:43Z",
    "pushed_at": 1522149925,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47148,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-27 17:14:06.945  INFO 6064 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@129d197d
2018-03-27 17:14:06.945  INFO 6064 --- [http-nio-8080-exec-1] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-27 17:14:08.997  INFO 6064 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/v2
2018-03-27 17:14:09.116  INFO 6064 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-27 17:14:09.966  INFO 6064 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('741ed0d5-fa25-4d10-aa58-387c2d879c67')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger os-cells-v2.1.json","SpecFilesize":"2333","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jZWxscy12Mi4xIiwNCgkJInZlcnNpb24iOiAiVW5rbm93biINCgl9LA0KCSJjb25zdW1lcyI6IFsNCgkJImFwcGxpY2F0aW9uL2pzb24iDQoJXSwNCgkicHJvZHVjZXMiOiBbDQoJCSJhcHBsaWNhdGlvbi9qc29uIg0KCV0sDQoJImhvc3QiOiAicGV0c3RvcmUuc3dhZ2dlci5pbyIsDQoJImJhc2VQYXRoIjogIi92MiIsDQoJInNjaGVtZXMiOiBbImh0dHAiXSwNCgkicGF0aHMiOiB7DQoJCSIvdjIuMS9vcy1jZWxscyI6IHsNCgkJCSJnZXQiOiB7DQoJCQkJIm9wZXJhdGlvbklkIjogInJldHVybmFsbGNlbGwiLA0KCQkJCSJzdW1tYXJ5IjogIkxpc3RzIGNlbGxzIHdpdGggZGV0YWlscyIsDQoJCQkJImRlc2NyaXB0aW9uIjogIkxpc3RzIGNlbGxzIHdpdGggZGV0YWlscy5cbiIsDQoJCQkJInByb2R1Y2VzIjogWw0KCQkJCQkiYXBwbGljYXRpb24vanNvbiINCgkJCQldLA0KCQkJCSJyZXNwb25zZXMiOiB7DQoJCQkJCSIyMDAiOiB7DQoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAwIHJlc3BvbnNlIiwNCgkJCQkJCSJleGFtcGxlcyI6IHsNCgkJCQkJCQkiYXBwbGljYXRpb24vanNvbiI6ICJ7XG4gICAgXCJjZWxsc1wiOiBbXVxufSINCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfSwNCgkJIi92Mi4xL29zLWNlbGxzL2NlbGwzIjogew0KCQkJImdldCI6IHsNCgkJCQkib3BlcmF0aW9uSWQiOiAiZGF0YWNlbGwiLA0KCQkJCSJzdW1tYXJ5IjogIlNob3dzIGNlbGwgZGF0YSIsDQoJCQkJImRlc2NyaXB0aW9uIjogIlNob3dzIGRhdGEgZm9yIGEgc3BlY2lmaWVkIGNlbGwuXG4iLA0KCQkJCSJwcm9kdWNlcyI6IFsNCgkJCQkJImFwcGxpY2F0aW9uL2pzb24iDQoJCQkJXSwNCgkJCQkicmVzcG9uc2VzIjogew0KCQkJCQkiMjAwIjogew0KCQkJCQkJImRlc2NyaXB0aW9uIjogIjIwMCByZXNwb25zZSIsDQoJCQkJCQkiZXhhbXBsZXMiOiB7DQoJCQkJCQkJImFwcGxpY2F0aW9uL2pzb24iOiAie1xuICAgIFwiY2VsbFwiOiB7XG4gICAgICAgIFwidXNlcm5hbWVcIjogXCJ1c2VybmFtZTNcIixcbiAgICAgICAgXCJycGNfaG9zdFwiOiBudWxsLFxuICAgICAgICBcInR5cGVcIjogXCJjaGlsZFwiLFxuICAgICAgICBcIm5hbWVcIjogXCJjZWxsM1wiLFxuICAgICAgICBcInJwY19wb3J0XCI6IG51bGxcbiAgICB9XG59Ig0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfQ0KCQkJfQ0KCQl9LA0KCQkiL3YyLjEvb3MtY2VsbHMvbm92YS9jYXBhY2l0aWVzIjogew0KCQkJImdldCI6IHsNCgkJCQkib3BlcmF0aW9uSWQiOiAiY2VsbGNhcGFjaXR5IiwNCgkJCQkic3VtbWFyeSI6ICJTaG93cyBjZWxsIGNhcGFjaXRpZXMiLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJTaG93cyBjYXBhY2l0aWVzIGZvciBhIHNwZWNpZmllZCBjZWxsLlxuIiwNCgkJCQkicHJvZHVjZXMiOiBbDQoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIg0KCQkJCV0sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMCI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDAgcmVzcG9uc2UiLA0KCQkJCQkJImV4YW1wbGVzIjogew0KCQkJCQkJCSJhcHBsaWNhdGlvbi9qc29uIjogIntcbiAgICBcImNlbGxcIjoge1xuICAgICAgICBcImNhcGFjaXRpZXNcIjoge1xuICAgICAgICAgICAgXCJyYW1fZnJlZVwiOiB7XG4gICAgICAgICAgICAgICAgXCJ1bml0c19ieV9tYlwiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiODE5MlwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcIjUxMlwiOiAxMyxcbiAgICAgICAgICAgICAgICAgICAgXCIxNjM4NFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcIjIwNDhcIjogMyxcbiAgICAgICAgICAgICAgICAgICAgXCI0MDk2XCI6IDFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwidG90YWxfbWJcIjogNzY4MFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiZGlza19mcmVlXCI6IHtcbiAgICAgICAgICAgICAgICBcInVuaXRzX2J5X21iXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCIwXCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwiMjA0ODBcIjogNDYsXG4gICAgICAgICAgICAgICAgICAgIFwiNDA5NjBcIjogMjMsXG4gICAgICAgICAgICAgICAgICAgIFwiMTYzODQwXCI6IDUsXG4gICAgICAgICAgICAgICAgICAgIFwiODE5MjBcIjogMTFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwidG90YWxfbWJcIjogMTA1MjY3MlxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSINCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfQ0KCX0NCn0=","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522150577353","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"os-cells-v2.1.json","SsgUrl":"os-cells-v2.1.json","AccessStatus":"PRIVATE","Uuid":"741ed0d5-fa25-4d10-aa58-387c2d879c67","ApiLocationUrl":"http://petstore.swagger.io/v2","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-27 17:37:17.032  INFO 6064 --- [http-nio-8080-exec-3] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-27 17:37:17.158  INFO 6064 --- [http-nio-8080-exec-3] com.innominds.rest.APIMRestService       : am in create api()
2018-03-27 17:37:17.168  INFO 6064 --- [http-nio-8080-exec-3] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "0e3e63d43bb4215f2362ff383417224f42e91575",
  "after": "21be537f6b53e9385e73dbf095b8cd1631253097",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/0e3e63d43bb4...21be537f6b53",
  "commits": [
    {
      "id": "21be537f6b53e9385e73dbf095b8cd1631253097",
      "tree_id": "92802dc188060b84ae4260d754e51bd08c547b7b",
      "distinct": true,
      "message": "Uploading os-cells-v2.1.json\n\nAdding Files :\r\nUploading os-cells-v2.1.json after removing V2 from base path.",
      "timestamp": "2018-03-27T17:35:46+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/21be537f6b53e9385e73dbf095b8cd1631253097",
      "author": {
        "name": "Dotridge",
        "email": "33683688+Dotridge@users.noreply.github.com",
        "username": "Dotridge"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "username": "web-flow"
      },
      "added": [
        "os-cells-v2.1.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "21be537f6b53e9385e73dbf095b8cd1631253097",
    "tree_id": "92802dc188060b84ae4260d754e51bd08c547b7b",
    "distinct": true,
    "message": "Uploading os-cells-v2.1.json\n\nAdding Files :\r\nUploading os-cells-v2.1.json after removing V2 from base path.",
    "timestamp": "2018-03-27T17:35:46+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/21be537f6b53e9385e73dbf095b8cd1631253097",
    "author": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "username": "Dotridge"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "username": "web-flow"
    },
    "added": [
      "os-cells-v2.1.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-27T12:03:54Z",
    "pushed_at": 1522152346,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47148,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-27 17:37:24.058  INFO 6064 --- [http-nio-8080-exec-3] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@ba0f977
2018-03-27 17:37:24.059  INFO 6064 --- [http-nio-8080-exec-3] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-27 17:37:25.528  INFO 6064 --- [http-nio-8080-exec-3] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-27 17:37:25.539  INFO 6064 --- [http-nio-8080-exec-3] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-27 17:37:26.148  INFO 6064 --- [http-nio-8080-exec-3] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('1e96a853-0a6b-4b49-8f97-3a464896467d')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger os-cells-v2.1.json","SpecFilesize":"2331","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jZWxscy12Mi4xIiwNCgkJInZlcnNpb24iOiAiVW5rbm93biINCgl9LA0KCSJjb25zdW1lcyI6IFsNCgkJImFwcGxpY2F0aW9uL2pzb24iDQoJXSwNCgkicHJvZHVjZXMiOiBbDQoJCSJhcHBsaWNhdGlvbi9qc29uIg0KCV0sDQoJImhvc3QiOiAicGV0c3RvcmUuc3dhZ2dlci5pbyIsDQoJImJhc2VQYXRoIjogIi8iLA0KCSJzY2hlbWVzIjogWyJodHRwIl0sDQoJInBhdGhzIjogew0KCQkiL3YyLjEvb3MtY2VsbHMiOiB7DQoJCQkiZ2V0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJyZXR1cm5hbGxjZWxsIiwNCgkJCQkic3VtbWFyeSI6ICJMaXN0cyBjZWxscyB3aXRoIGRldGFpbHMiLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJMaXN0cyBjZWxscyB3aXRoIGRldGFpbHMuXG4iLA0KCQkJCSJwcm9kdWNlcyI6IFsNCgkJCQkJImFwcGxpY2F0aW9uL2pzb24iDQoJCQkJXSwNCgkJCQkicmVzcG9uc2VzIjogew0KCQkJCQkiMjAwIjogew0KCQkJCQkJImRlc2NyaXB0aW9uIjogIjIwMCByZXNwb25zZSIsDQoJCQkJCQkiZXhhbXBsZXMiOiB7DQoJCQkJCQkJImFwcGxpY2F0aW9uL2pzb24iOiAie1xuICAgIFwiY2VsbHNcIjogW11cbn0iDQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0sDQoJCSIvdjIuMS9vcy1jZWxscy9jZWxsMyI6IHsNCgkJCSJnZXQiOiB7DQoJCQkJIm9wZXJhdGlvbklkIjogImRhdGFjZWxsIiwNCgkJCQkic3VtbWFyeSI6ICJTaG93cyBjZWxsIGRhdGEiLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJTaG93cyBkYXRhIGZvciBhIHNwZWNpZmllZCBjZWxsLlxuIiwNCgkJCQkicHJvZHVjZXMiOiBbDQoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIg0KCQkJCV0sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMCI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDAgcmVzcG9uc2UiLA0KCQkJCQkJImV4YW1wbGVzIjogew0KCQkJCQkJCSJhcHBsaWNhdGlvbi9qc29uIjogIntcbiAgICBcImNlbGxcIjoge1xuICAgICAgICBcInVzZXJuYW1lXCI6IFwidXNlcm5hbWUzXCIsXG4gICAgICAgIFwicnBjX2hvc3RcIjogbnVsbCxcbiAgICAgICAgXCJ0eXBlXCI6IFwiY2hpbGRcIixcbiAgICAgICAgXCJuYW1lXCI6IFwiY2VsbDNcIixcbiAgICAgICAgXCJycGNfcG9ydFwiOiBudWxsXG4gICAgfVxufSINCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfSwNCgkJIi92Mi4xL29zLWNlbGxzL25vdmEvY2FwYWNpdGllcyI6IHsNCgkJCSJnZXQiOiB7DQoJCQkJIm9wZXJhdGlvbklkIjogImNlbGxjYXBhY2l0eSIsDQoJCQkJInN1bW1hcnkiOiAiU2hvd3MgY2VsbCBjYXBhY2l0aWVzIiwNCgkJCQkiZGVzY3JpcHRpb24iOiAiU2hvd3MgY2FwYWNpdGllcyBmb3IgYSBzcGVjaWZpZWQgY2VsbC5cbiIsDQoJCQkJInByb2R1Y2VzIjogWw0KCQkJCQkiYXBwbGljYXRpb24vanNvbiINCgkJCQldLA0KCQkJCSJyZXNwb25zZXMiOiB7DQoJCQkJCSIyMDAiOiB7DQoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAwIHJlc3BvbnNlIiwNCgkJCQkJCSJleGFtcGxlcyI6IHsNCgkJCQkJCQkiYXBwbGljYXRpb24vanNvbiI6ICJ7XG4gICAgXCJjZWxsXCI6IHtcbiAgICAgICAgXCJjYXBhY2l0aWVzXCI6IHtcbiAgICAgICAgICAgIFwicmFtX2ZyZWVcIjoge1xuICAgICAgICAgICAgICAgIFwidW5pdHNfYnlfbWJcIjoge1xuICAgICAgICAgICAgICAgICAgICBcIjgxOTJcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCI1MTJcIjogMTMsXG4gICAgICAgICAgICAgICAgICAgIFwiMTYzODRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCIyMDQ4XCI6IDMsXG4gICAgICAgICAgICAgICAgICAgIFwiNDA5NlwiOiAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInRvdGFsX21iXCI6IDc2ODBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImRpc2tfZnJlZVwiOiB7XG4gICAgICAgICAgICAgICAgXCJ1bml0c19ieV9tYlwiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiMFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcIjIwNDgwXCI6IDQ2LFxuICAgICAgICAgICAgICAgICAgICBcIjQwOTYwXCI6IDIzLFxuICAgICAgICAgICAgICAgICAgICBcIjE2Mzg0MFwiOiA1LFxuICAgICAgICAgICAgICAgICAgICBcIjgxOTIwXCI6IDExXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInRvdGFsX21iXCI6IDEwNTI2NzJcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iDQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCgl9DQp9","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522151973693","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"os-cells-v2.1.json","SsgUrl":"os-cells-v2.1.json","AccessStatus":"PRIVATE","Uuid":"1e96a853-0a6b-4b49-8f97-3a464896467d","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-27 17:42:40.152  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-27 17:42:40.581  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : am in create api()
2018-03-27 17:42:40.583  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "21be537f6b53e9385e73dbf095b8cd1631253097",
  "after": "3ad67222bb5c14d2496495617c8fcd7a9779c404",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/21be537f6b53...3ad67222bb5c",
  "commits": [
    {
      "id": "3ad67222bb5c14d2496495617c8fcd7a9779c404",
      "tree_id": "dfa6c127ffdd093c7cff5ef4aca9cd68e6e7ca75",
      "distinct": true,
      "message": "Uploading 2 Files\n\nFiles Uploaded:\r\n1. os-certificates\r\n2. os-certificates-v2.1",
      "timestamp": "2018-03-27T17:40:55+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/3ad67222bb5c14d2496495617c8fcd7a9779c404",
      "author": {
        "name": "Dotridge",
        "email": "33683688+Dotridge@users.noreply.github.com",
        "username": "Dotridge"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "username": "web-flow"
      },
      "added": [
        "os-certificates-v2.1.json",
        "os-certificates.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "3ad67222bb5c14d2496495617c8fcd7a9779c404",
    "tree_id": "dfa6c127ffdd093c7cff5ef4aca9cd68e6e7ca75",
    "distinct": true,
    "message": "Uploading 2 Files\n\nFiles Uploaded:\r\n1. os-certificates\r\n2. os-certificates-v2.1",
    "timestamp": "2018-03-27T17:40:55+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/3ad67222bb5c14d2496495617c8fcd7a9779c404",
    "author": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "username": "Dotridge"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "username": "web-flow"
    },
    "added": [
      "os-certificates-v2.1.json",
      "os-certificates.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-27T12:05:47Z",
    "pushed_at": 1522152656,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47148,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-27 17:42:48.764  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@21090aba
2018-03-27 17:42:48.764  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-27 17:42:50.577  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/v2
2018-03-27 17:42:50.585  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-27 17:42:51.132  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('efc8fdf1-7115-4b8f-9c4b-ee81ebd0578f')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger os-certificates-v2.1.json","SpecFilesize":"5848","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jZXJ0aWZpY2F0ZXMtdjIuMSIsDQoJCSJ2ZXJzaW9uIjogIlVua25vd24iDQoJfSwNCgkiY29uc3VtZXMiOiBbDQoJCSJhcHBsaWNhdGlvbi9qc29uIg0KCV0sDQoJInByb2R1Y2VzIjogWw0KCQkiYXBwbGljYXRpb24vanNvbiINCgldLA0KCSJob3N0IjogInBldHN0b3JlLnN3YWdnZXIuaW8iLA0KCSJiYXNlUGF0aCI6ICIvdjIiLA0KCSJzY2hlbWVzIjogWyJodHRwIl0sDQoJInBhdGhzIjogew0KCQkiL3YyLjEvb3MtY2VydGlmaWNhdGVzIjogew0KCQkJInBvc3QiOiB7DQoJCQkJIm9wZXJhdGlvbklkIjogImNyZWF0ZWNlcnRpZmljYXRlIiwNCgkJCQkic3VtbWFyeSI6ICJDcmVhdGUgY2VydGlmaWNhdGUiLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJDcmVhdGVzIGEgY2VydGlmaWNhdGUuXG4iLA0KCQkJCSJwcm9kdWNlcyI6IFsNCgkJCQkJImFwcGxpY2F0aW9uL2pzb24iDQoJCQkJXSwNCgkJCQkicmVzcG9uc2VzIjogew0KCQkJCQkiMjAxIjogew0KCQkJCQkJImRlc2NyaXB0aW9uIjogIjIwMSByZXNwb25zZSIsDQoJCQkJCQkiZXhhbXBsZXMiOiB7DQoJCQkJCQkJImFwcGxpY2F0aW9uL2pzb24iOiAie1xuICAgIFwiY2VydGlmaWNhdGVcIjoge1xuICAgICAgICBcInByaXZhdGVfa2V5XCI6IFwiLS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLVxcbk1JSUNYZ0lCQUFLQmdRQ3MvN0hSN1ZST05XdzB0SThMQkZBbG8rSlBBa3hQSmxtOTgvM3IyaGpDTnFwalFuSWZcXG5pRTg2N09lZmprUXEwN2lVZXlCQitFZ0NWNUZNRm1MeElkVHlRTFdHVU5saDhMNy8ySTJmUzZwcUJ6aWlmNGNoXFxuL09adUhRcVZHcEFPWU1JazZZN29hQnZwODhhd2ZOckZJR2FiaGVyMXlhZmU3aGF4VWFCTjQ1V1kzd0lEQVFBQlxcbkFvR0JBSXJjcjJJL0t5V2YwaHc0Tm4xMFY5VHV5RS85R3oySkhnM1FGS2pGSm94MkRxeWdBRFQ1V0FlSGM2QnFcXG5OS05mME5BMlNMMUxTcG0rcWwwMXR2T3c0VmpFNVRGNk9IaUl6SHVUVG5YZ2dHNnZ1QThyeHA2TDI0SHRrQWNDXFxuMENCbm85Z2dTWDZqVm9ybkpQQmZ4cGt3SVRZU3ZINTdCVUZWRDdvdmJQeVdHelM1QWtFQTFKZVV0TDZ6eHdwc1xcbldScjFhSjhJbGwydVFrL1JVSXZTWk9VNjFzK0IxOTB6dkhpa0Z5OExEOENJNnZ2Qm1qQy9JWnVaVmVkdWZqcXNcXG40dlg4MnVETzNRSkJBTkJTaDJiMmR5QjRBR1ZGWTl2WE1SdEFMQXNwSkhiTEh5K3pUS3hsR1BGaXV6N1NlM3BzXFxuOEtlaHo0Qy9DQlhnUWtrMTk0ZHdGU0dFMTkvUFFmeUpST3NDUVFDRkZESlpocnRCVU13TVoyelNSaU41QlVHdFxcbmJ3dW5jUytPUzFTdTNZejVWUllxMkJaWUVQSEt0WXJBRmtMV1E4ZVJ3VGFXYU41cEZFL2ZiMzhPZ1FYZEFrQTRcXG5EbTBXL0swemxIYnV5VXhFcE5RMjgvNm1CaTBrdGlXdkxUMHRpb3E2c1ltWEx3WkEvRDJKcmhYckcveHQvb2wzXFxucjhqcXJmTlJzTEJ5TGhBZ2gwTi9Ba0VBbDJlUjBPOTdsVEVnRk5xeklRd1ZtSUFuOW1CTzNjbmYzdHljdmxEVVxcbm02ZWIyQ1MyNDJ5NFFhbGZDQ0FFanhvSlVSZGZzbTMvRDFpRm8wMFgrSVdGK0E9PVxcbi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tXFxuXCIsXG4gICAgICAgIFwiZGF0YVwiOiBcIkNlcnRpZmljYXRlOlxcbiAgICBEYXRhOlxcbiAgICAgICAgVmVyc2lvbjogMSAoMHgwKVxcbiAgICAgICAgU2VyaWFsIE51bWJlcjogMTAxOCAoMHgzZmEpXFxuICAgIFNpZ25hdHVyZSBBbGdvcml0aG06IG1kNVdpdGhSU0FFbmNyeXB0aW9uXFxuICAgICAgICBJc3N1ZXI6IE89Tk9WQSBST09ULCBMPU1vdW50YWluIFZpZXcsIFNUPUNhbGlmb3JuaWEsIEM9VVNcXG4gICAgICAgIFZhbGlkaXR5XFxuICAgICAgICAgICAgTm90IEJlZm9yZTogQXVnIDEyIDA3OjIwOjMwIDIwMTMgR01UXFxuICAgICAgICAgICAgTm90IEFmdGVyIDogQXVnIDEyIDA3OjIwOjMwIDIwMTQgR01UXFxuICAgICAgICBTdWJqZWN0OiBDPVVTLCBTVD1DYWxpZm9ybmlhLCBPPU9wZW5TdGFjaywgT1U9Tm92YURldiwgQ049b3BlbnN0YWNrLWZha2UtMjAxMy0wOC0xMlQwNzoyMDozMFpcXG4gICAgICAgIFN1YmplY3QgUHVibGljIEtleSBJbmZvOlxcbiAgICAgICAgICAgIFB1YmxpYyBLZXkgQWxnb3JpdGhtOiByc2FFbmNyeXB0aW9uXFxuICAgICAgICAgICAgICAgIFB1YmxpYy1LZXk6ICgxMDI0IGJpdClcXG4gICAgICAgICAgICAgICAgTW9kdWx1czpcXG4gICAgICAgICAgICAgICAgICAgIDAwOmFjOmZmOmIxOmQxOmVkOjU0OjRlOjM1OjZjOjM0OmI0OjhmOjBiOjA0OlxcbiAgICAgICAgICAgICAgICAgICAgNTA6MjU6YTM6ZTI6NGY6MDI6NGM6NGY6MjY6NTk6YmQ6ZjM6ZmQ6ZWI6ZGE6XFxuICAgICAgICAgICAgICAgICAgICAxODpjMjozNjphYTo2Mzo0Mjo3MjoxZjo4ODo0ZjozYTplYzplNzo5Zjo4ZTpcXG4gICAgICAgICAgICAgICAgICAgIDQ0OjJhOmQzOmI4Ojk0OjdiOjIwOjQxOmY4OjQ4OjAyOjU3OjkxOjRjOjE2OlxcbiAgICAgICAgICAgICAgICAgICAgNjI6ZjE6MjE6ZDQ6ZjI6NDA6YjU6ODY6NTA6ZDk6NjE6ZjA6YmU6ZmY6ZDg6XFxuICAgICAgICAgICAgICAgICAgICA4ZDo5Zjo0YjphYTo2YTowNzozODphMjo3Zjo4NzoyMTpmYzplNjo2ZToxZDpcXG4gICAgICAgICAgICAgICAgICAgIDBhOjk1OjFhOjkwOjBlOjYwOmMyOjI0OmU5OjhlOmU4OjY4OjFiOmU5OmYzOlxcbiAgICAgICAgICAgICAgICAgICAgYzY6YjA6N2M6ZGE6YzU6MjA6NjY6OWI6ODU6ZWE6ZjU6Yzk6YTc6ZGU6ZWU6XFxuICAgICAgICAgICAgICAgICAgICAxNjpiMTo1MTphMDo0ZDplMzo5NTo5ODpkZlxcbiAgICAgICAgICAgICAgICBFeHBvbmVudDogNjU1MzcgKDB4MTAwMDEpXFxuICAgIFNpZ25hdHVyZSBBbGdvcml0aG06IG1kNVdpdGhSU0FFbmNyeXB0aW9uXFxuICAgICAgICAgMTU6NDI6Y2E6NzE6Y2M6MzI6YWY6ZGM6Y2Y6NDU6OTE6ZGY6OGE6Yjg6MzA6YzQ6N2Y6Nzg6XFxuICAgICAgICAgODA6YTc6MjU6YzI6ZDk6ODE6M2U6YjM6ZGQ6MjI6Y2M6M2I6Zjg6OTQ6ZTc6OGY6MDQ6ZjY6XFxuICAgICAgICAgOTM6MDQ6OWU6ODU6ZDQ6MTA6NDA6ZmY6NWE6MDc6NDc6MjQ6YjU6YWU6OTM6YWQ6OGQ6ZTE6XFxuICAgICAgICAgZTY6NTQ6NGE6OGQ6NGE6Mjk6NTM6YzQ6OGQ6MDQ6NmI6MGI6ZjY6YWY6Mzg6Nzg6MDI6YzU6XFxuICAgICAgICAgMDU6MTk6ODk6ODI6MmQ6YmE6ZmQ6MTE6M2M6MWU6MTg6Yzk6MGM6M2Q6MDM6OTM6NmU6YmM6XFxuICAgICAgICAgNjY6NzA6MzQ6ZWU6MDM6Nzg6OGE6MWQ6M2Q6NjQ6ZTg6MjA6MmY6OTA6ODE6OGU6NDk6MWQ6XFxuICAgICAgICAgMDc6Mzc6MTU6NjY6NDI6Y2I6NTg6Mzk6YWQ6NTY6Y2U6ZWQ6NDc6YzY6Nzg6MGI6MGU6NzU6XFxuICAgICAgICAgMjk6Y2FcXG4tLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cXG5NSUlDTkRDQ0FaMENBZ1A2TUEwR0NTcUdTSWIzRFFFQkJBVUFNRTR4RWpBUUJnTlZCQW9UQ1U1UFZrRWdVazlQXFxuVkRFV01CUUdBMVVFQnhNTlRXOTFiblJoYVc0Z1ZtbGxkekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFTFxcbk1Ba0dBMVVFQmhNQ1ZWTXdIaGNOTVRNd09ERXlNRGN5TURNd1doY05NVFF3T0RFeU1EY3lNRE13V2pCMk1Rc3dcXG5DUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQXdLUTJGc2FXWnZjbTVwWVRFU01CQUdBMVVFQ2d3SlQzQmxibE4wXFxuWVdOck1SQXdEZ1lEVlFRTERBZE9iM1poUkdWMk1Td3dLZ1lEVlFRRERDTnZjR1Z1YzNSaFkyc3RabUZyWlMweVxcbk1ERXpMVEE0TFRFeVZEQTNPakl3T2pNd1dqQ0JuekFOQmdrcWhraUc5dzBCQVFFRkFBT0JqUUF3Z1lrQ2dZRUFcXG5yUCt4MGUxVVRqVnNOTFNQQ3dSUUphUGlUd0pNVHlaWnZmUDk2OW9Zd2phcVkwSnlINGhQT3V6bm40NUVLdE80XFxubEhzZ1FmaElBbGVSVEJaaThTSFU4a0MxaGxEWllmQysvOWlObjB1cWFnYzRvbitISWZ6bWJoMEtsUnFRRG1EQ1xcbkpPbU82R2diNmZQR3NIemF4U0JtbTRYcTljbW4zdTRXc1ZHZ1RlT1ZtTjhDQXdFQUFUQU5CZ2txaGtpRzl3MEJcXG5BUVFGQUFPQmdRQVZRc3B4ekRLdjNNOUZrZCtLdURERWYzaUFweVhDMllFK3M5MGl6RHY0bE9lUEJQYVRCSjZGXFxuMUJCQS8xb0hSeVMxcnBPdGplSG1WRXFOU2lsVHhJMEVhd3YycnpoNEFzVUZHWW1DTGJyOUVUd2VHTWtNUFFPVFxcbmJyeG1jRFR1QTNpS0hUMWs2Q0F2a0lHT1NSMEhOeFZtUXN0WU9hMVd6dTFIeG5nTERuVXB5Zz09XFxuLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxcblwiXG4gICAgfVxufSINCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfSwNCgkJIi92Mi4xL29zLWNlcnRpZmljYXRlcy9yb290Ijogew0KCQkJImdldCI6IHsNCgkJCQkib3BlcmF0aW9uSWQiOiAicmV0dXJuY2VydGlmaWNhdGUiLA0KCQkJCSJzdW1tYXJ5IjogIlNob3cgY2VydGlmaWNhdGUgZGV0YWlscyIsDQoJCQkJImRlc2NyaXB0aW9uIjogIlNob3dzIGRldGFpbHMgZm9yIGEgc3BlY2lmaWVkIGNlcnRpZmljYXRlLlxuIiwNCgkJCQkicHJvZHVjZXMiOiBbDQoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIg0KCQkJCV0sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMCI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDAgcmVzcG9uc2UiLA0KCQkJCQkJImV4YW1wbGVzIjogew0KCQkJCQkJCSJhcHBsaWNhdGlvbi9qc29uIjogIntcbiAgICBcImNlcnRpZmljYXRlXCI6IHtcbiAgICAgICAgXCJwcml2YXRlX2tleVwiOiBudWxsLFxuICAgICAgICBcImRhdGFcIjogXCItLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cXG5NSUlDeXpDQ0FqU2dBd0lCQWdJSkFKOHpTSXhVcC9tNE1BMEdDU3FHU0liM0RRRUJCQVVBTUU0eEVqQVFCZ05WXFxuQkFvVENVNVBWa0VnVWs5UFZERVdNQlFHQTFVRUJ4TU5UVzkxYm5SaGFXNGdWbWxsZHpFVE1CRUdBMVVFQ0JNS1xcblEyRnNhV1p2Y201cFlURUxNQWtHQTFVRUJoTUNWVk13SGhjTk1USXhNREUzTURFek16TTVXaGNOTVRNeE1ERTNcXG5NREV6TXpNNVdqQk9NUkl3RUFZRFZRUUtFd2xPVDFaQklGSlBUMVF4RmpBVUJnTlZCQWNURFUxdmRXNTBZV2x1XFxuSUZacFpYY3hFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4Q3pBSkJnTlZCQVlUQWxWVE1JR2ZNQTBHQ1NxR1xcblNJYjNEUUVCQVFVQUE0R05BRENCaVFLQmdRRFhXNFFmUVF4Skc0TXF1cnFLOG5VL0xnZTBtZk5LeFhqL0d3dmdcXG4yc1FWd3h6bUtmb3hpaDhObjZ5dDB5SE1OamhvamkxVW9XSTAzVFhVblBaUkFabXN5cEdLWmVCZDdZMVpPQ1BCXFxuWEdaVkdyUW0rUEIya1pVKzNjRDhmVktjdWVNTExlWitMUnQ1ZDBuam5vS2hjNXhqcU1sZkZQaW1ITWJhNE9MNlxcblRuWXpQUUlEQVFBQm80R3dNSUd0TUF3R0ExVWRFd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGS3lvS3U0U01PRk1cXG5neDVFYzdwMG5yQ2thYnZ4TUg0R0ExVWRJd1IzTUhXQUZLeW9LdTRTTU9GTWd4NUVjN3AwbnJDa2FidnhvVktrXFxuVURCT01SSXdFQVlEVlFRS0V3bE9UMVpCSUZKUFQxUXhGakFVQmdOVkJBY1REVTF2ZFc1MFlXbHVJRlpwWlhjeFxcbkV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhDekFKQmdOVkJBWVRBbFZUZ2drQW56TklqRlNuK2Jnd0RRWUpcXG5Lb1pJaHZjTkFRRUVCUUFEZ1lFQVh1dlhsdTFvL1NWdnlrU0xoSFc4UWlBWTAweXpOL2VEelltWkdvbWdpdW9PXFxuL3grYXlWemJyejFVV1puQkQrbEM0aGxsMmlFTFNtZjIyTGpMb0Yrcy85TnlQcUh4R0wzRnJmYXRCa25kYWlGOFxcbkF4L1RNRXlDUGw3SVFXaSszenphdHFPS0hTSGlHN2E5U0duLzdvMmFOVElXS1Z1bGZ5NUd2bWJCakJNLzBVRT1cXG4tLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tXFxuXCJcbiAgICB9XG59Ig0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJfQ0KfQ==","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522152298732","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"os-certificates-v2.1.json","SsgUrl":"os-certificates-v2.1.json","AccessStatus":"PRIVATE","Uuid":"efc8fdf1-7115-4b8f-9c4b-ee81ebd0578f","ApiLocationUrl":"http://petstore.swagger.io/v2","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-27 17:42:51.434  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-27 17:42:51.436  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-27 17:42:51.948  INFO 6064 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('a0a96579-8a79-4812-8cf2-6ec3938f0d1c')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger os-certificates.json","SpecFilesize":"6053","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522152299567","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"os-certificates.json","SsgUrl":"os-certificates.json","AccessStatus":"PRIVATE","Uuid":"a0a96579-8a79-4812-8cf2-6ec3938f0d1c","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-27 18:04:38.991  INFO 6064 --- [http-nio-8080-exec-7] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-27 18:04:39.074  INFO 6064 --- [http-nio-8080-exec-7] com.innominds.rest.APIMRestService       : am in create api()
2018-03-27 18:04:39.074  INFO 6064 --- [http-nio-8080-exec-7] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "3ad67222bb5c14d2496495617c8fcd7a9779c404",
  "after": "a4502764bbc95ca40016c253ea55647b350c7e52",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/3ad67222bb5c...a4502764bbc9",
  "commits": [
    {
      "id": "a4502764bbc95ca40016c253ea55647b350c7e52",
      "tree_id": "77771c40ad8498b63e49a5670971cbc60705b191",
      "distinct": true,
      "message": "Uploading 6 files\n\nUploading 6 files",
      "timestamp": "2018-03-27T17:58:25+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/a4502764bbc95ca40016c253ea55647b350c7e52",
      "author": {
        "name": "Dotridge",
        "email": "33683688+Dotridge@users.noreply.github.com",
        "username": "Dotridge"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "username": "web-flow"
      },
      "added": [
        "1.json",
        "2.json",
        "3.json",
        "4.json",
        "5.json",
        "6.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "a4502764bbc95ca40016c253ea55647b350c7e52",
    "tree_id": "77771c40ad8498b63e49a5670971cbc60705b191",
    "distinct": true,
    "message": "Uploading 6 files\n\nUploading 6 files",
    "timestamp": "2018-03-27T17:58:25+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/a4502764bbc95ca40016c253ea55647b350c7e52",
    "author": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "username": "Dotridge"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "username": "web-flow"
    },
    "added": [
      "1.json",
      "2.json",
      "3.json",
      "4.json",
      "5.json",
      "6.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-27T12:10:57Z",
    "pushed_at": 1522153705,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47160,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-27 18:04:46.301  INFO 6064 --- [http-nio-8080-exec-7] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@64522a1c
2018-03-27 18:04:46.301  INFO 6064 --- [http-nio-8080-exec-7] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-27 18:04:48.218  INFO 6064 --- [http-nio-8080-exec-7] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-27 18:04:48.239  INFO 6064 --- [http-nio-8080-exec-7] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-27 18:04:48.782  INFO 6064 --- [http-nio-8080-exec-7] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('d619d2a7-c8c0-459a-be31-659afa053d0f')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 1.json","SpecFilesize":"2538","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jbG91ZHBpcGUiLA0KCQkidmVyc2lvbiI6ICJVbmtub3duIg0KCX0sDQoJImNvbnN1bWVzIjogWw0KCQkiYXBwbGljYXRpb24vanNvbiINCgldLA0KCSJwcm9kdWNlcyI6IFsNCgkJImFwcGxpY2F0aW9uL2pzb24iDQoJXSwNCgkiaG9zdCI6ICJwZXRzdG9yZS5zd2FnZ2VyLmlvIiwNCgkiYmFzZVBhdGgiOiAiLyIsDQoJInNjaGVtZXMiOiBbImh0dHAiXSwNCgkicGF0aHMiOiB7DQoJCSIvdjIve3RlbmFudF9pZH0vb3MtY2xvdWRwaXBlIjogew0KCQkJInBhcmFtZXRlcnMiOiBbew0KCQkJCSJuYW1lIjogInRlbmFudF9pZCIsDQoJCQkJInJlcXVpcmVkIjogdHJ1ZSwNCgkJCQkiaW4iOiAicGF0aCIsDQoJCQkJInR5cGUiOiAic3RyaW5nIiwNCgkJCQkiZGVzY3JpcHRpb24iOiAiVGhlIElEIGZvciB0aGUgdGVuYW50IG9yIGFjY291bnQgaW4gYSBtdWx0aS10ZW5hbmN5IGNsb3VkLlxuIg0KCQkJfV0sDQoJCQkiZ2V0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJsaXN0Q2xvdWRwaXBlcyIsDQoJCQkJInN1bW1hcnkiOiAiTGlzdCBjbG91ZHBpcGVzIiwNCgkJCQkiZGVzY3JpcHRpb24iOiAiTGlzdHMgY2xvdWRwaXBlcy5cbiIsDQoJCQkJInByb2R1Y2VzIjogWw0KCQkJCQkiYXBwbGljYXRpb24vanNvbiINCgkJCQldLA0KCQkJCSJyZXNwb25zZXMiOiB7DQoJCQkJCSIyMDAiOiB7DQoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAwIHJlc3BvbnNlIiwNCgkJCQkJCSJleGFtcGxlcyI6IHsNCgkJCQkJCQkiYXBwbGljYXRpb24vanNvbiI6ICJ7XG4gICAgXCJjbG91ZHBpcGVzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgXCJwdWJsaWNfaXBcIjogXCIxMjcuMC4wLjFcIixcbiAgICAgICAgICAgIFwiY3JlYXRlZF9hdFwiOiBcIjIwMTItMTEtMjdUMTc6MTg6MDFaXCIsXG4gICAgICAgICAgICBcInB1YmxpY19wb3J0XCI6IDIyLFxuICAgICAgICAgICAgXCJzdGF0ZVwiOiBcImRvd25cIixcbiAgICAgICAgICAgIFwiaW5zdGFuY2VfaWRcIjogXCIyN2RlZWNkYi1iYWEzLTRhMjYtOWM4Mi0zMjk5NGI4MTViMDFcIixcbiAgICAgICAgICAgIFwiaW50ZXJuYWxfaXBcIjogXCIxOTIuMTY4LjAuM1wiLFxuICAgICAgICAgICAgXCJwcm9qZWN0X2lkXCI6IFwiY2xvdWRwaXBlLWZhMTc2NWJkLWEzNTItNDljNy1hNmI3LThlZTEwOGEzY2IwY1wiXG4gICAgICAgIH1cbiAgICBdXG59Ig0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfQ0KCQkJfSwNCgkJCSJwb3N0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJjcmVhdGVDbG91ZHBpcGUiLA0KCQkJCSJzdW1tYXJ5IjogIkNyZWF0ZSBjbG91ZHBpcGUiLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJDcmVhdGVzIGEgY2xvdWRwaXBlLlxuIiwNCgkJCQkicHJvZHVjZXMiOiBbDQoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIg0KCQkJCV0sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMCI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDAgcmVzcG9uc2UiLA0KCQkJCQkJImV4YW1wbGVzIjogew0KCQkJCQkJCSJhcHBsaWNhdGlvbi9qc29uIjogIntcbiAgICBcImluc3RhbmNlX2lkXCI6IFwiMWU5Yjg0MjUtMzRhZi00ODhlLWI5NjktNGQ0NmY0YTYzODJlXCJcbn0iDQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9LA0KCQkJCSJwYXJhbWV0ZXJzIjogW3sNCgkJCQkJIm5hbWUiOiAicHJvamVjdF9pZCIsDQoJCQkJCSJyZXF1aXJlZCI6IGZhbHNlLA0KCQkJCQkiaW4iOiAicXVlcnkiLA0KCQkJCQkidHlwZSI6ICJzdHJpbmciLA0KCQkJCQkiZGVzY3JpcHRpb24iOiAiQ3JlYXRlcyB0aGUgY2xvdWRwaXBlIGZvciB0aGUgc3BlY2lmaWVkIHByb2plY3QgSUQuIElmIG9taXR0ZWQsIHRoZSBwcm9qZWN0IElEIGRlZmF1bHRzIHRvIHRoZSBjYWxsaW5nIHRlbmFudC5cbiINCgkJCQl9XQ0KCQkJfQ0KCQl9LA0KCQkiL3YyL3t0ZW5hbnRfaWR9L29zLWNsb3VkcGlwZS9jb25maWd1cmUtcHJvamVjdCI6IHsNCgkJCSJwYXJhbWV0ZXJzIjogW3sNCgkJCQkibmFtZSI6ICJ0ZW5hbnRfaWQiLA0KCQkJCSJyZXF1aXJlZCI6IHRydWUsDQoJCQkJImluIjogInBhdGgiLA0KCQkJCSJ0eXBlIjogInN0cmluZyIsDQoJCQkJImRlc2NyaXB0aW9uIjogIlRoZSBJRCBmb3IgdGhlIHRlbmFudCBvciBhY2NvdW50IGluIGEgbXVsdGktdGVuYW5jeSBjbG91ZC5cbiINCgkJCX1dLA0KCQkJInBvc3QiOiB7DQoJCQkJIm9wZXJhdGlvbklkIjogInVwZGF0ZUNsb3VkcGlwZSIsDQoJCQkJInN1bW1hcnkiOiAiVXBkYXRlIGNsb3VkcGlwZSIsDQoJCQkJImRlc2NyaXB0aW9uIjogIlVwZGF0ZXMgdGhlIHZpcnR1YWwgcHJpdmF0ZSBuZXR3b3JrIChWUE4pIElQIGFkZHJlc3MgYW5kIHBvcnQgZm9yIGEgc3BlY2lmaWVkIGNsb3VkcGlwZSBpbnN0YW5jZS5cbiIsDQoJCQkJInByb2R1Y2VzIjogW10sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMiI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDIgcmVzcG9uc2UiDQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCgl9DQp9","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522153616288","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"1.json","SsgUrl":"1.json","AccessStatus":"PRIVATE","Uuid":"d619d2a7-c8c0-459a-be31-659afa053d0f","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 11:56:16.070  INFO 6064 --- [http-nio-8080-exec-9] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: GET
2018-03-28 11:56:18.592  INFO 6064 --- [http-nio-8080-exec-10] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: GET
2018-03-28 11:56:57.282  INFO 6064 --- [http-nio-8080-exec-1] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: GET
2018-03-28 11:58:47.906  INFO 6064 --- [http-nio-8080-exec-7] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: GET
2018-03-28 11:58:47.952  WARN 6064 --- [http-nio-8080-exec-7] o.s.web.servlet.PageNotFound             : Request method 'GET' not supported
2018-03-28 12:00:58.255  INFO 6064 --- [http-nio-8080-exec-2] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: GET
2018-03-28 12:00:58.304  INFO 6064 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : am in create api()
2018-03-28 12:01:01.913  INFO 6064 --- [http-nio-8080-exec-2] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@3defc70b
2018-03-28 12:01:05.405  INFO 6064 --- [http-nio-8080-exec-2] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-28 12:06:35.254  INFO 6064 --- [http-nio-8080-exec-6] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-28 12:06:35.256  INFO 6064 --- [http-nio-8080-exec-6] com.innominds.rest.APIMRestService       : am in create api()
2018-03-28 12:06:35.256  INFO 6064 --- [http-nio-8080-exec-6] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "4feca2f2d76baa968a6b8de62c6225890604b579",
  "after": "115626ad69fdb4d199598881507c86e9f73b8e90",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/4feca2f2d76b...115626ad69fd",
  "commits": [
    {
      "id": "115626ad69fdb4d199598881507c86e9f73b8e90",
      "tree_id": "73fb03c2092f954629b0e426ccd5d672759a172e",
      "distinct": true,
      "message": "added swagger-collections-veena.json",
      "timestamp": "2018-03-27T15:03:29+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/115626ad69fdb4d199598881507c86e9f73b8e90",
      "author": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "committer": {
        "name": "Narsi",
        "email": "sanna11@ca.com"
      },
      "added": [
        "swagger-collections-veena.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "115626ad69fdb4d199598881507c86e9f73b8e90",
    "tree_id": "73fb03c2092f954629b0e426ccd5d672759a172e",
    "distinct": true,
    "message": "added swagger-collections-veena.json",
    "timestamp": "2018-03-27T15:03:29+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/115626ad69fdb4d199598881507c86e9f73b8e90",
    "author": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "committer": {
      "name": "Narsi",
      "email": "sanna11@ca.com"
    },
    "added": [
      "swagger-collections-veena.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-26T09:28:04Z",
    "pushed_at": 1522143222,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47148,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-28 12:06:42.670  INFO 6064 --- [http-nio-8080-exec-6] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@3765baf2
2018-03-28 12:06:42.671  INFO 6064 --- [http-nio-8080-exec-6] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-28 12:06:47.459  INFO 6064 --- [http-nio-8080-exec-6] com.innominds.util.JsonFormatter         : application url is:	http://localhost:38443/
2018-03-28 12:06:47.558  INFO 6064 --- [http-nio-8080-exec-6] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 12:06:48.120  INFO 6064 --- [http-nio-8080-exec-6] com.innominds.util.APIMProxy             : result is:	{
"error" : {
"code" : "ValidationException", "message" : {
"lang" : "en", "value" : "The request could not be completed due to data input errors."
}, "detail" : {
"errorCode" : "483", "devErrorMessage" : "The request could not be completed due to data input errors.", "userErrorMessage" : "The request could not be completed due to data input errors.", "userErrorKey" : "error.validation.entity", "validationErrors" : [
{
"field" : "SsgUrl", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}, {
"field" : "Name", "error" : "The value for this field must be unique.", "key" : "error.validation.field.notunique"
}
]
}
}
}
2018-03-28 15:52:43.579  INFO 6064 --- [http-nio-8080-exec-8] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-28 15:52:43.840  INFO 6064 --- [http-nio-8080-exec-8] com.innominds.rest.APIMRestService       : am in create api()
2018-03-28 15:52:43.850  INFO 6064 --- [http-nio-8080-exec-8] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "a1c14b6b672756c92816d934956c6e67f893c43a",
  "after": "68672e6eb6a6e831966941d24f0a246af33b4a0c",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/a1c14b6b6727...68672e6eb6a6",
  "commits": [
    {
      "id": "68672e6eb6a6e831966941d24f0a246af33b4a0c",
      "tree_id": "5b1ddb883b4d133e196188c01bd7b363c4850d63",
      "distinct": true,
      "message": "Uploaded 6 Files\n\nTotal 6 Files",
      "timestamp": "2018-03-28T15:45:45+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/68672e6eb6a6e831966941d24f0a246af33b4a0c",
      "author": {
        "name": "Dotridge",
        "email": "33683688+Dotridge@users.noreply.github.com",
        "username": "Dotridge"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "username": "web-flow"
      },
      "added": [
        "1.json",
        "2.json",
        "3.json",
        "4.json",
        "5.json",
        "6.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "68672e6eb6a6e831966941d24f0a246af33b4a0c",
    "tree_id": "5b1ddb883b4d133e196188c01bd7b363c4850d63",
    "distinct": true,
    "message": "Uploaded 6 Files\n\nTotal 6 Files",
    "timestamp": "2018-03-28T15:45:45+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/68672e6eb6a6e831966941d24f0a246af33b4a0c",
    "author": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "username": "Dotridge"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "username": "web-flow"
    },
    "added": [
      "1.json",
      "2.json",
      "3.json",
      "4.json",
      "5.json",
      "6.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-28T10:13:09Z",
    "pushed_at": 1522232146,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47180,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-28 15:52:51.229  INFO 6064 --- [http-nio-8080-exec-8] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@305a1f97
2018-03-28 15:52:51.229  INFO 6064 --- [http-nio-8080-exec-8] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-28 15:52:54.159  INFO 6064 --- [http-nio-8080-exec-8] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 15:52:54.249  INFO 6064 --- [http-nio-8080-exec-8] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 15:52:55.068  INFO 6064 --- [http-nio-8080-exec-8] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('bb50564d-25af-440b-bba4-8f7d9818159a')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 1.json","SpecFilesize":"2538","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jbG91ZHBpcGUiLA0KCQkidmVyc2lvbiI6ICJVbmtub3duIg0KCX0sDQoJImNvbnN1bWVzIjogWw0KCQkiYXBwbGljYXRpb24vanNvbiINCgldLA0KCSJwcm9kdWNlcyI6IFsNCgkJImFwcGxpY2F0aW9uL2pzb24iDQoJXSwNCgkiaG9zdCI6ICJwZXRzdG9yZS5zd2FnZ2VyLmlvIiwNCgkiYmFzZVBhdGgiOiAiLyIsDQoJInNjaGVtZXMiOiBbImh0dHAiXSwNCgkicGF0aHMiOiB7DQoJCSIvdjIve3RlbmFudF9pZH0vb3MtY2xvdWRwaXBlIjogew0KCQkJInBhcmFtZXRlcnMiOiBbew0KCQkJCSJuYW1lIjogInRlbmFudF9pZCIsDQoJCQkJInJlcXVpcmVkIjogdHJ1ZSwNCgkJCQkiaW4iOiAicGF0aCIsDQoJCQkJInR5cGUiOiAic3RyaW5nIiwNCgkJCQkiZGVzY3JpcHRpb24iOiAiVGhlIElEIGZvciB0aGUgdGVuYW50IG9yIGFjY291bnQgaW4gYSBtdWx0aS10ZW5hbmN5IGNsb3VkLlxuIg0KCQkJfV0sDQoJCQkiZ2V0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJsaXN0Q2xvdWRwaXBlcyIsDQoJCQkJInN1bW1hcnkiOiAiTGlzdCBjbG91ZHBpcGVzIiwNCgkJCQkiZGVzY3JpcHRpb24iOiAiTGlzdHMgY2xvdWRwaXBlcy5cbiIsDQoJCQkJInByb2R1Y2VzIjogWw0KCQkJCQkiYXBwbGljYXRpb24vanNvbiINCgkJCQldLA0KCQkJCSJyZXNwb25zZXMiOiB7DQoJCQkJCSIyMDAiOiB7DQoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAwIHJlc3BvbnNlIiwNCgkJCQkJCSJleGFtcGxlcyI6IHsNCgkJCQkJCQkiYXBwbGljYXRpb24vanNvbiI6ICJ7XG4gICAgXCJjbG91ZHBpcGVzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgXCJwdWJsaWNfaXBcIjogXCIxMjcuMC4wLjFcIixcbiAgICAgICAgICAgIFwiY3JlYXRlZF9hdFwiOiBcIjIwMTItMTEtMjdUMTc6MTg6MDFaXCIsXG4gICAgICAgICAgICBcInB1YmxpY19wb3J0XCI6IDIyLFxuICAgICAgICAgICAgXCJzdGF0ZVwiOiBcImRvd25cIixcbiAgICAgICAgICAgIFwiaW5zdGFuY2VfaWRcIjogXCIyN2RlZWNkYi1iYWEzLTRhMjYtOWM4Mi0zMjk5NGI4MTViMDFcIixcbiAgICAgICAgICAgIFwiaW50ZXJuYWxfaXBcIjogXCIxOTIuMTY4LjAuM1wiLFxuICAgICAgICAgICAgXCJwcm9qZWN0X2lkXCI6IFwiY2xvdWRwaXBlLWZhMTc2NWJkLWEzNTItNDljNy1hNmI3LThlZTEwOGEzY2IwY1wiXG4gICAgICAgIH1cbiAgICBdXG59Ig0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfQ0KCQkJfSwNCgkJCSJwb3N0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJjcmVhdGVDbG91ZHBpcGUiLA0KCQkJCSJzdW1tYXJ5IjogIkNyZWF0ZSBjbG91ZHBpcGUiLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJDcmVhdGVzIGEgY2xvdWRwaXBlLlxuIiwNCgkJCQkicHJvZHVjZXMiOiBbDQoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIg0KCQkJCV0sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMCI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDAgcmVzcG9uc2UiLA0KCQkJCQkJImV4YW1wbGVzIjogew0KCQkJCQkJCSJhcHBsaWNhdGlvbi9qc29uIjogIntcbiAgICBcImluc3RhbmNlX2lkXCI6IFwiMWU5Yjg0MjUtMzRhZi00ODhlLWI5NjktNGQ0NmY0YTYzODJlXCJcbn0iDQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9LA0KCQkJCSJwYXJhbWV0ZXJzIjogW3sNCgkJCQkJIm5hbWUiOiAicHJvamVjdF9pZCIsDQoJCQkJCSJyZXF1aXJlZCI6IGZhbHNlLA0KCQkJCQkiaW4iOiAicXVlcnkiLA0KCQkJCQkidHlwZSI6ICJzdHJpbmciLA0KCQkJCQkiZGVzY3JpcHRpb24iOiAiQ3JlYXRlcyB0aGUgY2xvdWRwaXBlIGZvciB0aGUgc3BlY2lmaWVkIHByb2plY3QgSUQuIElmIG9taXR0ZWQsIHRoZSBwcm9qZWN0IElEIGRlZmF1bHRzIHRvIHRoZSBjYWxsaW5nIHRlbmFudC5cbiINCgkJCQl9XQ0KCQkJfQ0KCQl9LA0KCQkiL3YyL3t0ZW5hbnRfaWR9L29zLWNsb3VkcGlwZS9jb25maWd1cmUtcHJvamVjdCI6IHsNCgkJCSJwYXJhbWV0ZXJzIjogW3sNCgkJCQkibmFtZSI6ICJ0ZW5hbnRfaWQiLA0KCQkJCSJyZXF1aXJlZCI6IHRydWUsDQoJCQkJImluIjogInBhdGgiLA0KCQkJCSJ0eXBlIjogInN0cmluZyIsDQoJCQkJImRlc2NyaXB0aW9uIjogIlRoZSBJRCBmb3IgdGhlIHRlbmFudCBvciBhY2NvdW50IGluIGEgbXVsdGktdGVuYW5jeSBjbG91ZC5cbiINCgkJCX1dLA0KCQkJInBvc3QiOiB7DQoJCQkJIm9wZXJhdGlvbklkIjogInVwZGF0ZUNsb3VkcGlwZSIsDQoJCQkJInN1bW1hcnkiOiAiVXBkYXRlIGNsb3VkcGlwZSIsDQoJCQkJImRlc2NyaXB0aW9uIjogIlVwZGF0ZXMgdGhlIHZpcnR1YWwgcHJpdmF0ZSBuZXR3b3JrIChWUE4pIElQIGFkZHJlc3MgYW5kIHBvcnQgZm9yIGEgc3BlY2lmaWVkIGNsb3VkcGlwZSBpbnN0YW5jZS5cbiIsDQoJCQkJInByb2R1Y2VzIjogW10sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMiI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDIgcmVzcG9uc2UiDQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCgl9DQp9","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522232101783","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"1.json","SsgUrl":"1.json","AccessStatus":"PRIVATE","Uuid":"bb50564d-25af-440b-bba4-8f7d9818159a","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 16:42:22.214  INFO 6064 --- [http-nio-8080-exec-10] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-28 16:42:22.214  INFO 6064 --- [http-nio-8080-exec-10] com.innominds.rest.APIMRestService       : am in create api()
2018-03-28 16:42:22.214  INFO 6064 --- [http-nio-8080-exec-10] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "77eef1293f732badd6f2790a77eb4a8e336f9c1c",
  "after": "044b6f879c5de405a89fa8cc6f1c184b4ba69f81",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/77eef1293f73...044b6f879c5d",
  "commits": [
    {
      "id": "044b6f879c5de405a89fa8cc6f1c184b4ba69f81",
      "tree_id": "e4756072e49cd2d27404363d3a80e943f010e5cb",
      "distinct": true,
      "message": "adding json files",
      "timestamp": "2018-03-28T16:40:46+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/044b6f879c5de405a89fa8cc6f1c184b4ba69f81",
      "author": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "committer": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "added": [
        "1.json",
        "2.json",
        "3.json",
        "4.json",
        "5.json",
        "6.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "044b6f879c5de405a89fa8cc6f1c184b4ba69f81",
    "tree_id": "e4756072e49cd2d27404363d3a80e943f010e5cb",
    "distinct": true,
    "message": "adding json files",
    "timestamp": "2018-03-28T16:40:46+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/044b6f879c5de405a89fa8cc6f1c184b4ba69f81",
    "author": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "committer": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "added": [
      "1.json",
      "2.json",
      "3.json",
      "4.json",
      "5.json",
      "6.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-28T10:28:06Z",
    "pushed_at": 1522235460,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47180,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-28 16:42:29.718  INFO 6064 --- [http-nio-8080-exec-10] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@1725a88d
2018-03-28 16:42:29.718  INFO 6064 --- [http-nio-8080-exec-10] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-28 16:42:34.416  INFO 6064 --- [http-nio-8080-exec-10] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 16:42:34.476  INFO 6064 --- [http-nio-8080-exec-10] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 16:42:35.243  INFO 6064 --- [http-nio-8080-exec-10] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('b4dcc748-7e01-479b-b33c-0317002f0bb6')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 1.json","SpecFilesize":"2453","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewoJInN3YWdnZXIiOiAiMi4wIiwKCSJpbmZvIjogewoJCSJ0aXRsZSI6ICJvcy1jbG91ZHBpcGUiLAoJCSJ2ZXJzaW9uIjogIlVua25vd24iCgl9LAoJImNvbnN1bWVzIjogWwoJCSJhcHBsaWNhdGlvbi9qc29uIgoJXSwKCSJwcm9kdWNlcyI6IFsKCQkiYXBwbGljYXRpb24vanNvbiIKCV0sCgkiaG9zdCI6ICJwZXRzdG9yZS5zd2FnZ2VyLmlvIiwKCSJiYXNlUGF0aCI6ICIvIiwKCSJzY2hlbWVzIjogWyJodHRwIl0sCgkicGF0aHMiOiB7CgkJIi92Mi97dGVuYW50X2lkfS9vcy1jbG91ZHBpcGUiOiB7CgkJCSJwYXJhbWV0ZXJzIjogW3sKCQkJCSJuYW1lIjogInRlbmFudF9pZCIsCgkJCQkicmVxdWlyZWQiOiB0cnVlLAoJCQkJImluIjogInBhdGgiLAoJCQkJInR5cGUiOiAic3RyaW5nIiwKCQkJCSJkZXNjcmlwdGlvbiI6ICJUaGUgSUQgZm9yIHRoZSB0ZW5hbnQgb3IgYWNjb3VudCBpbiBhIG11bHRpLXRlbmFuY3kgY2xvdWQuXG4iCgkJCX1dLAoJCQkiZ2V0IjogewoJCQkJIm9wZXJhdGlvbklkIjogImxpc3RDbG91ZHBpcGVzIiwKCQkJCSJzdW1tYXJ5IjogIkxpc3QgY2xvdWRwaXBlcyIsCgkJCQkiZGVzY3JpcHRpb24iOiAiTGlzdHMgY2xvdWRwaXBlcy5cbiIsCgkJCQkicHJvZHVjZXMiOiBbCgkJCQkJImFwcGxpY2F0aW9uL2pzb24iCgkJCQldLAoJCQkJInJlc3BvbnNlcyI6IHsKCQkJCQkiMjAwIjogewoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAwIHJlc3BvbnNlIiwKCQkJCQkJImV4YW1wbGVzIjogewoJCQkJCQkJImFwcGxpY2F0aW9uL2pzb24iOiAie1xuICAgIFwiY2xvdWRwaXBlc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwicHVibGljX2lwXCI6IFwiMTI3LjAuMC4xXCIsXG4gICAgICAgICAgICBcImNyZWF0ZWRfYXRcIjogXCIyMDEyLTExLTI3VDE3OjE4OjAxWlwiLFxuICAgICAgICAgICAgXCJwdWJsaWNfcG9ydFwiOiAyMixcbiAgICAgICAgICAgIFwic3RhdGVcIjogXCJkb3duXCIsXG4gICAgICAgICAgICBcImluc3RhbmNlX2lkXCI6IFwiMjdkZWVjZGItYmFhMy00YTI2LTljODItMzI5OTRiODE1YjAxXCIsXG4gICAgICAgICAgICBcImludGVybmFsX2lwXCI6IFwiMTkyLjE2OC4wLjNcIixcbiAgICAgICAgICAgIFwicHJvamVjdF9pZFwiOiBcImNsb3VkcGlwZS1mYTE3NjViZC1hMzUyLTQ5YzctYTZiNy04ZWUxMDhhM2NiMGNcIlxuICAgICAgICB9XG4gICAgXVxufSIKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfSwKCQkJInBvc3QiOiB7CgkJCQkib3BlcmF0aW9uSWQiOiAiY3JlYXRlQ2xvdWRwaXBlIiwKCQkJCSJzdW1tYXJ5IjogIkNyZWF0ZSBjbG91ZHBpcGUiLAoJCQkJImRlc2NyaXB0aW9uIjogIkNyZWF0ZXMgYSBjbG91ZHBpcGUuXG4iLAoJCQkJInByb2R1Y2VzIjogWwoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIgoJCQkJXSwKCQkJCSJyZXNwb25zZXMiOiB7CgkJCQkJIjIwMCI6IHsKCQkJCQkJImRlc2NyaXB0aW9uIjogIjIwMCByZXNwb25zZSIsCgkJCQkJCSJleGFtcGxlcyI6IHsKCQkJCQkJCSJhcHBsaWNhdGlvbi9qc29uIjogIntcbiAgICBcImluc3RhbmNlX2lkXCI6IFwiMWU5Yjg0MjUtMzRhZi00ODhlLWI5NjktNGQ0NmY0YTYzODJlXCJcbn0iCgkJCQkJCX0KCQkJCQl9CgkJCQl9LAoJCQkJInBhcmFtZXRlcnMiOiBbewoJCQkJCSJuYW1lIjogInByb2plY3RfaWQiLAoJCQkJCSJyZXF1aXJlZCI6IGZhbHNlLAoJCQkJCSJpbiI6ICJxdWVyeSIsCgkJCQkJInR5cGUiOiAic3RyaW5nIiwKCQkJCQkiZGVzY3JpcHRpb24iOiAiQ3JlYXRlcyB0aGUgY2xvdWRwaXBlIGZvciB0aGUgc3BlY2lmaWVkIHByb2plY3QgSUQuIElmIG9taXR0ZWQsIHRoZSBwcm9qZWN0IElEIGRlZmF1bHRzIHRvIHRoZSBjYWxsaW5nIHRlbmFudC5cbiIKCQkJCX1dCgkJCX0KCQl9LAoJCSIvdjIve3RlbmFudF9pZH0vb3MtY2xvdWRwaXBlL2NvbmZpZ3VyZS1wcm9qZWN0IjogewoJCQkicGFyYW1ldGVycyI6IFt7CgkJCQkibmFtZSI6ICJ0ZW5hbnRfaWQiLAoJCQkJInJlcXVpcmVkIjogdHJ1ZSwKCQkJCSJpbiI6ICJwYXRoIiwKCQkJCSJ0eXBlIjogInN0cmluZyIsCgkJCQkiZGVzY3JpcHRpb24iOiAiVGhlIElEIGZvciB0aGUgdGVuYW50IG9yIGFjY291bnQgaW4gYSBtdWx0aS10ZW5hbmN5IGNsb3VkLlxuIgoJCQl9XSwKCQkJInBvc3QiOiB7CgkJCQkib3BlcmF0aW9uSWQiOiAidXBkYXRlQ2xvdWRwaXBlIiwKCQkJCSJzdW1tYXJ5IjogIlVwZGF0ZSBjbG91ZHBpcGUiLAoJCQkJImRlc2NyaXB0aW9uIjogIlVwZGF0ZXMgdGhlIHZpcnR1YWwgcHJpdmF0ZSBuZXR3b3JrIChWUE4pIElQIGFkZHJlc3MgYW5kIHBvcnQgZm9yIGEgc3BlY2lmaWVkIGNsb3VkcGlwZSBpbnN0YW5jZS5cbiIsCgkJCQkicHJvZHVjZXMiOiBbXSwKCQkJCSJyZXNwb25zZXMiOiB7CgkJCQkJIjIwMiI6IHsKCQkJCQkJImRlc2NyaXB0aW9uIjogIjIwMiByZXNwb25zZSIKCQkJCQl9CgkJCQl9CgkJCX0KCQl9Cgl9Cn0=","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522235081927","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"1.json","SsgUrl":"1.json","AccessStatus":"PRIVATE","Uuid":"b4dcc748-7e01-479b-b33c-0317002f0bb6","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 16:43:41.099  INFO 6064 --- [RMI TCP Connection(1474)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2018-03-28 16:43:41.099  INFO 6064 --- [RMI TCP Connection(1474)-127.0.0.1] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Tue Mar 27 17:11:00 IST 2018]; root of context hierarchy
2018-03-28 16:43:41.200  INFO 6064 --- [RMI TCP Connection(1474)-127.0.0.1] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2018-03-28 16:43:41.261  INFO 6064 --- [RMI TCP Connection(1474)-127.0.0.1] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2018-03-28 16:43:49.582  INFO 11964 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 11964 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-28 16:43:49.589  INFO 11964 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-28 16:43:49.680  INFO 11964 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Wed Mar 28 16:43:49 IST 2018]; root of context hierarchy
2018-03-28 16:43:51.289  INFO 11964 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-28 16:43:51.300  INFO 11964 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-28 16:43:51.302  INFO 11964 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-28 16:43:51.453  INFO 11964 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-28 16:43:51.453  INFO 11964 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1796 ms
2018-03-28 16:43:51.690  INFO 11964 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-28 16:43:51.691  INFO 11964 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-28 16:43:51.691  INFO 11964 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-28 16:43:51.691  INFO 11964 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-28 16:43:51.691  INFO 11964 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-28 16:43:51.691  INFO 11964 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-28 16:43:51.692  INFO 11964 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-28 16:43:51.692  INFO 11964 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-28 16:43:51.692  INFO 11964 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-28 16:43:52.061  INFO 11964 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Wed Mar 28 16:43:49 IST 2018]; root of context hierarchy
2018-03-28 16:43:52.122  INFO 11964 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-28 16:43:52.122  INFO 11964 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-28 16:43:52.122  INFO 11964 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-28 16:43:52.122  INFO 11964 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-28 16:43:52.162  INFO 11964 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-28 16:43:52.162  INFO 11964 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-28 16:43:52.173  INFO 11964 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-28 16:43:52.437  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-28 16:43:52.437  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-28 16:43:52.439  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-28 16:43:52.439  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-28 16:43:52.440  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-28 16:43:52.440  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-28 16:43:52.441  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-28 16:43:52.442  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-28 16:43:52.442  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-28 16:43:52.443  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-28 16:43:52.443  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-28 16:43:52.444  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-28 16:43:52.444  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-28 16:43:52.445  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-28 16:43:52.445  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-28 16:43:52.445  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-28 16:43:52.446  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-28 16:43:52.446  INFO 11964 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-28 16:43:52.580  INFO 11964 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-28 16:43:52.590  INFO 11964 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-28 16:43:52.744  INFO 11964 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-28 16:43:52.771  INFO 11964 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 3.624 seconds (JVM running for 6.487)
2018-03-28 16:44:40.122  INFO 11964 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-28 16:44:40.122  INFO 11964 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-28 16:44:40.143  INFO 11964 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2018-03-28 16:44:40.153  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-28 16:44:40.183  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : am in create api()
2018-03-28 16:44:40.183  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "77eef1293f732badd6f2790a77eb4a8e336f9c1c",
  "after": "044b6f879c5de405a89fa8cc6f1c184b4ba69f81",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/77eef1293f73...044b6f879c5d",
  "commits": [
    {
      "id": "044b6f879c5de405a89fa8cc6f1c184b4ba69f81",
      "tree_id": "e4756072e49cd2d27404363d3a80e943f010e5cb",
      "distinct": true,
      "message": "adding json files",
      "timestamp": "2018-03-28T16:40:46+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/044b6f879c5de405a89fa8cc6f1c184b4ba69f81",
      "author": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "committer": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "added": [
        "1.json",
        "2.json",
        "3.json",
        "4.json",
        "5.json",
        "6.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "044b6f879c5de405a89fa8cc6f1c184b4ba69f81",
    "tree_id": "e4756072e49cd2d27404363d3a80e943f010e5cb",
    "distinct": true,
    "message": "adding json files",
    "timestamp": "2018-03-28T16:40:46+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/044b6f879c5de405a89fa8cc6f1c184b4ba69f81",
    "author": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "committer": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "added": [
      "1.json",
      "2.json",
      "3.json",
      "4.json",
      "5.json",
      "6.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-28T10:28:06Z",
    "pushed_at": 1522235460,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47180,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-28 16:44:49.017  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@3c6e2bb7
2018-03-28 16:44:49.017  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-28 16:44:51.617  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 16:44:51.805  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 16:44:52.496  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('73271919-d5aa-44a8-ab80-ced268a20dcc')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 1.json","SpecFilesize":"2453","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewoJInN3YWdnZXIiOiAiMi4wIiwKCSJpbmZvIjogewoJCSJ0aXRsZSI6ICJvcy1jbG91ZHBpcGUiLAoJCSJ2ZXJzaW9uIjogIlVua25vd24iCgl9LAoJImNvbnN1bWVzIjogWwoJCSJhcHBsaWNhdGlvbi9qc29uIgoJXSwKCSJwcm9kdWNlcyI6IFsKCQkiYXBwbGljYXRpb24vanNvbiIKCV0sCgkiaG9zdCI6ICJwZXRzdG9yZS5zd2FnZ2VyLmlvIiwKCSJiYXNlUGF0aCI6ICIvIiwKCSJzY2hlbWVzIjogWyJodHRwIl0sCgkicGF0aHMiOiB7CgkJIi92Mi97dGVuYW50X2lkfS9vcy1jbG91ZHBpcGUiOiB7CgkJCSJwYXJhbWV0ZXJzIjogW3sKCQkJCSJuYW1lIjogInRlbmFudF9pZCIsCgkJCQkicmVxdWlyZWQiOiB0cnVlLAoJCQkJImluIjogInBhdGgiLAoJCQkJInR5cGUiOiAic3RyaW5nIiwKCQkJCSJkZXNjcmlwdGlvbiI6ICJUaGUgSUQgZm9yIHRoZSB0ZW5hbnQgb3IgYWNjb3VudCBpbiBhIG11bHRpLXRlbmFuY3kgY2xvdWQuXG4iCgkJCX1dLAoJCQkiZ2V0IjogewoJCQkJIm9wZXJhdGlvbklkIjogImxpc3RDbG91ZHBpcGVzIiwKCQkJCSJzdW1tYXJ5IjogIkxpc3QgY2xvdWRwaXBlcyIsCgkJCQkiZGVzY3JpcHRpb24iOiAiTGlzdHMgY2xvdWRwaXBlcy5cbiIsCgkJCQkicHJvZHVjZXMiOiBbCgkJCQkJImFwcGxpY2F0aW9uL2pzb24iCgkJCQldLAoJCQkJInJlc3BvbnNlcyI6IHsKCQkJCQkiMjAwIjogewoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAwIHJlc3BvbnNlIiwKCQkJCQkJImV4YW1wbGVzIjogewoJCQkJCQkJImFwcGxpY2F0aW9uL2pzb24iOiAie1xuICAgIFwiY2xvdWRwaXBlc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwicHVibGljX2lwXCI6IFwiMTI3LjAuMC4xXCIsXG4gICAgICAgICAgICBcImNyZWF0ZWRfYXRcIjogXCIyMDEyLTExLTI3VDE3OjE4OjAxWlwiLFxuICAgICAgICAgICAgXCJwdWJsaWNfcG9ydFwiOiAyMixcbiAgICAgICAgICAgIFwic3RhdGVcIjogXCJkb3duXCIsXG4gICAgICAgICAgICBcImluc3RhbmNlX2lkXCI6IFwiMjdkZWVjZGItYmFhMy00YTI2LTljODItMzI5OTRiODE1YjAxXCIsXG4gICAgICAgICAgICBcImludGVybmFsX2lwXCI6IFwiMTkyLjE2OC4wLjNcIixcbiAgICAgICAgICAgIFwicHJvamVjdF9pZFwiOiBcImNsb3VkcGlwZS1mYTE3NjViZC1hMzUyLTQ5YzctYTZiNy04ZWUxMDhhM2NiMGNcIlxuICAgICAgICB9XG4gICAgXVxufSIKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfSwKCQkJInBvc3QiOiB7CgkJCQkib3BlcmF0aW9uSWQiOiAiY3JlYXRlQ2xvdWRwaXBlIiwKCQkJCSJzdW1tYXJ5IjogIkNyZWF0ZSBjbG91ZHBpcGUiLAoJCQkJImRlc2NyaXB0aW9uIjogIkNyZWF0ZXMgYSBjbG91ZHBpcGUuXG4iLAoJCQkJInByb2R1Y2VzIjogWwoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIgoJCQkJXSwKCQkJCSJyZXNwb25zZXMiOiB7CgkJCQkJIjIwMCI6IHsKCQkJCQkJImRlc2NyaXB0aW9uIjogIjIwMCByZXNwb25zZSIsCgkJCQkJCSJleGFtcGxlcyI6IHsKCQkJCQkJCSJhcHBsaWNhdGlvbi9qc29uIjogIntcbiAgICBcImluc3RhbmNlX2lkXCI6IFwiMWU5Yjg0MjUtMzRhZi00ODhlLWI5NjktNGQ0NmY0YTYzODJlXCJcbn0iCgkJCQkJCX0KCQkJCQl9CgkJCQl9LAoJCQkJInBhcmFtZXRlcnMiOiBbewoJCQkJCSJuYW1lIjogInByb2plY3RfaWQiLAoJCQkJCSJyZXF1aXJlZCI6IGZhbHNlLAoJCQkJCSJpbiI6ICJxdWVyeSIsCgkJCQkJInR5cGUiOiAic3RyaW5nIiwKCQkJCQkiZGVzY3JpcHRpb24iOiAiQ3JlYXRlcyB0aGUgY2xvdWRwaXBlIGZvciB0aGUgc3BlY2lmaWVkIHByb2plY3QgSUQuIElmIG9taXR0ZWQsIHRoZSBwcm9qZWN0IElEIGRlZmF1bHRzIHRvIHRoZSBjYWxsaW5nIHRlbmFudC5cbiIKCQkJCX1dCgkJCX0KCQl9LAoJCSIvdjIve3RlbmFudF9pZH0vb3MtY2xvdWRwaXBlL2NvbmZpZ3VyZS1wcm9qZWN0IjogewoJCQkicGFyYW1ldGVycyI6IFt7CgkJCQkibmFtZSI6ICJ0ZW5hbnRfaWQiLAoJCQkJInJlcXVpcmVkIjogdHJ1ZSwKCQkJCSJpbiI6ICJwYXRoIiwKCQkJCSJ0eXBlIjogInN0cmluZyIsCgkJCQkiZGVzY3JpcHRpb24iOiAiVGhlIElEIGZvciB0aGUgdGVuYW50IG9yIGFjY291bnQgaW4gYSBtdWx0aS10ZW5hbmN5IGNsb3VkLlxuIgoJCQl9XSwKCQkJInBvc3QiOiB7CgkJCQkib3BlcmF0aW9uSWQiOiAidXBkYXRlQ2xvdWRwaXBlIiwKCQkJCSJzdW1tYXJ5IjogIlVwZGF0ZSBjbG91ZHBpcGUiLAoJCQkJImRlc2NyaXB0aW9uIjogIlVwZGF0ZXMgdGhlIHZpcnR1YWwgcHJpdmF0ZSBuZXR3b3JrIChWUE4pIElQIGFkZHJlc3MgYW5kIHBvcnQgZm9yIGEgc3BlY2lmaWVkIGNsb3VkcGlwZSBpbnN0YW5jZS5cbiIsCgkJCQkicHJvZHVjZXMiOiBbXSwKCQkJCSJyZXNwb25zZXMiOiB7CgkJCQkJIjIwMiI6IHsKCQkJCQkJImRlc2NyaXB0aW9uIjogIjIwMiByZXNwb25zZSIKCQkJCQl9CgkJCQl9CgkJCX0KCQl9Cgl9Cn0=","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522235219114","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"1.json","SsgUrl":"1.json","AccessStatus":"PRIVATE","Uuid":"73271919-d5aa-44a8-ab80-ced268a20dcc","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 16:44:57.281  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 16:44:57.567  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 16:44:58.976  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('aaf9adf2-0451-4b74-8df2-c01811ed10bf')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 2.json","SpecFilesize":"160444","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522235225314","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"2.json","SsgUrl":"2.json","AccessStatus":"PRIVATE","Uuid":"aaf9adf2-0451-4b74-8df2-c01811ed10bf","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 16:44:59.496  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 16:44:59.506  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 16:45:00.066  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('24a318ff-ce00-4785-9751-e8b15c4eba34')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 3.json","SpecFilesize":"1125","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewoJInN3YWdnZXIiOiAiMi4wIiwKCSJpbmZvIjogewoJCSJ0aXRsZSI6ICJvcy1jb25zb2xlLW91dHB1dCIsCgkJInZlcnNpb24iOiAiVW5rbm93biIKCX0sCgkiY29uc3VtZXMiOiBbCgkJImFwcGxpY2F0aW9uL2pzb24iCgldLAoJInByb2R1Y2VzIjogWwoJCSJhcHBsaWNhdGlvbi9qc29uIgoJXSwKCSJob3N0IjogInBldHN0b3JlLnN3YWdnZXIuaW8iLAoJImJhc2VQYXRoIjogIi8iLAoJInNjaGVtZXMiOiBbImh0dHAiXSwKCSJwYXRocyI6IHsKCQkiL3YyL3t0ZW5hbnRfaWR9L3NlcnZlcnMve3NlcnZlcl9pZH0vYWN0aW9uIjogewoJCQkicGFyYW1ldGVycyI6IFt7CgkJCQkJIm5hbWUiOiAidGVuYW50X2lkIiwKCQkJCQkicmVxdWlyZWQiOiB0cnVlLAoJCQkJCSJpbiI6ICJwYXRoIiwKCQkJCQkidHlwZSI6ICJzdHJpbmciLAoJCQkJCSJkZXNjcmlwdGlvbiI6ICJUaGUgSUQgZm9yIHRoZSB0ZW5hbnQgb3IgYWNjb3VudCBpbiBhIG11bHRpLXRlbmFuY3kgY2xvdWQuXG4iCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInNlcnZlcl9pZCIsCgkJCQkJInJlcXVpcmVkIjogdHJ1ZSwKCQkJCQkiaW4iOiAicGF0aCIsCgkJCQkJInR5cGUiOiAic3RyaW5nIiwKCQkJCQkiZGVzY3JpcHRpb24iOiAiVGhlIFVVSUQgZm9yIHRoZSBzZXJ2ZXIgb2YgaW50ZXJlc3QgdG8geW91LlxuIgoJCQkJfQoJCQldLAoJCQkicG9zdCI6IHsKCQkJCSJvcGVyYXRpb25JZCI6ICJnZXRDb25zb2xlT3V0cHV0IiwKCQkJCSJzdW1tYXJ5IjogIkdldCBjb25zb2xlIG91dHB1dCBmb3IgYW4gaW5zdGFuY2UiLAoJCQkJImRlc2NyaXB0aW9uIjogIkdldHMgY29uc29sZSBvdXRwdXQgZm9yIGEgc2VydmVyIGluc3RhbmNlLlxuIiwKCQkJCSJwcm9kdWNlcyI6IFsKCQkJCQkiYXBwbGljYXRpb24vanNvbiIKCQkJCV0sCgkJCQkicmVzcG9uc2VzIjogewoJCQkJCSIyMDAiOiB7CgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDAgcmVzcG9uc2UiLAoJCQkJCQkiZXhhbXBsZXMiOiB7CgkJCQkJCQkiYXBwbGljYXRpb24vanNvbiI6ICJ7XG4gICAgXCJvdXRwdXRcIjogXCJGQUtFIENPTlNPTEUgT1VUUFVUXFxuQU5PVEhFUlxcbkxBU1QgTElORVwiXG59IgoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoJfQp9","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522235226782","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"3.json","SsgUrl":"3.json","AccessStatus":"PRIVATE","Uuid":"24a318ff-ce00-4785-9751-e8b15c4eba34","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 16:45:00.466  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 16:45:00.466  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 16:45:00.976  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('33c727e2-eb97-4725-8247-0baa423427d1')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 4.json","SpecFilesize":"981","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewoJInN3YWdnZXIiOiAiMi4wIiwKCSJpbmZvIjogewoJCSJ0aXRsZSI6ICJvcy1jb25zb2xlcyIsCgkJInZlcnNpb24iOiAiVW5rbm93biIKCX0sCgkiY29uc3VtZXMiOiBbCgkJImFwcGxpY2F0aW9uL2pzb24iCgldLAoJInByb2R1Y2VzIjogWwoJCSJhcHBsaWNhdGlvbi9qc29uIgoJXSwKCSJob3N0IjogInBldHN0b3JlLnN3YWdnZXIuaW8iLAoJImJhc2VQYXRoIjogIi8iLAoJInNjaGVtZXMiOiBbImh0dHAiXSwKCSJwYXRocyI6IHsKCQkiL3YyL3t0ZW5hbnRfaWR9L3NlcnZlcnMve3NlcnZlcl9pZH0vYWN0aW9uIjogewoJCQkicGFyYW1ldGVycyI6IFt7CgkJCQkJIm5hbWUiOiAidGVuYW50X2lkIiwKCQkJCQkicmVxdWlyZWQiOiB0cnVlLAoJCQkJCSJpbiI6ICJwYXRoIiwKCQkJCQkidHlwZSI6ICJzdHJpbmciLAoJCQkJCSJkZXNjcmlwdGlvbiI6ICJUaGUgSUQgZm9yIHRoZSB0ZW5hbnQgb3IgYWNjb3VudCBpbiBhIG11bHRpLXRlbmFuY3kgY2xvdWQuXG4iCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInNlcnZlcl9pZCIsCgkJCQkJInJlcXVpcmVkIjogdHJ1ZSwKCQkJCQkiaW4iOiAicGF0aCIsCgkJCQkJInR5cGUiOiAic3RyaW5nIiwKCQkJCQkiZGVzY3JpcHRpb24iOiAiVGhlIFVVSUQgZm9yIHRoZSBzZXJ2ZXIgb2YgaW50ZXJlc3QgdG8geW91LlxuIgoJCQkJfQoJCQldLAoJCQkicG9zdCI6IHsKCQkJCSJvcGVyYXRpb25JZCI6ICJnZXRDb25zb2xlIiwKCQkJCSJzdW1tYXJ5IjogIkdldCBjb25zb2xlIiwKCQkJCSJkZXNjcmlwdGlvbiI6ICJHZXRzIGEgY29uc29sZSBmb3IgYSBzZXJ2ZXIgaW5zdGFuY2UuXG4iLAoJCQkJInByb2R1Y2VzIjogWwoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIgoJCQkJXSwKCQkJCSJyZXNwb25zZXMiOiB7CgkJCQkJIjIwMCI6IHsKCQkJCQkJImRlc2NyaXB0aW9uIjogIjIwMCByZXNwb25zZSIsCgkJCQkJCSJleGFtcGxlcyI6IHt9CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQp9Cgl9","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522235227691","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"4.json","SsgUrl":"4.json","AccessStatus":"PRIVATE","Uuid":"33c727e2-eb97-4725-8247-0baa423427d1","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 16:45:01.436  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 16:45:01.437  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 16:45:01.936  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('064fccd2-e540-46a3-8fa6-fb9bf259806a')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 5.json","SpecFilesize":"884","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewoJInN3YWdnZXIiOiAiMi4wIiwKCSJpbmZvIjogewoJCSJ0aXRsZSI6ICJvcy1jb3ZlcmFnZSIsCgkJInZlcnNpb24iOiAiVW5rbm93biIKCX0sCgkiY29uc3VtZXMiOiBbCgkJImFwcGxpY2F0aW9uL2pzb24iCgldLAoJInByb2R1Y2VzIjogWwoJCSJhcHBsaWNhdGlvbi9qc29uIgoJXSwKCSJob3N0IjogInBldHN0b3JlLnN3YWdnZXIuaW8iLAoJImJhc2VQYXRoIjogIi8iLAoJInNjaGVtZXMiOiBbImh0dHAiXSwKCSJwYXRocyI6IHsKCQkiL3YyL3t0ZW5hbnRfaWR9L29zLWNvdmVyYWdlL2FjdGlvbiI6IHsKCQkJInBhcmFtZXRlcnMiOiBbewoJCQkJIm5hbWUiOiAidGVuYW50X2lkIiwKCQkJCSJyZXF1aXJlZCI6IHRydWUsCgkJCQkiaW4iOiAicGF0aCIsCgkJCQkidHlwZSI6ICJzdHJpbmciLAoJCQkJImRlc2NyaXB0aW9uIjogIlRoZSBJRCBmb3IgdGhlIHRlbmFudCBvciBhY2NvdW50IGluIGEgbXVsdGktdGVuYW5jeSBjbG91ZC5cbiIKCQkJfV0sCgkJCSJwb3N0IjogewoJCQkJIm9wZXJhdGlvbklkIjogInN0b3BSZXBvcnQiLAoJCQkJInN1bW1hcnkiOiAiU3RvcCBjb3ZlcmFnZSByZXBvcnQiLAoJCQkJImRlc2NyaXB0aW9uIjogIlN0b3BzIGNvdmVyYWdlIHJlcG9ydGluZy5cbiIsCgkJCQkicHJvZHVjZXMiOiBbCgkJCQkJImFwcGxpY2F0aW9uL2pzb24iCgkJCQldLAoJCQkJInJlc3BvbnNlcyI6IHsKCQkJCQkiMjAyIjogewoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAyIHJlc3BvbnNlIiwKCQkJCQkJImV4YW1wbGVzIjogewoJCQkJCQkJImFwcGxpY2F0aW9uL2pzb24iOiAie1xuICAgIFwicGF0aFwiOiBcIi90bXAvdG1wdWE5SHZCL25vdmEtY292ZXJhZ2VfcnMyQ2FTXCJcbn0iCgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQl9Cgl9Cn0=","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522235228647","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"5.json","SsgUrl":"5.json","AccessStatus":"PRIVATE","Uuid":"064fccd2-e540-46a3-8fa6-fb9bf259806a","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 16:45:02.324  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 16:45:02.324  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 16:45:02.937  INFO 11964 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('5e83ec35-bf62-412d-a5cf-10e61c614266')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 6.json","SpecFilesize":"7001","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522235229617","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"6.json","SsgUrl":"6.json","AccessStatus":"PRIVATE","Uuid":"5e83ec35-bf62-412d-a5cf-10e61c614266","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 17:12:59.438  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-28 17:13:00.119  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.rest.APIMRestService       : am in create api()
2018-03-28 17:13:00.119  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "4351897abc367022fc085cef3f16f46fa6c57323",
  "after": "972eff11c35d4ffe80f565864b71ab76984767ec",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/4351897abc36...972eff11c35d",
  "commits": [
    {
      "id": "972eff11c35d4ffe80f565864b71ab76984767ec",
      "tree_id": "2284f798fb08534113f41f1769c58c6674bcf8f4",
      "distinct": true,
      "message": "Uploaded 9 Files\n\nTotal - 9 Files",
      "timestamp": "2018-03-28T17:11:41+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/972eff11c35d4ffe80f565864b71ab76984767ec",
      "author": {
        "name": "Dotridge",
        "email": "33683688+Dotridge@users.noreply.github.com",
        "username": "Dotridge"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "username": "web-flow"
      },
      "added": [
        "1.json",
        "2.json",
        "3.json",
        "4.json",
        "5.json",
        "6.json",
        "7.json",
        "8.json",
        "9.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "972eff11c35d4ffe80f565864b71ab76984767ec",
    "tree_id": "2284f798fb08534113f41f1769c58c6674bcf8f4",
    "distinct": true,
    "message": "Uploaded 9 Files\n\nTotal - 9 Files",
    "timestamp": "2018-03-28T17:11:41+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/972eff11c35d4ffe80f565864b71ab76984767ec",
    "author": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "username": "Dotridge"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "username": "web-flow"
    },
    "added": [
      "1.json",
      "2.json",
      "3.json",
      "4.json",
      "5.json",
      "6.json",
      "7.json",
      "8.json",
      "9.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-28T11:18:52Z",
    "pushed_at": 1522237302,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47195,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-28 17:13:12.268  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@7ab9bdf4
2018-03-28 17:13:12.268  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-28 17:13:17.665  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 17:13:17.678  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 17:13:18.656  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('5513ef99-ff00-4177-95a4-aa2431a83212')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 1.json","SpecFilesize":"2538","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jbG91ZHBpcGUiLA0KCQkidmVyc2lvbiI6ICJVbmtub3duIg0KCX0sDQoJImNvbnN1bWVzIjogWw0KCQkiYXBwbGljYXRpb24vanNvbiINCgldLA0KCSJwcm9kdWNlcyI6IFsNCgkJImFwcGxpY2F0aW9uL2pzb24iDQoJXSwNCgkiaG9zdCI6ICJwZXRzdG9yZS5zd2FnZ2VyLmlvIiwNCgkiYmFzZVBhdGgiOiAiLyIsDQoJInNjaGVtZXMiOiBbImh0dHAiXSwNCgkicGF0aHMiOiB7DQoJCSIvdjIve3RlbmFudF9pZH0vb3MtY2xvdWRwaXBlIjogew0KCQkJInBhcmFtZXRlcnMiOiBbew0KCQkJCSJuYW1lIjogInRlbmFudF9pZCIsDQoJCQkJInJlcXVpcmVkIjogdHJ1ZSwNCgkJCQkiaW4iOiAicGF0aCIsDQoJCQkJInR5cGUiOiAic3RyaW5nIiwNCgkJCQkiZGVzY3JpcHRpb24iOiAiVGhlIElEIGZvciB0aGUgdGVuYW50IG9yIGFjY291bnQgaW4gYSBtdWx0aS10ZW5hbmN5IGNsb3VkLlxuIg0KCQkJfV0sDQoJCQkiZ2V0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJsaXN0Q2xvdWRwaXBlcyIsDQoJCQkJInN1bW1hcnkiOiAiTGlzdCBjbG91ZHBpcGVzIiwNCgkJCQkiZGVzY3JpcHRpb24iOiAiTGlzdHMgY2xvdWRwaXBlcy5cbiIsDQoJCQkJInByb2R1Y2VzIjogWw0KCQkJCQkiYXBwbGljYXRpb24vanNvbiINCgkJCQldLA0KCQkJCSJyZXNwb25zZXMiOiB7DQoJCQkJCSIyMDAiOiB7DQoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAwIHJlc3BvbnNlIiwNCgkJCQkJCSJleGFtcGxlcyI6IHsNCgkJCQkJCQkiYXBwbGljYXRpb24vanNvbiI6ICJ7XG4gICAgXCJjbG91ZHBpcGVzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgXCJwdWJsaWNfaXBcIjogXCIxMjcuMC4wLjFcIixcbiAgICAgICAgICAgIFwiY3JlYXRlZF9hdFwiOiBcIjIwMTItMTEtMjdUMTc6MTg6MDFaXCIsXG4gICAgICAgICAgICBcInB1YmxpY19wb3J0XCI6IDIyLFxuICAgICAgICAgICAgXCJzdGF0ZVwiOiBcImRvd25cIixcbiAgICAgICAgICAgIFwiaW5zdGFuY2VfaWRcIjogXCIyN2RlZWNkYi1iYWEzLTRhMjYtOWM4Mi0zMjk5NGI4MTViMDFcIixcbiAgICAgICAgICAgIFwiaW50ZXJuYWxfaXBcIjogXCIxOTIuMTY4LjAuM1wiLFxuICAgICAgICAgICAgXCJwcm9qZWN0X2lkXCI6IFwiY2xvdWRwaXBlLWZhMTc2NWJkLWEzNTItNDljNy1hNmI3LThlZTEwOGEzY2IwY1wiXG4gICAgICAgIH1cbiAgICBdXG59Ig0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfQ0KCQkJfSwNCgkJCSJwb3N0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJjcmVhdGVDbG91ZHBpcGUiLA0KCQkJCSJzdW1tYXJ5IjogIkNyZWF0ZSBjbG91ZHBpcGUiLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJDcmVhdGVzIGEgY2xvdWRwaXBlLlxuIiwNCgkJCQkicHJvZHVjZXMiOiBbDQoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIg0KCQkJCV0sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMCI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDAgcmVzcG9uc2UiLA0KCQkJCQkJImV4YW1wbGVzIjogew0KCQkJCQkJCSJhcHBsaWNhdGlvbi9qc29uIjogIntcbiAgICBcImluc3RhbmNlX2lkXCI6IFwiMWU5Yjg0MjUtMzRhZi00ODhlLWI5NjktNGQ0NmY0YTYzODJlXCJcbn0iDQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9LA0KCQkJCSJwYXJhbWV0ZXJzIjogW3sNCgkJCQkJIm5hbWUiOiAicHJvamVjdF9pZCIsDQoJCQkJCSJyZXF1aXJlZCI6IGZhbHNlLA0KCQkJCQkiaW4iOiAicXVlcnkiLA0KCQkJCQkidHlwZSI6ICJzdHJpbmciLA0KCQkJCQkiZGVzY3JpcHRpb24iOiAiQ3JlYXRlcyB0aGUgY2xvdWRwaXBlIGZvciB0aGUgc3BlY2lmaWVkIHByb2plY3QgSUQuIElmIG9taXR0ZWQsIHRoZSBwcm9qZWN0IElEIGRlZmF1bHRzIHRvIHRoZSBjYWxsaW5nIHRlbmFudC5cbiINCgkJCQl9XQ0KCQkJfQ0KCQl9LA0KCQkiL3YyL3t0ZW5hbnRfaWR9L29zLWNsb3VkcGlwZS9jb25maWd1cmUtcHJvamVjdCI6IHsNCgkJCSJwYXJhbWV0ZXJzIjogW3sNCgkJCQkibmFtZSI6ICJ0ZW5hbnRfaWQiLA0KCQkJCSJyZXF1aXJlZCI6IHRydWUsDQoJCQkJImluIjogInBhdGgiLA0KCQkJCSJ0eXBlIjogInN0cmluZyIsDQoJCQkJImRlc2NyaXB0aW9uIjogIlRoZSBJRCBmb3IgdGhlIHRlbmFudCBvciBhY2NvdW50IGluIGEgbXVsdGktdGVuYW5jeSBjbG91ZC5cbiINCgkJCX1dLA0KCQkJInBvc3QiOiB7DQoJCQkJIm9wZXJhdGlvbklkIjogInVwZGF0ZUNsb3VkcGlwZSIsDQoJCQkJInN1bW1hcnkiOiAiVXBkYXRlIGNsb3VkcGlwZSIsDQoJCQkJImRlc2NyaXB0aW9uIjogIlVwZGF0ZXMgdGhlIHZpcnR1YWwgcHJpdmF0ZSBuZXR3b3JrIChWUE4pIElQIGFkZHJlc3MgYW5kIHBvcnQgZm9yIGEgc3BlY2lmaWVkIGNsb3VkcGlwZSBpbnN0YW5jZS5cbiIsDQoJCQkJInByb2R1Y2VzIjogW10sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMiI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDIgcmVzcG9uc2UiDQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCgl9DQp9","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522236925359","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"1.json","SsgUrl":"1.json","AccessStatus":"PRIVATE","Uuid":"5513ef99-ff00-4177-95a4-aa2431a83212","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 17:13:23.719  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 17:13:23.998  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 17:13:30.646  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('a233f502-c318-4153-bf74-0e9403890884')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 2.json","SpecFilesize":"161650","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522236934153","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"2.json","SsgUrl":"2.json","AccessStatus":"PRIVATE","Uuid":"a233f502-c318-4153-bf74-0e9403890884","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 17:13:31.819  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 17:13:31.824  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 17:13:34.466  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('8214195b-0c49-4b67-ab95-c3e250134586')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 3.json","SpecFilesize":"1175","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jb25zb2xlLW91dHB1dCIsDQoJCSJ2ZXJzaW9uIjogIlVua25vd24iDQoJfSwNCgkiY29uc3VtZXMiOiBbDQoJCSJhcHBsaWNhdGlvbi9qc29uIg0KCV0sDQoJInByb2R1Y2VzIjogWw0KCQkiYXBwbGljYXRpb24vanNvbiINCgldLA0KCSJob3N0IjogInBldHN0b3JlLnN3YWdnZXIuaW8iLA0KCSJiYXNlUGF0aCI6ICIvIiwNCgkic2NoZW1lcyI6IFsiaHR0cCJdLA0KCSJwYXRocyI6IHsNCgkJIi92Mi97dGVuYW50X2lkfS9zZXJ2ZXJzL3tzZXJ2ZXJfaWR9L2FjdGlvbiI6IHsNCgkJCSJwYXJhbWV0ZXJzIjogW3sNCgkJCQkJIm5hbWUiOiAidGVuYW50X2lkIiwNCgkJCQkJInJlcXVpcmVkIjogdHJ1ZSwNCgkJCQkJImluIjogInBhdGgiLA0KCQkJCQkidHlwZSI6ICJzdHJpbmciLA0KCQkJCQkiZGVzY3JpcHRpb24iOiAiVGhlIElEIGZvciB0aGUgdGVuYW50IG9yIGFjY291bnQgaW4gYSBtdWx0aS10ZW5hbmN5IGNsb3VkLlxuIg0KCQkJCX0sDQoJCQkJew0KCQkJCQkibmFtZSI6ICJzZXJ2ZXJfaWQiLA0KCQkJCQkicmVxdWlyZWQiOiB0cnVlLA0KCQkJCQkiaW4iOiAicGF0aCIsDQoJCQkJCSJ0eXBlIjogInN0cmluZyIsDQoJCQkJCSJkZXNjcmlwdGlvbiI6ICJUaGUgVVVJRCBmb3IgdGhlIHNlcnZlciBvZiBpbnRlcmVzdCB0byB5b3UuXG4iDQoJCQkJfQ0KCQkJXSwNCgkJCSJwb3N0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJnZXRDb25zb2xlT3V0cHV0IiwNCgkJCQkic3VtbWFyeSI6ICJHZXQgY29uc29sZSBvdXRwdXQgZm9yIGFuIGluc3RhbmNlIiwNCgkJCQkiZGVzY3JpcHRpb24iOiAiR2V0cyBjb25zb2xlIG91dHB1dCBmb3IgYSBzZXJ2ZXIgaW5zdGFuY2UuXG4iLA0KCQkJCSJwcm9kdWNlcyI6IFsNCgkJCQkJImFwcGxpY2F0aW9uL2pzb24iDQoJCQkJXSwNCgkJCQkicmVzcG9uc2VzIjogew0KCQkJCQkiMjAwIjogew0KCQkJCQkJImRlc2NyaXB0aW9uIjogIjIwMCByZXNwb25zZSIsDQoJCQkJCQkiZXhhbXBsZXMiOiB7DQoJCQkJCQkJImFwcGxpY2F0aW9uL2pzb24iOiAie1xuICAgIFwib3V0cHV0XCI6IFwiRkFLRSBDT05TT0xFIE9VVFBVVFxcbkFOT1RIRVJcXG5MQVNUIExJTkVcIlxufSINCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfQ0KCX0NCn0=","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522236940769","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"3.json","SsgUrl":"3.json","AccessStatus":"PRIVATE","Uuid":"8214195b-0c49-4b67-ab95-c3e250134586","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 17:13:36.658  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 17:13:36.663  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 17:13:40.900  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('759ee853-a971-4abb-a02c-e75bbafc0557')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 4.json","SpecFilesize":"1029","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jb25zb2xlcyIsDQoJCSJ2ZXJzaW9uIjogIlVua25vd24iDQoJfSwNCgkiY29uc3VtZXMiOiBbDQoJCSJhcHBsaWNhdGlvbi9qc29uIg0KCV0sDQoJInByb2R1Y2VzIjogWw0KCQkiYXBwbGljYXRpb24vanNvbiINCgldLA0KCSJob3N0IjogInBldHN0b3JlLnN3YWdnZXIuaW8iLA0KCSJiYXNlUGF0aCI6ICIvIiwNCgkic2NoZW1lcyI6IFsiaHR0cCJdLA0KCSJwYXRocyI6IHsNCgkJIi92Mi97dGVuYW50X2lkfS9zZXJ2ZXJzL3tzZXJ2ZXJfaWR9L2FjdGlvbiI6IHsNCgkJCSJwYXJhbWV0ZXJzIjogW3sNCgkJCQkJIm5hbWUiOiAidGVuYW50X2lkIiwNCgkJCQkJInJlcXVpcmVkIjogdHJ1ZSwNCgkJCQkJImluIjogInBhdGgiLA0KCQkJCQkidHlwZSI6ICJzdHJpbmciLA0KCQkJCQkiZGVzY3JpcHRpb24iOiAiVGhlIElEIGZvciB0aGUgdGVuYW50IG9yIGFjY291bnQgaW4gYSBtdWx0aS10ZW5hbmN5IGNsb3VkLlxuIg0KCQkJCX0sDQoJCQkJew0KCQkJCQkibmFtZSI6ICJzZXJ2ZXJfaWQiLA0KCQkJCQkicmVxdWlyZWQiOiB0cnVlLA0KCQkJCQkiaW4iOiAicGF0aCIsDQoJCQkJCSJ0eXBlIjogInN0cmluZyIsDQoJCQkJCSJkZXNjcmlwdGlvbiI6ICJUaGUgVVVJRCBmb3IgdGhlIHNlcnZlciBvZiBpbnRlcmVzdCB0byB5b3UuXG4iDQoJCQkJfQ0KCQkJXSwNCgkJCSJwb3N0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJnZXRDb25zb2xlIiwNCgkJCQkic3VtbWFyeSI6ICJHZXQgY29uc29sZSIsDQoJCQkJImRlc2NyaXB0aW9uIjogIkdldHMgYSBjb25zb2xlIGZvciBhIHNlcnZlciBpbnN0YW5jZS5cbiIsDQoJCQkJInByb2R1Y2VzIjogWw0KCQkJCQkiYXBwbGljYXRpb24vanNvbiINCgkJCQldLA0KCQkJCSJyZXNwb25zZXMiOiB7DQoJCQkJCSIyMDAiOiB7DQoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAwIHJlc3BvbnNlIiwNCgkJCQkJCSJleGFtcGxlcyI6IHt9DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCn0NCgl9","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522236947555","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"4.json","SsgUrl":"4.json","AccessStatus":"PRIVATE","Uuid":"759ee853-a971-4abb-a02c-e75bbafc0557","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 17:13:41.507  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 17:13:41.513  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 17:13:42.745  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('a1f3d6aa-f160-4a1c-b322-444fe7283a27')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 5.json","SpecFilesize":"926","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jb3ZlcmFnZSIsDQoJCSJ2ZXJzaW9uIjogIlVua25vd24iDQoJfSwNCgkiY29uc3VtZXMiOiBbDQoJCSJhcHBsaWNhdGlvbi9qc29uIg0KCV0sDQoJInByb2R1Y2VzIjogWw0KCQkiYXBwbGljYXRpb24vanNvbiINCgldLA0KCSJob3N0IjogInBldHN0b3JlLnN3YWdnZXIuaW8iLA0KCSJiYXNlUGF0aCI6ICIvIiwNCgkic2NoZW1lcyI6IFsiaHR0cCJdLA0KCSJwYXRocyI6IHsNCgkJIi92Mi97dGVuYW50X2lkfS9vcy1jb3ZlcmFnZS9hY3Rpb24iOiB7DQoJCQkicGFyYW1ldGVycyI6IFt7DQoJCQkJIm5hbWUiOiAidGVuYW50X2lkIiwNCgkJCQkicmVxdWlyZWQiOiB0cnVlLA0KCQkJCSJpbiI6ICJwYXRoIiwNCgkJCQkidHlwZSI6ICJzdHJpbmciLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJUaGUgSUQgZm9yIHRoZSB0ZW5hbnQgb3IgYWNjb3VudCBpbiBhIG11bHRpLXRlbmFuY3kgY2xvdWQuXG4iDQoJCQl9XSwNCgkJCSJwb3N0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJzdG9wUmVwb3J0IiwNCgkJCQkic3VtbWFyeSI6ICJTdG9wIGNvdmVyYWdlIHJlcG9ydCIsDQoJCQkJImRlc2NyaXB0aW9uIjogIlN0b3BzIGNvdmVyYWdlIHJlcG9ydGluZy5cbiIsDQoJCQkJInByb2R1Y2VzIjogWw0KCQkJCQkiYXBwbGljYXRpb24vanNvbiINCgkJCQldLA0KCQkJCSJyZXNwb25zZXMiOiB7DQoJCQkJCSIyMDIiOiB7DQoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAyIHJlc3BvbnNlIiwNCgkJCQkJCSJleGFtcGxlcyI6IHsNCgkJCQkJCQkiYXBwbGljYXRpb24vanNvbiI6ICJ7XG4gICAgXCJwYXRoXCI6IFwiL3RtcC90bXB1YTlIdkIvbm92YS1jb3ZlcmFnZV9yczJDYVNcIlxufSINCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfQ0KCX0NCn0=","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522236949387","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"5.json","SsgUrl":"5.json","AccessStatus":"PRIVATE","Uuid":"a1f3d6aa-f160-4a1c-b322-444fe7283a27","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 17:13:43.652  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 17:13:43.658  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 17:13:45.468  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('bc466eaf-4ba3-4b5a-9242-c04ac4a8b0ec')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 6.json","SpecFilesize":"7109","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522236952175","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"6.json","SsgUrl":"6.json","AccessStatus":"PRIVATE","Uuid":"bc466eaf-4ba3-4b5a-9242-c04ac4a8b0ec","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 17:13:46.087  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 17:13:46.094  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 17:13:47.608  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('d445c76f-2071-425d-b0c0-31f64d2721fd')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 7.json","SpecFilesize":"2331","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jZWxscy12Mi4xIiwNCgkJInZlcnNpb24iOiAiVW5rbm93biINCgl9LA0KCSJjb25zdW1lcyI6IFsNCgkJImFwcGxpY2F0aW9uL2pzb24iDQoJXSwNCgkicHJvZHVjZXMiOiBbDQoJCSJhcHBsaWNhdGlvbi9qc29uIg0KCV0sDQoJImhvc3QiOiAicGV0c3RvcmUuc3dhZ2dlci5pbyIsDQoJImJhc2VQYXRoIjogIi8iLA0KCSJzY2hlbWVzIjogWyJodHRwIl0sDQoJInBhdGhzIjogew0KCQkiL3YyLjEvb3MtY2VsbHMiOiB7DQoJCQkiZ2V0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJyZXR1cm5hbGxjZWxsIiwNCgkJCQkic3VtbWFyeSI6ICJMaXN0cyBjZWxscyB3aXRoIGRldGFpbHMiLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJMaXN0cyBjZWxscyB3aXRoIGRldGFpbHMuXG4iLA0KCQkJCSJwcm9kdWNlcyI6IFsNCgkJCQkJImFwcGxpY2F0aW9uL2pzb24iDQoJCQkJXSwNCgkJCQkicmVzcG9uc2VzIjogew0KCQkJCQkiMjAwIjogew0KCQkJCQkJImRlc2NyaXB0aW9uIjogIjIwMCByZXNwb25zZSIsDQoJCQkJCQkiZXhhbXBsZXMiOiB7DQoJCQkJCQkJImFwcGxpY2F0aW9uL2pzb24iOiAie1xuICAgIFwiY2VsbHNcIjogW11cbn0iDQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0sDQoJCSIvdjIuMS9vcy1jZWxscy9jZWxsMyI6IHsNCgkJCSJnZXQiOiB7DQoJCQkJIm9wZXJhdGlvbklkIjogImRhdGFjZWxsIiwNCgkJCQkic3VtbWFyeSI6ICJTaG93cyBjZWxsIGRhdGEiLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJTaG93cyBkYXRhIGZvciBhIHNwZWNpZmllZCBjZWxsLlxuIiwNCgkJCQkicHJvZHVjZXMiOiBbDQoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIg0KCQkJCV0sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMCI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDAgcmVzcG9uc2UiLA0KCQkJCQkJImV4YW1wbGVzIjogew0KCQkJCQkJCSJhcHBsaWNhdGlvbi9qc29uIjogIntcbiAgICBcImNlbGxcIjoge1xuICAgICAgICBcInVzZXJuYW1lXCI6IFwidXNlcm5hbWUzXCIsXG4gICAgICAgIFwicnBjX2hvc3RcIjogbnVsbCxcbiAgICAgICAgXCJ0eXBlXCI6IFwiY2hpbGRcIixcbiAgICAgICAgXCJuYW1lXCI6IFwiY2VsbDNcIixcbiAgICAgICAgXCJycGNfcG9ydFwiOiBudWxsXG4gICAgfVxufSINCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfSwNCgkJIi92Mi4xL29zLWNlbGxzL25vdmEvY2FwYWNpdGllcyI6IHsNCgkJCSJnZXQiOiB7DQoJCQkJIm9wZXJhdGlvbklkIjogImNlbGxjYXBhY2l0eSIsDQoJCQkJInN1bW1hcnkiOiAiU2hvd3MgY2VsbCBjYXBhY2l0aWVzIiwNCgkJCQkiZGVzY3JpcHRpb24iOiAiU2hvd3MgY2FwYWNpdGllcyBmb3IgYSBzcGVjaWZpZWQgY2VsbC5cbiIsDQoJCQkJInByb2R1Y2VzIjogWw0KCQkJCQkiYXBwbGljYXRpb24vanNvbiINCgkJCQldLA0KCQkJCSJyZXNwb25zZXMiOiB7DQoJCQkJCSIyMDAiOiB7DQoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAwIHJlc3BvbnNlIiwNCgkJCQkJCSJleGFtcGxlcyI6IHsNCgkJCQkJCQkiYXBwbGljYXRpb24vanNvbiI6ICJ7XG4gICAgXCJjZWxsXCI6IHtcbiAgICAgICAgXCJjYXBhY2l0aWVzXCI6IHtcbiAgICAgICAgICAgIFwicmFtX2ZyZWVcIjoge1xuICAgICAgICAgICAgICAgIFwidW5pdHNfYnlfbWJcIjoge1xuICAgICAgICAgICAgICAgICAgICBcIjgxOTJcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCI1MTJcIjogMTMsXG4gICAgICAgICAgICAgICAgICAgIFwiMTYzODRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCIyMDQ4XCI6IDMsXG4gICAgICAgICAgICAgICAgICAgIFwiNDA5NlwiOiAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInRvdGFsX21iXCI6IDc2ODBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImRpc2tfZnJlZVwiOiB7XG4gICAgICAgICAgICAgICAgXCJ1bml0c19ieV9tYlwiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiMFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcIjIwNDgwXCI6IDQ2LFxuICAgICAgICAgICAgICAgICAgICBcIjQwOTYwXCI6IDIzLFxuICAgICAgICAgICAgICAgICAgICBcIjE2Mzg0MFwiOiA1LFxuICAgICAgICAgICAgICAgICAgICBcIjgxOTIwXCI6IDExXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInRvdGFsX21iXCI6IDEwNTI2NzJcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iDQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCgl9DQp9","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522236954066","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"7.json","SsgUrl":"7.json","AccessStatus":"PRIVATE","Uuid":"d445c76f-2071-425d-b0c0-31f64d2721fd","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 17:13:48.581  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 17:13:48.586  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 17:13:50.338  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('14c304a1-fcc3-493b-9f48-37be4022fa35')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 8.json","SpecFilesize":"6053","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522236956706","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"8.json","SsgUrl":"8.json","AccessStatus":"PRIVATE","Uuid":"14c304a1-fcc3-493b-9f48-37be4022fa35","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 17:13:51.290  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/
2018-03-28 17:13:51.296  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-28 17:13:53.711  INFO 11964 --- [http-nio-8080-exec-4] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('b61cdef8-5409-4645-b184-aadb80a10730')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":null,"InSync":"0","PrivateDescription":null,"ServiceDisruption":"0","Name":"Swagger 9.json","SpecFilesize":"5846","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ew0KCSJzd2FnZ2VyIjogIjIuMCIsDQoJImluZm8iOiB7DQoJCSJ0aXRsZSI6ICJvcy1jZXJ0aWZpY2F0ZXMtdjIuMSIsDQoJCSJ2ZXJzaW9uIjogIlVua25vd24iDQoJfSwNCgkiY29uc3VtZXMiOiBbDQoJCSJhcHBsaWNhdGlvbi9qc29uIg0KCV0sDQoJInByb2R1Y2VzIjogWw0KCQkiYXBwbGljYXRpb24vanNvbiINCgldLA0KCSJob3N0IjogInBldHN0b3JlLnN3YWdnZXIuaW8iLA0KCSJiYXNlUGF0aCI6ICIvIiwNCgkic2NoZW1lcyI6IFsiaHR0cCJdLA0KCSJwYXRocyI6IHsNCgkJIi92Mi4xL29zLWNlcnRpZmljYXRlcyI6IHsNCgkJCSJwb3N0Ijogew0KCQkJCSJvcGVyYXRpb25JZCI6ICJjcmVhdGVjZXJ0aWZpY2F0ZSIsDQoJCQkJInN1bW1hcnkiOiAiQ3JlYXRlIGNlcnRpZmljYXRlIiwNCgkJCQkiZGVzY3JpcHRpb24iOiAiQ3JlYXRlcyBhIGNlcnRpZmljYXRlLlxuIiwNCgkJCQkicHJvZHVjZXMiOiBbDQoJCQkJCSJhcHBsaWNhdGlvbi9qc29uIg0KCQkJCV0sDQoJCQkJInJlc3BvbnNlcyI6IHsNCgkJCQkJIjIwMSI6IHsNCgkJCQkJCSJkZXNjcmlwdGlvbiI6ICIyMDEgcmVzcG9uc2UiLA0KCQkJCQkJImV4YW1wbGVzIjogew0KCQkJCQkJCSJhcHBsaWNhdGlvbi9qc29uIjogIntcbiAgICBcImNlcnRpZmljYXRlXCI6IHtcbiAgICAgICAgXCJwcml2YXRlX2tleVwiOiBcIi0tLS0tQkVHSU4gUlNBIFBSSVZBVEUgS0VZLS0tLS1cXG5NSUlDWGdJQkFBS0JnUUNzLzdIUjdWUk9OV3cwdEk4TEJGQWxvK0pQQWt4UEpsbTk4LzNyMmhqQ05xcGpRbklmXFxuaUU4NjdPZWZqa1FxMDdpVWV5QkIrRWdDVjVGTUZtTHhJZFR5UUxXR1VObGg4TDcvMkkyZlM2cHFCemlpZjRjaFxcbi9PWnVIUXFWR3BBT1lNSWs2WTdvYUJ2cDg4YXdmTnJGSUdhYmhlcjF5YWZlN2hheFVhQk40NVdZM3dJREFRQUJcXG5Bb0dCQUlyY3IySS9LeVdmMGh3NE5uMTBWOVR1eUUvOUd6MkpIZzNRRktqRkpveDJEcXlnQURUNVdBZUhjNkJxXFxuTktOZjBOQTJTTDFMU3BtK3FsMDF0dk93NFZqRTVURjZPSGlJekh1VFRuWGdnRzZ2dUE4cnhwNkwyNEh0a0FjQ1xcbjBDQm5vOWdnU1g2alZvcm5KUEJmeHBrd0lUWVN2SDU3QlVGVkQ3b3ZiUHlXR3pTNUFrRUExSmVVdEw2enh3cHNcXG5XUnIxYUo4SWxsMnVRay9SVUl2U1pPVTYxcytCMTkwenZIaWtGeThMRDhDSTZ2dkJtakMvSVp1WlZlZHVmanFzXFxuNHZYODJ1RE8zUUpCQU5CU2gyYjJkeUI0QUdWRlk5dlhNUnRBTEFzcEpIYkxIeSt6VEt4bEdQRml1ejdTZTNwc1xcbjhLZWh6NEMvQ0JYZ1FrazE5NGR3RlNHRTE5L1BRZnlKUk9zQ1FRQ0ZGREpaaHJ0QlVNd01aMnpTUmlONUJVR3RcXG5id3VuY1MrT1MxU3UzWXo1VlJZcTJCWllFUEhLdFlyQUZrTFdROGVSd1RhV2FONXBGRS9mYjM4T2dRWGRBa0E0XFxuRG0wVy9LMHpsSGJ1eVV4RXBOUTI4LzZtQmkwa3RpV3ZMVDB0aW9xNnNZbVhMd1pBL0QySnJoWHJHL3h0L29sM1xcbnI4anFyZk5Sc0xCeUxoQWdoME4vQWtFQWwyZVIwTzk3bFRFZ0ZOcXpJUXdWbUlBbjltQk8zY25mM3R5Y3ZsRFVcXG5tNmViMkNTMjQyeTRRYWxmQ0NBRWp4b0pVUmRmc20zL0QxaUZvMDBYK0lXRitBPT1cXG4tLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLVxcblwiLFxuICAgICAgICBcImRhdGFcIjogXCJDZXJ0aWZpY2F0ZTpcXG4gICAgRGF0YTpcXG4gICAgICAgIFZlcnNpb246IDEgKDB4MClcXG4gICAgICAgIFNlcmlhbCBOdW1iZXI6IDEwMTggKDB4M2ZhKVxcbiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBtZDVXaXRoUlNBRW5jcnlwdGlvblxcbiAgICAgICAgSXNzdWVyOiBPPU5PVkEgUk9PVCwgTD1Nb3VudGFpbiBWaWV3LCBTVD1DYWxpZm9ybmlhLCBDPVVTXFxuICAgICAgICBWYWxpZGl0eVxcbiAgICAgICAgICAgIE5vdCBCZWZvcmU6IEF1ZyAxMiAwNzoyMDozMCAyMDEzIEdNVFxcbiAgICAgICAgICAgIE5vdCBBZnRlciA6IEF1ZyAxMiAwNzoyMDozMCAyMDE0IEdNVFxcbiAgICAgICAgU3ViamVjdDogQz1VUywgU1Q9Q2FsaWZvcm5pYSwgTz1PcGVuU3RhY2ssIE9VPU5vdmFEZXYsIENOPW9wZW5zdGFjay1mYWtlLTIwMTMtMDgtMTJUMDc6MjA6MzBaXFxuICAgICAgICBTdWJqZWN0IFB1YmxpYyBLZXkgSW5mbzpcXG4gICAgICAgICAgICBQdWJsaWMgS2V5IEFsZ29yaXRobTogcnNhRW5jcnlwdGlvblxcbiAgICAgICAgICAgICAgICBQdWJsaWMtS2V5OiAoMTAyNCBiaXQpXFxuICAgICAgICAgICAgICAgIE1vZHVsdXM6XFxuICAgICAgICAgICAgICAgICAgICAwMDphYzpmZjpiMTpkMTplZDo1NDo0ZTozNTo2YzozNDpiNDo4ZjowYjowNDpcXG4gICAgICAgICAgICAgICAgICAgIDUwOjI1OmEzOmUyOjRmOjAyOjRjOjRmOjI2OjU5OmJkOmYzOmZkOmViOmRhOlxcbiAgICAgICAgICAgICAgICAgICAgMTg6YzI6MzY6YWE6NjM6NDI6NzI6MWY6ODg6NGY6M2E6ZWM6ZTc6OWY6OGU6XFxuICAgICAgICAgICAgICAgICAgICA0NDoyYTpkMzpiODo5NDo3YjoyMDo0MTpmODo0ODowMjo1Nzo5MTo0YzoxNjpcXG4gICAgICAgICAgICAgICAgICAgIDYyOmYxOjIxOmQ0OmYyOjQwOmI1Ojg2OjUwOmQ5OjYxOmYwOmJlOmZmOmQ4OlxcbiAgICAgICAgICAgICAgICAgICAgOGQ6OWY6NGI6YWE6NmE6MDc6Mzg6YTI6N2Y6ODc6MjE6ZmM6ZTY6NmU6MWQ6XFxuICAgICAgICAgICAgICAgICAgICAwYTo5NToxYTo5MDowZTo2MDpjMjoyNDplOTo4ZTplODo2ODoxYjplOTpmMzpcXG4gICAgICAgICAgICAgICAgICAgIGM2OmIwOjdjOmRhOmM1OjIwOjY2OjliOjg1OmVhOmY1OmM5OmE3OmRlOmVlOlxcbiAgICAgICAgICAgICAgICAgICAgMTY6YjE6NTE6YTA6NGQ6ZTM6OTU6OTg6ZGZcXG4gICAgICAgICAgICAgICAgRXhwb25lbnQ6IDY1NTM3ICgweDEwMDAxKVxcbiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBtZDVXaXRoUlNBRW5jcnlwdGlvblxcbiAgICAgICAgIDE1OjQyOmNhOjcxOmNjOjMyOmFmOmRjOmNmOjQ1OjkxOmRmOjhhOmI4OjMwOmM0OjdmOjc4OlxcbiAgICAgICAgIDgwOmE3OjI1OmMyOmQ5OjgxOjNlOmIzOmRkOjIyOmNjOjNiOmY4Ojk0OmU3OjhmOjA0OmY2OlxcbiAgICAgICAgIDkzOjA0OjllOjg1OmQ0OjEwOjQwOmZmOjVhOjA3OjQ3OjI0OmI1OmFlOjkzOmFkOjhkOmUxOlxcbiAgICAgICAgIGU2OjU0OjRhOjhkOjRhOjI5OjUzOmM0OjhkOjA0OjZiOjBiOmY2OmFmOjM4Ojc4OjAyOmM1OlxcbiAgICAgICAgIDA1OjE5Ojg5OjgyOjJkOmJhOmZkOjExOjNjOjFlOjE4OmM5OjBjOjNkOjAzOjkzOjZlOmJjOlxcbiAgICAgICAgIDY2OjcwOjM0OmVlOjAzOjc4OjhhOjFkOjNkOjY0OmU4OjIwOjJmOjkwOjgxOjhlOjQ5OjFkOlxcbiAgICAgICAgIDA3OjM3OjE1OjY2OjQyOmNiOjU4OjM5OmFkOjU2OmNlOmVkOjQ3OmM2Ojc4OjBiOjBlOjc1OlxcbiAgICAgICAgIDI5OmNhXFxuLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tXFxuTUlJQ05EQ0NBWjBDQWdQNk1BMEdDU3FHU0liM0RRRUJCQVVBTUU0eEVqQVFCZ05WQkFvVENVNVBWa0VnVWs5UFxcblZERVdNQlFHQTFVRUJ4TU5UVzkxYm5SaGFXNGdWbWxsZHpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURUxcXG5NQWtHQTFVRUJoTUNWVk13SGhjTk1UTXdPREV5TURjeU1ETXdXaGNOTVRRd09ERXlNRGN5TURNd1dqQjJNUXN3XFxuQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0F3S1EyRnNhV1p2Y201cFlURVNNQkFHQTFVRUNnd0pUM0JsYmxOMFxcbllXTnJNUkF3RGdZRFZRUUxEQWRPYjNaaFJHVjJNU3d3S2dZRFZRUUREQ052Y0dWdWMzUmhZMnN0Wm1GclpTMHlcXG5NREV6TFRBNExURXlWREEzT2pJd09qTXdXakNCbnpBTkJna3Foa2lHOXcwQkFRRUZBQU9CalFBd2dZa0NnWUVBXFxuclAreDBlMVVUalZzTkxTUEN3UlFKYVBpVHdKTVR5Wlp2ZlA5NjlvWXdqYXFZMEp5SDRoUE91em5uNDVFS3RPNFxcbmxIc2dRZmhJQWxlUlRCWmk4U0hVOGtDMWhsRFpZZkMrLzlpTm4wdXFhZ2M0b24rSElmem1iaDBLbFJxUURtRENcXG5KT21PNkdnYjZmUEdzSHpheFNCbW00WHE5Y21uM3U0V3NWR2dUZU9WbU44Q0F3RUFBVEFOQmdrcWhraUc5dzBCXFxuQVFRRkFBT0JnUUFWUXNweHpES3YzTTlGa2QrS3VEREVmM2lBcHlYQzJZRStzOTBpekR2NGxPZVBCUGFUQko2RlxcbjFCQkEvMW9IUnlTMXJwT3RqZUhtVkVxTlNpbFR4STBFYXd2MnJ6aDRBc1VGR1ltQ0xicjlFVHdlR01rTVBRT1RcXG5icnhtY0RUdUEzaUtIVDFrNkNBdmtJR09TUjBITnhWbVFzdFlPYTFXenUxSHhuZ0xEblVweWc9PVxcbi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS1cXG5cIlxuICAgIH1cbn0iDQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0sDQoJCSIvdjIuMS9vcy1jZXJ0aWZpY2F0ZXMvcm9vdCI6IHsNCgkJCSJnZXQiOiB7DQoJCQkJIm9wZXJhdGlvbklkIjogInJldHVybmNlcnRpZmljYXRlIiwNCgkJCQkic3VtbWFyeSI6ICJTaG93IGNlcnRpZmljYXRlIGRldGFpbHMiLA0KCQkJCSJkZXNjcmlwdGlvbiI6ICJTaG93cyBkZXRhaWxzIGZvciBhIHNwZWNpZmllZCBjZXJ0aWZpY2F0ZS5cbiIsDQoJCQkJInByb2R1Y2VzIjogWw0KCQkJCQkiYXBwbGljYXRpb24vanNvbiINCgkJCQldLA0KCQkJCSJyZXNwb25zZXMiOiB7DQoJCQkJCSIyMDAiOiB7DQoJCQkJCQkiZGVzY3JpcHRpb24iOiAiMjAwIHJlc3BvbnNlIiwNCgkJCQkJCSJleGFtcGxlcyI6IHsNCgkJCQkJCQkiYXBwbGljYXRpb24vanNvbiI6ICJ7XG4gICAgXCJjZXJ0aWZpY2F0ZVwiOiB7XG4gICAgICAgIFwicHJpdmF0ZV9rZXlcIjogbnVsbCxcbiAgICAgICAgXCJkYXRhXCI6IFwiLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tXFxuTUlJQ3l6Q0NBalNnQXdJQkFnSUpBSjh6U0l4VXAvbTRNQTBHQ1NxR1NJYjNEUUVCQkFVQU1FNHhFakFRQmdOVlxcbkJBb1RDVTVQVmtFZ1VrOVBWREVXTUJRR0ExVUVCeE1OVFc5MWJuUmhhVzRnVm1sbGR6RVRNQkVHQTFVRUNCTUtcXG5RMkZzYVdadmNtNXBZVEVMTUFrR0ExVUVCaE1DVlZNd0hoY05NVEl4TURFM01ERXpNek01V2hjTk1UTXhNREUzXFxuTURFek16TTVXakJPTVJJd0VBWURWUVFLRXdsT1QxWkJJRkpQVDFReEZqQVVCZ05WQkFjVERVMXZkVzUwWVdsdVxcbklGWnBaWGN4RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEN6QUpCZ05WQkFZVEFsVlRNSUdmTUEwR0NTcUdcXG5TSWIzRFFFQkFRVUFBNEdOQURDQmlRS0JnUURYVzRRZlFReEpHNE1xdXJxSzhuVS9MZ2UwbWZOS3hYai9Hd3ZnXFxuMnNRVnd4em1LZm94aWg4Tm42eXQweUhNTmpob2ppMVVvV0kwM1RYVW5QWlJBWm1zeXBHS1plQmQ3WTFaT0NQQlxcblhHWlZHclFtK1BCMmtaVSszY0Q4ZlZLY3VlTUxMZVorTFJ0NWQwbmpub0toYzV4anFNbGZGUGltSE1iYTRPTDZcXG5Ubll6UFFJREFRQUJvNEd3TUlHdE1Bd0dBMVVkRXdRRk1BTUJBZjh3SFFZRFZSME9CQllFRkt5b0t1NFNNT0ZNXFxuZ3g1RWM3cDBuckNrYWJ2eE1INEdBMVVkSXdSM01IV0FGS3lvS3U0U01PRk1neDVFYzdwMG5yQ2thYnZ4b1ZLa1xcblVEQk9NUkl3RUFZRFZRUUtFd2xPVDFaQklGSlBUMVF4RmpBVUJnTlZCQWNURFUxdmRXNTBZV2x1SUZacFpYY3hcXG5FekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4Q3pBSkJnTlZCQVlUQWxWVGdna0Fuek5JakZTbitiZ3dEUVlKXFxuS29aSWh2Y05BUUVFQlFBRGdZRUFYdXZYbHUxby9TVnZ5a1NMaEhXOFFpQVkwMHl6Ti9lRHpZbVpHb21naXVvT1xcbi94K2F5VnpicnoxVVdabkJEK2xDNGhsbDJpRUxTbWYyMkxqTG9GK3MvOU55UHFIeEdMM0ZyZmF0QmtuZGFpRjhcXG5BeC9UTUV5Q1BsN0lRV2krM3p6YXRxT0tIU0hpRzdhOVNHbi83bzJhTlRJV0tWdWxmeTVHdm1iQmpCTS8wVUU9XFxuLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxcblwiXG4gICAgfVxufSINCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfQ0KCX0NCn0=","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522236959666","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"9.json","SsgUrl":"9.json","AccessStatus":"PRIVATE","Uuid":"b61cdef8-5409-4645-b184-aadb80a10730","ApiLocationUrl":"http://petstore.swagger.io/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-28 17:52:00.573  INFO 11964 --- [RMI TCP Connection(74)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2018-03-28 17:52:00.573  INFO 11964 --- [RMI TCP Connection(74)-127.0.0.1] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Wed Mar 28 16:43:49 IST 2018]; root of context hierarchy
2018-03-28 17:52:00.882  INFO 11964 --- [RMI TCP Connection(74)-127.0.0.1] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2018-03-28 17:52:01.014  INFO 11964 --- [RMI TCP Connection(74)-127.0.0.1] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2018-03-29 08:59:43.231  INFO 8620 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 8620 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-29 08:59:43.251  INFO 8620 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-29 08:59:43.301  INFO 8620 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Thu Mar 29 08:59:43 IST 2018]; root of context hierarchy
2018-03-29 08:59:44.530  INFO 8620 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-29 08:59:44.551  INFO 8620 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-29 08:59:44.561  INFO 8620 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-29 08:59:44.651  INFO 8620 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-29 08:59:44.651  INFO 8620 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1350 ms
2018-03-29 08:59:44.873  INFO 8620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-29 08:59:44.873  INFO 8620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-29 08:59:44.873  INFO 8620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-29 08:59:44.873  INFO 8620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-29 08:59:44.873  INFO 8620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-29 08:59:44.873  INFO 8620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-29 08:59:44.873  INFO 8620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-29 08:59:44.873  INFO 8620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-29 08:59:44.883  INFO 8620 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-29 08:59:45.163  INFO 8620 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Thu Mar 29 08:59:43 IST 2018]; root of context hierarchy
2018-03-29 08:59:45.213  INFO 8620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-29 08:59:45.213  INFO 8620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-29 08:59:45.213  INFO 8620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-29 08:59:45.213  INFO 8620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-29 08:59:45.233  INFO 8620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-29 08:59:45.233  INFO 8620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-29 08:59:45.263  INFO 8620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-29 08:59:45.460  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-29 08:59:45.460  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 08:59:45.460  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-29 08:59:45.460  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 08:59:45.460  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 08:59:45.460  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 08:59:45.460  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-29 08:59:45.460  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 08:59:45.460  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 08:59:45.470  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-29 08:59:45.470  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 08:59:45.470  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-29 08:59:45.470  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-29 08:59:45.470  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-29 08:59:45.470  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 08:59:45.470  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 08:59:45.470  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-29 08:59:45.470  INFO 8620 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 08:59:45.569  INFO 8620 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-29 08:59:45.569  INFO 8620 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-29 08:59:45.660  INFO 8620 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-29 08:59:45.660  INFO 8620 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 2.849 seconds (JVM running for 4.132)
2018-03-29 09:04:24.195  INFO 8620 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-29 09:04:24.195  INFO 8620 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-29 09:04:24.206  INFO 8620 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 11 ms
2018-03-29 09:04:24.226  INFO 8620 --- [http-nio-8080-exec-1] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-29 09:04:24.256  INFO 8620 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : am in create api()
2018-03-29 09:04:24.256  INFO 8620 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "c2621e7d0b46734f679b0e3505ff02b6beac63f6",
  "after": "bb750212f75d32f168c7a8badf6145ef49fae0dc",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/c2621e7d0b46...bb750212f75d",
  "commits": [
    {
      "id": "bb750212f75d32f168c7a8badf6145ef49fae0dc",
      "tree_id": "31f686ca65cae6590ba676468ac7c8ef0d7de542",
      "distinct": true,
      "message": "added the swagger json files",
      "timestamp": "2018-03-29T09:02:46+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/bb750212f75d32f168c7a8badf6145ef49fae0dc",
      "author": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "committer": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "added": [
        "json api files/SwaggerUsersAPI.json",
        "json api files/jsonplaceholder.json",
        "json api files/petstore-swagger.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "bb750212f75d32f168c7a8badf6145ef49fae0dc",
    "tree_id": "31f686ca65cae6590ba676468ac7c8ef0d7de542",
    "distinct": true,
    "message": "added the swagger json files",
    "timestamp": "2018-03-29T09:02:46+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/bb750212f75d32f168c7a8badf6145ef49fae0dc",
    "author": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "committer": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "added": [
      "json api files/SwaggerUsersAPI.json",
      "json api files/jsonplaceholder.json",
      "json api files/petstore-swagger.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-29T03:27:56Z",
    "pushed_at": 1522294398,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47199,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-29 09:05:13.374  INFO 8620 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@4007fcc2
2018-03-29 09:05:13.375  INFO 8620 --- [http-nio-8080-exec-1] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-29 09:05:15.175  INFO 8620 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	https://reqres.in/api
2018-03-29 09:05:15.378  INFO 8620 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-29 09:05:45.379  INFO 8620 --- [RMI TCP Connection(12)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2018-03-29 09:05:45.380  INFO 8620 --- [RMI TCP Connection(12)-127.0.0.1] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Thu Mar 29 08:59:43 IST 2018]; root of context hierarchy
2018-03-29 09:05:45.397  INFO 8620 --- [RMI TCP Connection(12)-127.0.0.1] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2018-03-29 09:05:45.401  INFO 8620 --- [RMI TCP Connection(12)-127.0.0.1] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2018-03-29 09:06:44.084  INFO 4976 --- [main] c.i.GithubPushEventApiApplication        : Starting GithubPushEventApiApplication on GISLOANSD-645 with PID 4976 (C:\ca-apim-portal\github-push-event-api\target\classes started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-29 09:06:44.094  INFO 4976 --- [main] c.i.GithubPushEventApiApplication        : No active profile set, falling back to default profiles: default
2018-03-29 09:06:44.123  INFO 4976 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Thu Mar 29 09:06:44 IST 2018]; root of context hierarchy
2018-03-29 09:06:45.021  INFO 4976 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-03-29 09:06:45.031  INFO 4976 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-29 09:06:45.031  INFO 4976 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-29 09:06:45.104  INFO 4976 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-29 09:06:45.104  INFO 4976 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 981 ms
2018-03-29 09:06:45.326  INFO 4976 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'metricsFilter' to: [/*]
2018-03-29 09:06:45.326  INFO 4976 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-29 09:06:45.326  INFO 4976 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-29 09:06:45.326  INFO 4976 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-29 09:06:45.326  INFO 4976 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-29 09:06:45.326  INFO 4976 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-29 09:06:45.326  INFO 4976 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'CORSResponseFilter' to: [/*]
2018-03-29 09:06:45.326  INFO 4976 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-29 09:06:45.336  INFO 4976 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-03-29 09:06:45.587  INFO 4976 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Thu Mar 29 09:06:44 IST 2018]; root of context hierarchy
2018-03-29 09:06:45.627  INFO 4976 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-29 09:06:45.627  INFO 4976 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-29 09:06:45.627  INFO 4976 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-29 09:06:45.627  INFO 4976 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-29 09:06:45.657  INFO 4976 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-29 09:06:45.657  INFO 4976 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-29 09:06:45.677  INFO 4976 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-29 09:06:45.857  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-29 09:06:45.858  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 09:06:45.859  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 09:06:45.869  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 09:06:45.879  INFO 4976 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 09:06:45.979  INFO 4976 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-29 09:06:45.989  INFO 4976 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-29 09:06:46.085  INFO 4976 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-03-29 09:06:46.085  INFO 4976 --- [main] c.i.GithubPushEventApiApplication        : Started GithubPushEventApiApplication in 2.195 seconds (JVM running for 3.02)
2018-03-29 09:06:59.579  INFO 4976 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-29 09:06:59.579  INFO 4976 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-29 09:06:59.580  INFO 4976 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 1 ms
2018-03-29 09:06:59.600  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-29 09:06:59.620  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : am in create api()
2018-03-29 09:06:59.620  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "c2621e7d0b46734f679b0e3505ff02b6beac63f6",
  "after": "bb750212f75d32f168c7a8badf6145ef49fae0dc",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/c2621e7d0b46...bb750212f75d",
  "commits": [
    {
      "id": "bb750212f75d32f168c7a8badf6145ef49fae0dc",
      "tree_id": "31f686ca65cae6590ba676468ac7c8ef0d7de542",
      "distinct": true,
      "message": "added the swagger json files",
      "timestamp": "2018-03-29T09:02:46+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/bb750212f75d32f168c7a8badf6145ef49fae0dc",
      "author": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "committer": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "added": [
        "json api files/SwaggerUsersAPI.json",
        "json api files/jsonplaceholder.json",
        "json api files/petstore-swagger.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "bb750212f75d32f168c7a8badf6145ef49fae0dc",
    "tree_id": "31f686ca65cae6590ba676468ac7c8ef0d7de542",
    "distinct": true,
    "message": "added the swagger json files",
    "timestamp": "2018-03-29T09:02:46+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/bb750212f75d32f168c7a8badf6145ef49fae0dc",
    "author": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "committer": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "added": [
      "json api files/SwaggerUsersAPI.json",
      "json api files/jsonplaceholder.json",
      "json api files/petstore-swagger.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-29T03:27:56Z",
    "pushed_at": 1522294398,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47199,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-29 09:07:07.089  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@24994d42
2018-03-29 09:07:07.090  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-29 09:07:08.812  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	https://reqres.in/api
2018-03-29 09:07:08.922  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-29 09:07:09.759  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('6fef402a-88aa-4591-8d2a-218a7434b69c')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"","InSync":"0","PrivateDescription":"","ServiceDisruption":"0","Name":"Swagger json api files/SwaggerUsersAPI.json","SpecFilesize":"9101","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,ewogICJzd2FnZ2VyIjogIjIuMCIsCiAgImluZm8iOiB7CiAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICJ2ZXJzaW9uIjogIjEuMC4wIiwKICAgICJ0aXRsZSI6ICJTd2FnZ2VyIFRlc3QiCiAgfSwKICAiaG9zdCI6ICJyZXFyZXMuaW4iLAogICJiYXNlUGF0aCI6ICIvYXBpIiwKICAic2NoZW1lcyI6IFsKICAgICJodHRwcyIKICBdLAogICJwYXRocyI6IHsKICAgICIvdW5rbm93bi97ZmluZEJ5SWR9IjogewogICAgICAiZ2V0IjogewogICAgICAgICJ0YWdzIjogWwogICAgICAgICAgInVzZXJEZXRhaWxzIgogICAgICAgIF0sCiAgICAgICAgInN1bW1hcnkiOiAiRmluZHMgUGV0cyBieSBzdGF0dXMiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJNdWx0aXBsZSBzdGF0dXMgdmFsdWVzIGNhbiBiZSBwcm92aWRlZCB3aXRoIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmdzIiwKICAgICAgICAib3BlcmF0aW9uSWQiOiAiZmluZFBldHNCeVN0YXR1cyIsCiAgICAgICAgInByb2R1Y2VzIjogWwogICAgICAgICAgImFwcGxpY2F0aW9uL3htbCIsCiAgICAgICAgICAiYXBwbGljYXRpb24vanNvbiIKICAgICAgICBdLAogICAgICAgICJwYXJhbWV0ZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJmaW5kQnlJZCIsCiAgICAgICAgICAgICJpbiI6ICJwYXRoIiwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIklEIG9mIHBldCB0aGF0IG5lZWRzIHRvIGJlIGZldGNoZWQiLAogICAgICAgICAgICAicmVxdWlyZWQiOiB0cnVlLAogICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgIm1heGltdW0iOiAxMCwKICAgICAgICAgICAgIm1pbmltdW0iOiAxLAogICAgICAgICAgICAiZm9ybWF0IjogImludDY0IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlc3BvbnNlcyI6IHsKICAgICAgICAgICIyMDAiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJzdWNjZXNzZnVsIG9wZXJhdGlvbiIsCiAgICAgICAgICAgICJzY2hlbWEiOiB7CiAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy91bmtub3duIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgIjQwMCI6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkludmFsaWQgSUQgc3VwcGxpZWQiCiAgICAgICAgICB9LAogICAgICAgICAgIjQwNCI6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIk9yZGVyIG5vdCBmb3VuZCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiL3VzZXJzL3tJZH0iOiB7CiAgICAgICJwYXJhbWV0ZXJzIjogWwogICAgICAgIHsKICAgICAgICAgICJuYW1lIjogIklkIiwKICAgICAgICAgICJpbiI6ICJwYXRoIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJRCBvZiBwZXQgdGhhdCBuZWVkcyB0byBiZSBmZXRjaGVkIiwKICAgICAgICAgICJyZXF1aXJlZCI6IHRydWUsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtYXhpbXVtIjogMTAsCiAgICAgICAgICAibWluaW11bSI6IDEsCiAgICAgICAgICAiZm9ybWF0IjogImludDY0IgogICAgICAgIH0KICAgICAgXSwKICAgICAgImdldCI6IHsKICAgICAgICAidGFncyI6IFsKICAgICAgICAgICJ1c2Vyc2J5SWQiCiAgICAgICAgXSwKICAgICAgICAic3VtbWFyeSI6ICJSZXR1cm5zIHBldCBpbnZlbnRvcmllcyBieSBzdGF0dXMiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJSZXR1cm5zIGEgbWFwIG9mIHN0YXR1cyBjb2RlcyB0byBxdWFudGl0aWVzIiwKICAgICAgICAib3BlcmF0aW9uSWQiOiAiZ2V0SW52ZW50b3J5IiwKICAgICAgICAicHJvZHVjZXMiOiBbCiAgICAgICAgICAiYXBwbGljYXRpb24vanNvbiIKICAgICAgICBdLAogICAgICAgICJyZXNwb25zZXMiOiB7CiAgICAgICAgICAiMjAwIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLAogICAgICAgICAgICAic2NoZW1hIjogewogICAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvVXNlcnMiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAiNDAwIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW52YWxpZCBJRCBzdXBwbGllZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA0IjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiT3JkZXIgbm90IGZvdW5kIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInB1dCI6IHsKICAgICAgICAidGFncyI6IFsKICAgICAgICAgICJ1cGRhdGVVc2VyIgogICAgICAgIF0sCiAgICAgICAgInN1bW1hcnkiOiAiVXBkYXRlIGFuIGV4aXN0aW5nIHBldCIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgIm9wZXJhdGlvbklkIjogInVwZGF0ZVBldCIsCiAgICAgICAgImNvbnN1bWVzIjogWwogICAgICAgICAgImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICAgImFwcGxpY2F0aW9uL3htbCIKICAgICAgICBdLAogICAgICAgICJwcm9kdWNlcyI6IFsKICAgICAgICAgICJhcHBsaWNhdGlvbi94bWwiLAogICAgICAgICAgImFwcGxpY2F0aW9uL2pzb24iCiAgICAgICAgXSwKICAgICAgICAicGFyYW1ldGVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImluIjogImJvZHkiLAogICAgICAgICAgICAibmFtZSI6ICJib2R5IiwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlBldCBvYmplY3QgdGhhdCBuZWVkcyB0byBiZSBhZGRlZCB0byB0aGUgc3RvcmUiLAogICAgICAgICAgICAicmVxdWlyZWQiOiB0cnVlLAogICAgICAgICAgICAic2NoZW1hIjogewogICAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvVXNlcnNSZXEiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZXNwb25zZXMiOiB7CiAgICAgICAgICAiNDAwIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW52YWxpZCBJRCBzdXBwbGllZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA0IjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUGV0IG5vdCBmb3VuZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA1IjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVmFsaWRhdGlvbiBleGNlcHRpb24iCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAiZGVsZXRlIjogewogICAgICAgICJ0YWdzIjogWwogICAgICAgICAgImRlbGV0ZVVzZXIiCiAgICAgICAgXSwKICAgICAgICAic3VtbWFyeSI6ICJEZWxldGVzIGEgdXNlciIsCiAgICAgICAgInJlc3BvbnNlcyI6IHsKICAgICAgICAgICIyMDQiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJ1c2VyIHdhcyBkZWxldGVkIHN1Y2Nlc3NmdWxseS4iCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIi91c2VycyI6IHsKICAgICAgImdldCI6IHsKICAgICAgICAidGFncyI6IFsKICAgICAgICAgICJ1c2VycyIKICAgICAgICBdLAogICAgICAgICJzdW1tYXJ5IjogIlJldHVybnMgcGV0IGludmVudG9yaWVzIGJ5IHN0YXR1cyIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIlJldHVybnMgYSBtYXAgb2Ygc3RhdHVzIGNvZGVzIHRvIHF1YW50aXRpZXMiLAogICAgICAgICJwcm9kdWNlcyI6IFsKICAgICAgICAgICJhcHBsaWNhdGlvbi9qc29uIgogICAgICAgIF0sCiAgICAgICAgInBhcmFtZXRlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJpbiI6ICJxdWVyeSIsCiAgICAgICAgICAgICJuYW1lIjogInBhZ2UiLAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAib3JkZXIgcGxhY2VkIGZvciBwdXJjaGFzaW5nIHRoZSBwZXQiLAogICAgICAgICAgICAicmVxdWlyZWQiOiB0cnVlLAogICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgImZvcm1hdCI6ICJpbnQzMiIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZXNwb25zZXMiOiB7CiAgICAgICAgICAiMjAwIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLAogICAgICAgICAgICAic2NoZW1hIjogewogICAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvdXNlcnNEZWF0aWwiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAiNDAwIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW52YWxpZCBJRCBzdXBwbGllZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA0IjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiT3JkZXIgbm90IGZvdW5kIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInBvc3QiOiB7CiAgICAgICAgInRhZ3MiOiBbCiAgICAgICAgICAidXNlcnMiCiAgICAgICAgXSwKICAgICAgICAic3VtbWFyeSI6ICJQbGFjZSBhbiBvcmRlciBmb3IgYSBwZXQiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICJvcGVyYXRpb25JZCI6ICJwbGFjZU9yZGVyIiwKICAgICAgICAicHJvZHVjZXMiOiBbCiAgICAgICAgICAiYXBwbGljYXRpb24vanNvbiIKICAgICAgICBdLAogICAgICAgICJjb25zdW1lcyI6IFsKICAgICAgICAgICJhcHBsaWNhdGlvbi9qc29uIgogICAgICAgIF0sCiAgICAgICAgInBhcmFtZXRlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJpbiI6ICJib2R5IiwKICAgICAgICAgICAgIm5hbWUiOiAiYm9keSIsCiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJvcmRlciBwbGFjZWQgZm9yIHB1cmNoYXNpbmcgdGhlIHBldCIsCiAgICAgICAgICAgICJyZXF1aXJlZCI6IHRydWUsCiAgICAgICAgICAgICJzY2hlbWEiOiB7CiAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Vc2Vyc1JlcSIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlc3BvbnNlcyI6IHsKICAgICAgICAgICIyMDAiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJzdWNjZXNzZnVsIG9wZXJhdGlvbiIsCiAgICAgICAgICAgICJzY2hlbWEiOiB7CiAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Vc2Vyc0RhdGEiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAiNDAwIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW52YWxpZCBPcmRlciIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogICJzZWN1cml0eURlZmluaXRpb25zIjogewogICAgInBldHN0b3JlX2F1dGgiOiB7CiAgICAgICJ0eXBlIjogIm9hdXRoMiIsCiAgICAgICJhdXRob3JpemF0aW9uVXJsIjogImh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL29hdXRoL2RpYWxvZyIsCiAgICAgICJmbG93IjogImltcGxpY2l0IiwKICAgICAgInNjb3BlcyI6IHsKICAgICAgICAid3JpdGU6cGV0cyI6ICJtb2RpZnkgcGV0cyBpbiB5b3VyIGFjY291bnQiLAogICAgICAgICJyZWFkOnBldHMiOiAicmVhZCB5b3VyIHBldHMiCiAgICAgIH0KICAgIH0sCiAgICAiYXBpX2tleSI6IHsKICAgICAgInR5cGUiOiAiYXBpS2V5IiwKICAgICAgIm5hbWUiOiAiYXBpX2tleSIsCiAgICAgICJpbiI6ICJoZWFkZXIiCiAgICB9CiAgfSwKICAiZGVmaW5pdGlvbnMiOiB7CiAgICAiVXNlcnNSZXEiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdXNlciBuYW1lLiIKICAgICAgICB9LAogICAgICAgICJqb2IiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB1c2VyIG5hbWUuIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInhtbCI6IHsKICAgICAgICAibmFtZSI6ICJVc2Vyc1JlcSIKICAgICAgfQogICAgfSwKICAgICJ1bmtub3duIjogewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImlkIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJmb3JtYXQiOiAiaW50NjQiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB1c2VyIG5hbWUuIgogICAgICAgICAgICB9LAogICAgICAgICAgICAieWVhciI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdXNlciBuYW1lLiIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB1c2VyIG5hbWUuIgogICAgICAgICAgICB9LAogICAgICAgICAgICAicGFudG9uZV92YWx1ZSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdXNlciBuYW1lLiIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJ1c2Vyc0RlYXRpbCI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInBhZ2UiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiOiAiaW50NjQiCiAgICAgICAgfSwKICAgICAgICAicGVyX3BhZ2UiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiOiAiaW50NjQiCiAgICAgICAgfSwKICAgICAgICAidG90YWwiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiOiAiaW50NjQiCiAgICAgICAgfSwKICAgICAgICAidG90YWxfcGFnZXMiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiOiAiaW50NjQiCiAgICAgICAgfSwKICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImlkIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJmb3JtYXQiOiAiaW50NjQiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJmaXJzdF9uYW1lIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB1c2VyIG5hbWUuIgogICAgICAgICAgICB9LAogICAgICAgICAgICAibGFzdF9uYW1lIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB1c2VyIG5hbWUuIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiYXZhdGFyIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkJhc2U2NC1lbmNvZGVkIGNvbnRlbnRzIG9mIHRoZSBhdmF0YXIgaW1hZ2UiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJ4bWwiOiB7CiAgICAgICAgIm5hbWUiOiAidXNlcnNEZWF0aWwiCiAgICAgIH0KICAgIH0sCiAgICAiVXNlcnNEYXRhIjogewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHVzZXIgbmFtZS4iCiAgICAgICAgfSwKICAgICAgICAiam9iIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdXNlciBuYW1lLiIKICAgICAgICB9LAogICAgICAgICJpZCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgImZvcm1hdCI6ICJpbnQ2NCIKICAgICAgICB9LAogICAgICAgICJjcmVhdGVkQXQiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB1c2VyIG5hbWUuIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInhtbCI6IHsKICAgICAgICAibmFtZSI6ICJVc2Vyc0RhdGEiCiAgICAgIH0KICAgIH0sCiAgICAiVXNlcnMiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJkYXRhIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiaWQiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImZvcm1hdCI6ICJpbnQ2NCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImZpcnN0X25hbWUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHVzZXIgbmFtZS4iCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJsYXN0X25hbWUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHVzZXIgbmFtZS4iCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhdmF0YXIiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQmFzZTY0LWVuY29kZWQgY29udGVudHMgb2YgdGhlIGF2YXRhciBpbWFnZSIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInhtbCI6IHsKICAgICAgICAibmFtZSI6ICJVc2VycyIKICAgICAgfQogICAgfQogIH0sCiAgImV4dGVybmFsRG9jcyI6IHsKICAgICJkZXNjcmlwdGlvbiI6ICJGaW5kIG91dCBtb3JlIGFib3V0IEFwaSIsCiAgICAidXJsIjogImh0dHBzOi8vcmVxcmVzLmluLyIKICB9Cn0=","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522294155332","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"json api files/SwaggerUsersAPI.json","SsgUrl":"json api files/SwaggerUsersAPI.json","AccessStatus":"PRIVATE","Uuid":"6fef402a-88aa-4591-8d2a-218a7434b69c","ApiLocationUrl":"https://reqres.in/api","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-29 09:07:10.035  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	https://jsonplaceholder.typicode.com/
2018-03-29 09:07:10.035  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-29 09:07:10.484  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('1ebbd47c-c269-43bb-8ecd-76d7ee07edf9')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"","InSync":"0","PrivateDescription":"","ServiceDisruption":"0","Name":"Swagger json api files/jsonplaceholder.json","SpecFilesize":"7824","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522294156257","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"json api files/jsonplaceholder.json","SsgUrl":"json api files/jsonplaceholder.json","AccessStatus":"PRIVATE","Uuid":"1ebbd47c-c269-43bb-8ecd-76d7ee07edf9","ApiLocationUrl":"https://jsonplaceholder.typicode.com/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-29 09:07:10.749  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/v2
2018-03-29 09:07:10.759  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-29 09:07:11.309  INFO 4976 --- [http-nio-8080-exec-1] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('c7e90386-9b8d-4265-8514-e1d00da869f3')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","InSync":"0","PrivateDescription":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","ServiceDisruption":"0","Name":"Swagger json api files/petstore-swagger.json","SpecFilesize":"13677","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522294157053","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"json api files/petstore-swagger.json","SsgUrl":"json api files/petstore-swagger.json","AccessStatus":"PRIVATE","Uuid":"c7e90386-9b8d-4265-8514-e1d00da869f3","ApiLocationUrl":"http://petstore.swagger.io/v2","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-29 09:21:36.922  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-29 09:21:36.925  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : am in create api()
2018-03-29 09:21:36.925  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "0d3f0e2b97a4769a73be8a7d0305ec0238a7c914",
  "after": "b2831d17f2f9c79ee68e900006c90474c9b58eb5",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/0d3f0e2b97a4...b2831d17f2f9",
  "commits": [
    {
      "id": "b2831d17f2f9c79ee68e900006c90474c9b58eb5",
      "tree_id": "bd2200fb3d09d3b693b8c8cc4fa5ea4028d0f085",
      "distinct": true,
      "message": "added the new json files",
      "timestamp": "2018-03-29T09:20:27+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/b2831d17f2f9c79ee68e900006c90474c9b58eb5",
      "author": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "committer": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "added": [
        "SwaggerUsersAPI.json",
        "jsonplaceholder.json",
        "petstore-swagger.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "b2831d17f2f9c79ee68e900006c90474c9b58eb5",
    "tree_id": "bd2200fb3d09d3b693b8c8cc4fa5ea4028d0f085",
    "distinct": true,
    "message": "added the new json files",
    "timestamp": "2018-03-29T09:20:27+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/b2831d17f2f9c79ee68e900006c90474c9b58eb5",
    "author": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "committer": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "added": [
      "SwaggerUsersAPI.json",
      "jsonplaceholder.json",
      "petstore-swagger.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-29T03:42:17Z",
    "pushed_at": 1522295439,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47199,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-29 09:21:43.648  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@30c38535
2018-03-29 09:21:43.648  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-29 09:21:45.355  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.util.JsonFormatter         : application url is:	https://reqres.in/api
2018-03-29 09:21:45.365  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-29 09:21:45.895  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('41c72f1a-3adc-404b-a27d-0b1f0eb8ac90')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"","InSync":"0","PrivateDescription":"","ServiceDisruption":"0","Name":"Swagger SwaggerUsersAPI.json","SpecFilesize":"9101","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522295031755","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"SwaggerUsersAPI.json","SsgUrl":"SwaggerUsersAPI.json","AccessStatus":"PRIVATE","Uuid":"41c72f1a-3adc-404b-a27d-0b1f0eb8ac90","ApiLocationUrl":"https://reqres.in/api","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-29 09:21:46.179  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.util.JsonFormatter         : application url is:	https://jsonplaceholder.typicode.com/
2018-03-29 09:21:46.179  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-29 09:21:46.668  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('26af4e4b-66e1-40fd-afdf-e87f50af3c65')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"","InSync":"0","PrivateDescription":"","ServiceDisruption":"0","Name":"Swagger jsonplaceholder.json","SpecFilesize":"7824","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522295032504","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"jsonplaceholder.json","SsgUrl":"jsonplaceholder.json","AccessStatus":"PRIVATE","Uuid":"26af4e4b-66e1-40fd-afdf-e87f50af3c65","ApiLocationUrl":"https://jsonplaceholder.typicode.com/","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-29 09:21:46.922  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/v2
2018-03-29 09:21:46.928  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-29 09:21:47.401  INFO 4976 --- [http-nio-8080-exec-5] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('7d832d08-bd26-41dd-b170-ac577ae6c8ff')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","InSync":"0","PrivateDescription":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","ServiceDisruption":"0","Name":"Swagger petstore-swagger.json","SpecFilesize":"13677","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,eyJzd2FnZ2VyIjoiMy4wIiwiaW5mbyI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgaXMgYSBzYW1wbGUgc2VydmVyIFBldHN0b3JlIHNlcnZlci4gIFlvdSBjYW4gZmluZCBvdXQgbW9yZSBhYm91dCBTd2FnZ2VyIGF0IFtodHRwOi8vc3dhZ2dlci5pb10oaHR0cDovL3N3YWdnZXIuaW8pIG9yIG9uIFtpcmMuZnJlZW5vZGUubmV0LCAjc3dhZ2dlcl0oaHR0cDovL3N3YWdnZXIuaW8vaXJjLykuICBGb3IgdGhpcyBzYW1wbGUsIHlvdSBjYW4gdXNlIHRoZSBhcGkga2V5IGBzcGVjaWFsLWtleWAgdG8gdGVzdCB0aGUgYXV0aG9yaXphdGlvbiBmaWx0ZXJzLiIsInZlcnNpb24iOiIxLjAuMCIsInRpdGxlIjoiU3dhZ2dlciBQZXRzdG9yZTEiLCJ0ZXJtc09mU2VydmljZSI6Imh0dHA6Ly9zd2FnZ2VyLmlvL3Rlcm1zLyIsImNvbnRhY3QiOnsiZW1haWwiOiJhcGl0ZWFtQHN3YWdnZXIuaW8ifSwibGljZW5zZSI6eyJuYW1lIjoiQXBhY2hlIDIuMCIsInVybCI6Imh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sIn19LCJob3N0IjoicGV0c3RvcmUuc3dhZ2dlci5pbyIsImJhc2VQYXRoIjoiL3YyIiwidGFncyI6W3sibmFtZSI6InBldCIsImRlc2NyaXB0aW9uIjoiRXZlcnl0aGluZyBhYm91dCB5b3VyIFBldHMiLCJleHRlcm5hbERvY3MiOnsiZGVzY3JpcHRpb24iOiJGaW5kIG91dCBtb3JlIiwidXJsIjoiaHR0cDovL3N3YWdnZXIuaW8ifX0seyJuYW1lIjoic3RvcmUiLCJkZXNjcmlwdGlvbiI6IkFjY2VzcyB0byBQZXRzdG9yZSBvcmRlcnMifSx7Im5hbWUiOiJ1c2VyIiwiZGVzY3JpcHRpb24iOiJPcGVyYXRpb25zIGFib3V0IHVzZXIiLCJleHRlcm5hbERvY3MiOnsiZGVzY3JpcHRpb24iOiJGaW5kIG91dCBtb3JlIGFib3V0IG91ciBzdG9yZSIsInVybCI6Imh0dHA6Ly9zd2FnZ2VyLmlvIn19XSwic2NoZW1lcyI6WyJodHRwIl0sInBhdGhzIjp7Ii9wZXQiOnsicG9zdCI6eyJ0YWdzIjpbInBldCJdLCJzdW1tYXJ5IjoiQWRkIGEgbmV3IHBldCB0byB0aGUgc3RvcmUiLCJkZXNjcmlwdGlvbiI6IiIsIm9wZXJhdGlvbklkIjoiYWRkUGV0IiwiY29uc3VtZXMiOlsiYXBwbGljYXRpb24vanNvbiIsImFwcGxpY2F0aW9uL3htbCJdLCJwcm9kdWNlcyI6WyJhcHBsaWNhdGlvbi94bWwiLCJhcHBsaWNhdGlvbi9qc29uIl0sInBhcmFtZXRlcnMiOlt7ImluIjoiYm9keSIsIm5hbWUiOiJib2R5IiwiZGVzY3JpcHRpb24iOiJQZXQgb2JqZWN0IHRoYXQgbmVlZHMgdG8gYmUgYWRkZWQgdG8gdGhlIHN0b3JlIiwicmVxdWlyZWQiOnRydWUsInNjaGVtYSI6eyIkcmVmIjoiIy9kZWZpbml0aW9ucy9QZXQifX1dLCJyZXNwb25zZXMiOnsiNDA1Ijp7ImRlc2NyaXB0aW9uIjoiSW52YWxpZCBpbnB1dCJ9fSwic2VjdXJpdHkiOlt7InBldHN0b3JlX2F1dGgiOlsid3JpdGU6cGV0cyIsInJlYWQ6cGV0cyJdfV19LCJwdXQiOnsidGFncyI6WyJwZXQiXSwic3VtbWFyeSI6IlVwZGF0ZSBhbiBleGlzdGluZyBwZXQiLCJkZXNjcmlwdGlvbiI6IiIsIm9wZXJhdGlvbklkIjoidXBkYXRlUGV0IiwiY29uc3VtZXMiOlsiYXBwbGljYXRpb24vanNvbiIsImFwcGxpY2F0aW9uL3htbCJdLCJwcm9kdWNlcyI6WyJhcHBsaWNhdGlvbi94bWwiLCJhcHBsaWNhdGlvbi9qc29uIl0sInBhcmFtZXRlcnMiOlt7ImluIjoiYm9keSIsIm5hbWUiOiJib2R5IiwiZGVzY3JpcHRpb24iOiJQZXQgb2JqZWN0IHRoYXQgbmVlZHMgdG8gYmUgYWRkZWQgdG8gdGhlIHN0b3JlIiwicmVxdWlyZWQiOnRydWUsInNjaGVtYSI6eyIkcmVmIjoiIy9kZWZpbml0aW9ucy9QZXQifX1dLCJyZXNwb25zZXMiOnsiNDAwIjp7ImRlc2NyaXB0aW9uIjoiSW52YWxpZCBJRCBzdXBwbGllZCJ9LCI0MDQiOnsiZGVzY3JpcHRpb24iOiJQZXQgbm90IGZvdW5kIn0sIjQwNSI6eyJkZXNjcmlwdGlvbiI6IlZhbGlkYXRpb24gZXhjZXB0aW9uIn19LCJzZWN1cml0eSI6W3sicGV0c3RvcmVfYXV0aCI6WyJ3cml0ZTpwZXRzIiwicmVhZDpwZXRzIl19XX19LCIvcGV0L2ZpbmRCeVN0YXR1cyI6eyJnZXQiOnsidGFncyI6WyJwZXQiXSwic3VtbWFyeSI6IkZpbmRzIFBldHMgYnkgc3RhdHVzIiwiZGVzY3JpcHRpb24iOiJNdWx0aXBsZSBzdGF0dXMgdmFsdWVzIGNhbiBiZSBwcm92aWRlZCB3aXRoIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmdzIiwib3BlcmF0aW9uSWQiOiJmaW5kUGV0c0J5U3RhdHVzIiwicHJvZHVjZXMiOlsiYXBwbGljYXRpb24veG1sIiwiYXBwbGljYXRpb24vanNvbiJdLCJwYXJhbWV0ZXJzIjpbeyJuYW1lIjoic3RhdHVzIiwiaW4iOiJxdWVyeSIsImRlc2NyaXB0aW9uIjoiU3RhdHVzIHZhbHVlcyB0aGF0IG5lZWQgdG8gYmUgY29uc2lkZXJlZCBmb3IgZmlsdGVyIiwicmVxdWlyZWQiOnRydWUsInR5cGUiOiJhcnJheSIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmciLCJlbnVtIjpbImF2YWlsYWJsZSIsInBlbmRpbmciLCJzb2xkIl0sImRlZmF1bHQiOiJhdmFpbGFibGUifSwiY29sbGVjdGlvbkZvcm1hdCI6Im11bHRpIn1dLCJyZXNwb25zZXMiOnsiMjAwIjp7ImRlc2NyaXB0aW9uIjoic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLCJzY2hlbWEiOnsidHlwZSI6ImFycmF5IiwiaXRlbXMiOnsiJHJlZiI6IiMvZGVmaW5pdGlvbnMvUGV0In19fSwiNDAwIjp7ImRlc2NyaXB0aW9uIjoiSW52YWxpZCBzdGF0dXMgdmFsdWUifX0sInNlY3VyaXR5IjpbeyJwZXRzdG9yZV9hdXRoIjpbIndyaXRlOnBldHMiLCJyZWFkOnBldHMiXX1dfX0sIi9wZXQvZmluZEJ5VGFncyI6eyJnZXQiOnsidGFncyI6WyJwZXQiXSwic3VtbWFyeSI6IkZpbmRzIFBldHMgYnkgdGFncyIsImRlc2NyaXB0aW9uIjoiTXVsaXBsZSB0YWdzIGNhbiBiZSBwcm92aWRlZCB3aXRoIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmdzLiBVc2UgdGFnMSwgdGFnMiwgdGFnMyBmb3IgdGVzdGluZy4iLCJvcGVyYXRpb25JZCI6ImZpbmRQZXRzQnlUYWdzIiwicHJvZHVjZXMiOlsiYXBwbGljYXRpb24veG1sIiwiYXBwbGljYXRpb24vanNvbiJdLCJwYXJhbWV0ZXJzIjpbeyJuYW1lIjoidGFncyIsImluIjoicXVlcnkiLCJkZXNjcmlwdGlvbiI6IlRhZ3MgdG8gZmlsdGVyIGJ5IiwicmVxdWlyZWQiOnRydWUsInR5cGUiOiJhcnJheSIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwiY29sbGVjdGlvbkZvcm1hdCI6Im11bHRpIn1dLCJyZXNwb25zZXMiOnsiMjAwIjp7ImRlc2NyaXB0aW9uIjoic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLCJzY2hlbWEiOnsidHlwZSI6ImFycmF5IiwiaXRlbXMiOnsiJHJlZiI6IiMvZGVmaW5pdGlvbnMvUGV0In19fSwiNDAwIjp7ImRlc2NyaXB0aW9uIjoiSW52YWxpZCB0YWcgdmFsdWUifX0sInNlY3VyaXR5IjpbeyJwZXRzdG9yZV9hdXRoIjpbIndyaXRlOnBldHMiLCJyZWFkOnBldHMiXX1dLCJkZXByZWNhdGVkIjp0cnVlfX0sIi9wZXQve3BldElkfSI6eyJnZXQiOnsidGFncyI6WyJwZXQiXSwic3VtbWFyeSI6IkZpbmQgcGV0IGJ5IElEIiwiZGVzY3JpcHRpb24iOiJSZXR1cm5zIGEgc2luZ2xlIHBldCIsIm9wZXJhdGlvbklkIjoiZ2V0UGV0QnlJZCIsInByb2R1Y2VzIjpbImFwcGxpY2F0aW9uL3htbCIsImFwcGxpY2F0aW9uL2pzb24iXSwicGFyYW1ldGVycyI6W3sibmFtZSI6InBldElkIiwiaW4iOiJwYXRoIiwiZGVzY3JpcHRpb24iOiJJRCBvZiBwZXQgdG8gcmV0dXJuIiwicmVxdWlyZWQiOnRydWUsInR5cGUiOiJpbnRlZ2VyIiwiZm9ybWF0IjoiaW50NjQifV0sInJlc3BvbnNlcyI6eyIyMDAiOnsiZGVzY3JpcHRpb24iOiJzdWNjZXNzZnVsIG9wZXJhdGlvbiIsInNjaGVtYSI6eyIkcmVmIjoiIy9kZWZpbml0aW9ucy9QZXQifX0sIjQwMCI6eyJkZXNjcmlwdGlvbiI6IkludmFsaWQgSUQgc3VwcGxpZWQifSwiNDA0Ijp7ImRlc2NyaXB0aW9uIjoiUGV0IG5vdCBmb3VuZCJ9fSwic2VjdXJpdHkiOlt7ImFwaV9rZXkiOltdfV19LCJwb3N0Ijp7InRhZ3MiOlsicGV0Il0sInN1bW1hcnkiOiJVcGRhdGVzIGEgcGV0IGluIHRoZSBzdG9yZSB3aXRoIGZvcm0gZGF0YSIsImRlc2NyaXB0aW9uIjoiIiwib3BlcmF0aW9uSWQiOiJ1cGRhdGVQZXRXaXRoRm9ybSIsImNvbnN1bWVzIjpbImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCJdLCJwcm9kdWNlcyI6WyJhcHBsaWNhdGlvbi94bWwiLCJhcHBsaWNhdGlvbi9qc29uIl0sInBhcmFtZXRlcnMiOlt7Im5hbWUiOiJwZXRJZCIsImluIjoicGF0aCIsImRlc2NyaXB0aW9uIjoiSUQgb2YgcGV0IHRoYXQgbmVlZHMgdG8gYmUgdXBkYXRlZCIsInJlcXVpcmVkIjp0cnVlLCJ0eXBlIjoiaW50ZWdlciIsImZvcm1hdCI6ImludDY0In0seyJuYW1lIjoibmFtZSIsImluIjoiZm9ybURhdGEiLCJkZXNjcmlwdGlvbiI6IlVwZGF0ZWQgbmFtZSBvZiB0aGUgcGV0IiwicmVxdWlyZWQiOmZhbHNlLCJ0eXBlIjoic3RyaW5nIn0seyJuYW1lIjoic3RhdHVzIiwiaW4iOiJmb3JtRGF0YSIsImRlc2NyaXB0aW9uIjoiVXBkYXRlZCBzdGF0dXMgb2YgdGhlIHBldCIsInJlcXVpcmVkIjpmYWxzZSwidHlwZSI6InN0cmluZyJ9XSwicmVzcG9uc2VzIjp7IjQwNSI6eyJkZXNjcmlwdGlvbiI6IkludmFsaWQgaW5wdXQifX0sInNlY3VyaXR5IjpbeyJwZXRzdG9yZV9hdXRoIjpbIndyaXRlOnBldHMiLCJyZWFkOnBldHMiXX1dfSwiZGVsZXRlIjp7InRhZ3MiOlsicGV0Il0sInN1bW1hcnkiOiJEZWxldGVzIGEgcGV0IiwiZGVzY3JpcHRpb24iOiIiLCJvcGVyYXRpb25JZCI6ImRlbGV0ZVBldCIsInByb2R1Y2VzIjpbImFwcGxpY2F0aW9uL3htbCIsImFwcGxpY2F0aW9uL2pzb24iXSwicGFyYW1ldGVycyI6W3sibmFtZSI6ImFwaV9rZXkiLCJpbiI6ImhlYWRlciIsInJlcXVpcmVkIjpmYWxzZSwidHlwZSI6InN0cmluZyJ9LHsibmFtZSI6InBldElkIiwiaW4iOiJwYXRoIiwiZGVzY3JpcHRpb24iOiJQZXQgaWQgdG8gZGVsZXRlIiwicmVxdWlyZWQiOnRydWUsInR5cGUiOiJpbnRlZ2VyIiwiZm9ybWF0IjoiaW50NjQifV0sInJlc3BvbnNlcyI6eyI0MDAiOnsiZGVzY3JpcHRpb24iOiJJbnZhbGlkIElEIHN1cHBsaWVkIn0sIjQwNCI6eyJkZXNjcmlwdGlvbiI6IlBldCBub3QgZm91bmQifX0sInNlY3VyaXR5IjpbeyJwZXRzdG9yZV9hdXRoIjpbIndyaXRlOnBldHMiLCJyZWFkOnBldHMiXX1dfX0sIi9wZXQve3BldElkfS91cGxvYWRJbWFnZSI6eyJwb3N0Ijp7InRhZ3MiOlsicGV0Il0sInN1bW1hcnkiOiJ1cGxvYWRzIGFuIGltYWdlIiwiZGVzY3JpcHRpb24iOiIiLCJvcGVyYXRpb25JZCI6InVwbG9hZEZpbGUiLCJjb25zdW1lcyI6WyJtdWx0aXBhcnQvZm9ybS1kYXRhIl0sInByb2R1Y2VzIjpbImFwcGxpY2F0aW9uL2pzb24iXSwicGFyYW1ldGVycyI6W3sibmFtZSI6InBldElkIiwiaW4iOiJwYXRoIiwiZGVzY3JpcHRpb24iOiJJRCBvZiBwZXQgdG8gdXBkYXRlIiwicmVxdWlyZWQiOnRydWUsInR5cGUiOiJpbnRlZ2VyIiwiZm9ybWF0IjoiaW50NjQifSx7Im5hbWUiOiJhZGRpdGlvbmFsTWV0YWRhdGEiLCJpbiI6ImZvcm1EYXRhIiwiZGVzY3JpcHRpb24iOiJBZGRpdGlvbmFsIGRhdGEgdG8gcGFzcyB0byBzZXJ2ZXIiLCJyZXF1aXJlZCI6ZmFsc2UsInR5cGUiOiJzdHJpbmcifSx7Im5hbWUiOiJmaWxlIiwiaW4iOiJmb3JtRGF0YSIsImRlc2NyaXB0aW9uIjoiZmlsZSB0byB1cGxvYWQiLCJyZXF1aXJlZCI6ZmFsc2UsInR5cGUiOiJmaWxlIn1dLCJyZXNwb25zZXMiOnsiMjAwIjp7ImRlc2NyaXB0aW9uIjoic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLCJzY2hlbWEiOnsiJHJlZiI6IiMvZGVmaW5pdGlvbnMvQXBpUmVzcG9uc2UifX19LCJzZWN1cml0eSI6W3sicGV0c3RvcmVfYXV0aCI6WyJ3cml0ZTpwZXRzIiwicmVhZDpwZXRzIl19XX19LCIvc3RvcmUvaW52ZW50b3J5Ijp7ImdldCI6eyJ0YWdzIjpbInN0b3JlIl0sInN1bW1hcnkiOiJSZXR1cm5zIHBldCBpbnZlbnRvcmllcyBieSBzdGF0dXMiLCJkZXNjcmlwdGlvbiI6IlJldHVybnMgYSBtYXAgb2Ygc3RhdHVzIGNvZGVzIHRvIHF1YW50aXRpZXMiLCJvcGVyYXRpb25JZCI6ImdldEludmVudG9yeSIsInByb2R1Y2VzIjpbImFwcGxpY2F0aW9uL2pzb24iXSwicGFyYW1ldGVycyI6W10sInJlc3BvbnNlcyI6eyIyMDAiOnsiZGVzY3JpcHRpb24iOiJzdWNjZXNzZnVsIG9wZXJhdGlvbiIsInNjaGVtYSI6eyJ0eXBlIjoib2JqZWN0IiwiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6ImludGVnZXIiLCJmb3JtYXQiOiJpbnQzMiJ9fX19LCJzZWN1cml0eSI6W3siYXBpX2tleSI6W119XX19LCIvc3RvcmUvb3JkZXIiOnsicG9zdCI6eyJ0YWdzIjpbInN0b3JlIl0sInN1bW1hcnkiOiJQbGFjZSBhbiBvcmRlciBmb3IgYSBwZXQiLCJkZXNjcmlwdGlvbiI6IiIsIm9wZXJhdGlvbklkIjoicGxhY2VPcmRlciIsInByb2R1Y2VzIjpbImFwcGxpY2F0aW9uL3htbCIsImFwcGxpY2F0aW9uL2pzb24iXSwicGFyYW1ldGVycyI6W3siaW4iOiJib2R5IiwibmFtZSI6ImJvZHkiLCJkZXNjcmlwdGlvbiI6Im9yZGVyIHBsYWNlZCBmb3IgcHVyY2hhc2luZyB0aGUgcGV0IiwicmVxdWlyZWQiOnRydWUsInNjaGVtYSI6eyIkcmVmIjoiIy9kZWZpbml0aW9ucy9PcmRlciJ9fV0sInJlc3BvbnNlcyI6eyIyMDAiOnsiZGVzY3JpcHRpb24iOiJzdWNjZXNzZnVsIG9wZXJhdGlvbiIsInNjaGVtYSI6eyIkcmVmIjoiIy9kZWZpbml0aW9ucy9PcmRlciJ9fSwiNDAwIjp7ImRlc2NyaXB0aW9uIjoiSW52YWxpZCBPcmRlciJ9fX19LCIvc3RvcmUvb3JkZXIve29yZGVySWR9Ijp7ImdldCI6eyJ0YWdzIjpbInN0b3JlIl0sInN1bW1hcnkiOiJGaW5kIHB1cmNoYXNlIG9yZGVyIGJ5IElEIiwiZGVzY3JpcHRpb24iOiJGb3IgdmFsaWQgcmVzcG9uc2UgdHJ5IGludGVnZXIgSURzIHdpdGggdmFsdWUgPj0gMSBhbmQgPD0gMTAuIE90aGVyIHZhbHVlcyB3aWxsIGdlbmVyYXRlZCBleGNlcHRpb25zIiwib3BlcmF0aW9uSWQiOiJnZXRPcmRlckJ5SWQiLCJwcm9kdWNlcyI6WyJhcHBsaWNhdGlvbi94bWwiLCJhcHBsaWNhdGlvbi9qc29uIl0sInBhcmFtZXRlcnMiOlt7Im5hbWUiOiJvcmRlcklkIiwiaW4iOiJwYXRoIiwiZGVzY3JpcHRpb24iOiJJRCBvZiBwZXQgdGhhdCBuZWVkcyB0byBiZSBmZXRjaGVkIiwicmVxdWlyZWQiOnRydWUsInR5cGUiOiJpbnRlZ2VyIiwibWF4aW11bSI6MTAuMCwibWluaW11bSI6MS4wLCJmb3JtYXQiOiJpbnQ2NCJ9XSwicmVzcG9uc2VzIjp7IjIwMCI6eyJkZXNjcmlwdGlvbiI6InN1Y2Nlc3NmdWwgb3BlcmF0aW9uIiwic2NoZW1hIjp7IiRyZWYiOiIjL2RlZmluaXRpb25zL09yZGVyIn19LCI0MDAiOnsiZGVzY3JpcHRpb24iOiJJbnZhbGlkIElEIHN1cHBsaWVkIn0sIjQwNCI6eyJkZXNjcmlwdGlvbiI6Ik9yZGVyIG5vdCBmb3VuZCJ9fX0sImRlbGV0ZSI6eyJ0YWdzIjpbInN0b3JlIl0sInN1bW1hcnkiOiJEZWxldGUgcHVyY2hhc2Ugb3JkZXIgYnkgSUQiLCJkZXNjcmlwdGlvbiI6IkZvciB2YWxpZCByZXNwb25zZSB0cnkgaW50ZWdlciBJRHMgd2l0aCBwb3NpdGl2ZSBpbnRlZ2VyIHZhbHVlLiBOZWdhdGl2ZSBvciBub24taW50ZWdlciB2YWx1ZXMgd2lsbCBnZW5lcmF0ZSBBUEkgZXJyb3JzIiwib3BlcmF0aW9uSWQiOiJkZWxldGVPcmRlciIsInByb2R1Y2VzIjpbImFwcGxpY2F0aW9uL3htbCIsImFwcGxpY2F0aW9uL2pzb24iXSwicGFyYW1ldGVycyI6W3sibmFtZSI6Im9yZGVySWQiLCJpbiI6InBhdGgiLCJkZXNjcmlwdGlvbiI6IklEIG9mIHRoZSBvcmRlciB0aGF0IG5lZWRzIHRvIGJlIGRlbGV0ZWQiLCJyZXF1aXJlZCI6dHJ1ZSwidHlwZSI6ImludGVnZXIiLCJtaW5pbXVtIjoxLjAsImZvcm1hdCI6ImludDY0In1dLCJyZXNwb25zZXMiOnsiNDAwIjp7ImRlc2NyaXB0aW9uIjoiSW52YWxpZCBJRCBzdXBwbGllZCJ9LCI0MDQiOnsiZGVzY3JpcHRpb24iOiJPcmRlciBub3QgZm91bmQifX19fSwiL3VzZXIiOnsicG9zdCI6eyJ0YWdzIjpbInVzZXIiXSwic3VtbWFyeSI6IkNyZWF0ZSB1c2VyIiwiZGVzY3JpcHRpb24iOiJUaGlzIGNhbiBvbmx5IGJlIGRvbmUgYnkgdGhlIGxvZ2dlZCBpbiB1c2VyLiIsIm9wZXJhdGlvbklkIjoiY3JlYXRlVXNlciIsInByb2R1Y2VzIjpbImFwcGxpY2F0aW9uL3htbCIsImFwcGxpY2F0aW9uL2pzb24iXSwicGFyYW1ldGVycyI6W3siaW4iOiJib2R5IiwibmFtZSI6ImJvZHkiLCJkZXNjcmlwdGlvbiI6IkNyZWF0ZWQgdXNlciBvYmplY3QiLCJyZXF1aXJlZCI6dHJ1ZSwic2NoZW1hIjp7IiRyZWYiOiIjL2RlZmluaXRpb25zL1VzZXIifX1dLCJyZXNwb25zZXMiOnsiZGVmYXVsdCI6eyJkZXNjcmlwdGlvbiI6InN1Y2Nlc3NmdWwgb3BlcmF0aW9uIn19fX0sIi91c2VyL2NyZWF0ZVdpdGhBcnJheSI6eyJwb3N0Ijp7InRhZ3MiOlsidXNlciJdLCJzdW1tYXJ5IjoiQ3JlYXRlcyBsaXN0IG9mIHVzZXJzIHdpdGggZ2l2ZW4gaW5wdXQgYXJyYXkiLCJkZXNjcmlwdGlvbiI6IiIsIm9wZXJhdGlvbklkIjoiY3JlYXRlVXNlcnNXaXRoQXJyYXlJbnB1dCIsInByb2R1Y2VzIjpbImFwcGxpY2F0aW9uL3htbCIsImFwcGxpY2F0aW9uL2pzb24iXSwicGFyYW1ldGVycyI6W3siaW4iOiJib2R5IiwibmFtZSI6ImJvZHkiLCJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2YgdXNlciBvYmplY3QiLCJyZXF1aXJlZCI6dHJ1ZSwic2NoZW1hIjp7InR5cGUiOiJhcnJheSIsIml0ZW1zIjp7IiRyZWYiOiIjL2RlZmluaXRpb25zL1VzZXIifX19XSwicmVzcG9uc2VzIjp7ImRlZmF1bHQiOnsiZGVzY3JpcHRpb24iOiJzdWNjZXNzZnVsIG9wZXJhdGlvbiJ9fX19LCIvdXNlci9jcmVhdGVXaXRoTGlzdCI6eyJwb3N0Ijp7InRhZ3MiOlsidXNlciJdLCJzdW1tYXJ5IjoiQ3JlYXRlcyBsaXN0IG9mIHVzZXJzIHdpdGggZ2l2ZW4gaW5wdXQgYXJyYXkiLCJkZXNjcmlwdGlvbiI6IiIsIm9wZXJhdGlvbklkIjoiY3JlYXRlVXNlcnNXaXRoTGlzdElucHV0IiwicHJvZHVjZXMiOlsiYXBwbGljYXRpb24veG1sIiwiYXBwbGljYXRpb24vanNvbiJdLCJwYXJhbWV0ZXJzIjpbeyJpbiI6ImJvZHkiLCJuYW1lIjoiYm9keSIsImRlc2NyaXB0aW9uIjoiTGlzdCBvZiB1c2VyIG9iamVjdCIsInJlcXVpcmVkIjp0cnVlLCJzY2hlbWEiOnsidHlwZSI6ImFycmF5IiwiaXRlbXMiOnsiJHJlZiI6IiMvZGVmaW5pdGlvbnMvVXNlciJ9fX1dLCJyZXNwb25zZXMiOnsiZGVmYXVsdCI6eyJkZXNjcmlwdGlvbiI6InN1Y2Nlc3NmdWwgb3BlcmF0aW9uIn19fX0sIi91c2VyL2xvZ2luIjp7ImdldCI6eyJ0YWdzIjpbInVzZXIiXSwic3VtbWFyeSI6IkxvZ3MgdXNlciBpbnRvIHRoZSBzeXN0ZW0iLCJkZXNjcmlwdGlvbiI6IiIsIm9wZXJhdGlvbklkIjoibG9naW5Vc2VyIiwicHJvZHVjZXMiOlsiYXBwbGljYXRpb24veG1sIiwiYXBwbGljYXRpb24vanNvbiJdLCJwYXJhbWV0ZXJzIjpbeyJuYW1lIjoidXNlcm5hbWUiLCJpbiI6InF1ZXJ5IiwiZGVzY3JpcHRpb24iOiJUaGUgdXNlciBuYW1lIGZvciBsb2dpbiIsInJlcXVpcmVkIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0seyJuYW1lIjoicGFzc3dvcmQiLCJpbiI6InF1ZXJ5IiwiZGVzY3JpcHRpb24iOiJUaGUgcGFzc3dvcmQgZm9yIGxvZ2luIGluIGNsZWFyIHRleHQiLCJyZXF1aXJlZCI6dHJ1ZSwidHlwZSI6InN0cmluZyJ9XSwicmVzcG9uc2VzIjp7IjIwMCI6eyJkZXNjcmlwdGlvbiI6InN1Y2Nlc3NmdWwgb3BlcmF0aW9uIiwic2NoZW1hIjp7InR5cGUiOiJzdHJpbmcifSwiaGVhZGVycyI6eyJYLVJhdGUtTGltaXQiOnsidHlwZSI6ImludGVnZXIiLCJmb3JtYXQiOiJpbnQzMiIsImRlc2NyaXB0aW9uIjoiY2FsbHMgcGVyIGhvdXIgYWxsb3dlZCBieSB0aGUgdXNlciJ9LCJYLUV4cGlyZXMtQWZ0ZXIiOnsidHlwZSI6InN0cmluZyIsImZvcm1hdCI6ImRhdGUtdGltZSIsImRlc2NyaXB0aW9uIjoiZGF0ZSBpbiBVVEMgd2hlbiB0b2tlbiBleHBpcmVzIn19fSwiNDAwIjp7ImRlc2NyaXB0aW9uIjoiSW52YWxpZCB1c2VybmFtZS9wYXNzd29yZCBzdXBwbGllZCJ9fX19LCIvdXNlci9sb2dvdXQiOnsiZ2V0Ijp7InRhZ3MiOlsidXNlciJdLCJzdW1tYXJ5IjoiTG9ncyBvdXQgY3VycmVudCBsb2dnZWQgaW4gdXNlciBzZXNzaW9uIiwiZGVzY3JpcHRpb24iOiIiLCJvcGVyYXRpb25JZCI6ImxvZ291dFVzZXIiLCJwcm9kdWNlcyI6WyJhcHBsaWNhdGlvbi94bWwiLCJhcHBsaWNhdGlvbi9qc29uIl0sInBhcmFtZXRlcnMiOltdLCJyZXNwb25zZXMiOnsiZGVmYXVsdCI6eyJkZXNjcmlwdGlvbiI6InN1Y2Nlc3NmdWwgb3BlcmF0aW9uIn19fX0sIi91c2VyL3t1c2VybmFtZX0iOnsiZ2V0Ijp7InRhZ3MiOlsidXNlciJdLCJzdW1tYXJ5IjoiR2V0IHVzZXIgYnkgdXNlciBuYW1lIiwiZGVzY3JpcHRpb24iOiIiLCJvcGVyYXRpb25JZCI6ImdldFVzZXJCeU5hbWUiLCJwcm9kdWNlcyI6WyJhcHBsaWNhdGlvbi94bWwiLCJhcHBsaWNhdGlvbi9qc29uIl0sInBhcmFtZXRlcnMiOlt7Im5hbWUiOiJ1c2VybmFtZSIsImluIjoicGF0aCIsImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgdGhhdCBuZWVkcyB0byBiZSBmZXRjaGVkLiBVc2UgdXNlcjEgZm9yIHRlc3RpbmcuICIsInJlcXVpcmVkIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn1dLCJyZXNwb25zZXMiOnsiMjAwIjp7ImRlc2NyaXB0aW9uIjoic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLCJzY2hlbWEiOnsiJHJlZiI6IiMvZGVmaW5pdGlvbnMvVXNlciJ9fSwiNDAwIjp7ImRlc2NyaXB0aW9uIjoiSW52YWxpZCB1c2VybmFtZSBzdXBwbGllZCJ9LCI0MDQiOnsiZGVzY3JpcHRpb24iOiJVc2VyIG5vdCBmb3VuZCJ9fX0sInB1dCI6eyJ0YWdzIjpbInVzZXIiXSwic3VtbWFyeSI6IlVwZGF0ZWQgdXNlciIsImRlc2NyaXB0aW9uIjoiVGhpcyBjYW4gb25seSBiZSBkb25lIGJ5IHRoZSBsb2dnZWQgaW4gdXNlci4iLCJvcGVyYXRpb25JZCI6InVwZGF0ZVVzZXIiLCJwcm9kdWNlcyI6WyJhcHBsaWNhdGlvbi94bWwiLCJhcHBsaWNhdGlvbi9qc29uIl0sInBhcmFtZXRlcnMiOlt7Im5hbWUiOiJ1c2VybmFtZSIsImluIjoicGF0aCIsImRlc2NyaXB0aW9uIjoibmFtZSB0aGF0IG5lZWQgdG8gYmUgdXBkYXRlZCIsInJlcXVpcmVkIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0seyJpbiI6ImJvZHkiLCJuYW1lIjoiYm9keSIsImRlc2NyaXB0aW9uIjoiVXBkYXRlZCB1c2VyIG9iamVjdCIsInJlcXVpcmVkIjp0cnVlLCJzY2hlbWEiOnsiJHJlZiI6IiMvZGVmaW5pdGlvbnMvVXNlciJ9fV0sInJlc3BvbnNlcyI6eyI0MDAiOnsiZGVzY3JpcHRpb24iOiJJbnZhbGlkIHVzZXIgc3VwcGxpZWQifSwiNDA0Ijp7ImRlc2NyaXB0aW9uIjoiVXNlciBub3QgZm91bmQifX19LCJkZWxldGUiOnsidGFncyI6WyJ1c2VyIl0sInN1bW1hcnkiOiJEZWxldGUgdXNlciIsImRlc2NyaXB0aW9uIjoiVGhpcyBjYW4gb25seSBiZSBkb25lIGJ5IHRoZSBsb2dnZWQgaW4gdXNlci4iLCJvcGVyYXRpb25JZCI6ImRlbGV0ZVVzZXIiLCJwcm9kdWNlcyI6WyJhcHBsaWNhdGlvbi94bWwiLCJhcHBsaWNhdGlvbi9qc29uIl0sInBhcmFtZXRlcnMiOlt7Im5hbWUiOiJ1c2VybmFtZSIsImluIjoicGF0aCIsImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgdGhhdCBuZWVkcyB0byBiZSBkZWxldGVkIiwicmVxdWlyZWQiOnRydWUsInR5cGUiOiJzdHJpbmcifV0sInJlc3BvbnNlcyI6eyI0MDAiOnsiZGVzY3JpcHRpb24iOiJJbnZhbGlkIHVzZXJuYW1lIHN1cHBsaWVkIn0sIjQwNCI6eyJkZXNjcmlwdGlvbiI6IlVzZXIgbm90IGZvdW5kIn19fX19LCJzZWN1cml0eURlZmluaXRpb25zIjp7InBldHN0b3JlX2F1dGgiOnsidHlwZSI6Im9hdXRoMiIsImF1dGhvcml6YXRpb25VcmwiOiJodHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pby9vYXV0aC9kaWFsb2ciLCJmbG93IjoiaW1wbGljaXQiLCJzY29wZXMiOnsid3JpdGU6cGV0cyI6Im1vZGlmeSBwZXRzIGluIHlvdXIgYWNjb3VudCIsInJlYWQ6cGV0cyI6InJlYWQgeW91ciBwZXRzIn19LCJhcGlfa2V5Ijp7InR5cGUiOiJhcGlLZXkiLCJuYW1lIjoiYXBpX2tleSIsImluIjoiaGVhZGVyIn19LCJkZWZpbml0aW9ucyI6eyJPcmRlciI6eyJ0eXBlIjoib2JqZWN0IiwicHJvcGVydGllcyI6eyJpZCI6eyJ0eXBlIjoiaW50ZWdlciIsImZvcm1hdCI6ImludDY0In0sInBldElkIjp7InR5cGUiOiJpbnRlZ2VyIiwiZm9ybWF0IjoiaW50NjQifSwicXVhbnRpdHkiOnsidHlwZSI6ImludGVnZXIiLCJmb3JtYXQiOiJpbnQzMiJ9LCJzaGlwRGF0ZSI6eyJ0eXBlIjoic3RyaW5nIiwiZm9ybWF0IjoiZGF0ZS10aW1lIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIiwiZGVzY3JpcHRpb24iOiJPcmRlciBTdGF0dXMiLCJlbnVtIjpbInBsYWNlZCIsImFwcHJvdmVkIiwiZGVsaXZlcmVkIl19LCJjb21wbGV0ZSI6eyJ0eXBlIjoiYm9vbGVhbiIsImRlZmF1bHQiOmZhbHNlfX0sInhtbCI6eyJuYW1lIjoiT3JkZXIifX0sIlVzZXIiOnsidHlwZSI6Im9iamVjdCIsInByb3BlcnRpZXMiOnsiaWQiOnsidHlwZSI6ImludGVnZXIiLCJmb3JtYXQiOiJpbnQ2NCJ9LCJ1c2VybmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sImZpcnN0TmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sImxhc3ROYW1lIjp7InR5cGUiOiJzdHJpbmcifSwiZW1haWwiOnsidHlwZSI6InN0cmluZyJ9LCJwYXNzd29yZCI6eyJ0eXBlIjoic3RyaW5nIn0sInBob25lIjp7InR5cGUiOiJzdHJpbmcifSwidXNlclN0YXR1cyI6eyJ0eXBlIjoiaW50ZWdlciIsImZvcm1hdCI6ImludDMyIiwiZGVzY3JpcHRpb24iOiJVc2VyIFN0YXR1cyJ9fSwieG1sIjp7Im5hbWUiOiJVc2VyIn19LCJDYXRlZ29yeSI6eyJ0eXBlIjoib2JqZWN0IiwicHJvcGVydGllcyI6eyJpZCI6eyJ0eXBlIjoiaW50ZWdlciIsImZvcm1hdCI6ImludDY0In0sIm5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwieG1sIjp7Im5hbWUiOiJDYXRlZ29yeSJ9fSwiVGFnIjp7InR5cGUiOiJvYmplY3QiLCJwcm9wZXJ0aWVzIjp7ImlkIjp7InR5cGUiOiJpbnRlZ2VyIiwiZm9ybWF0IjoiaW50NjQifSwibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ4bWwiOnsibmFtZSI6IlRhZyJ9fSwiUGV0Ijp7InR5cGUiOiJvYmplY3QiLCJyZXF1aXJlZCI6WyJuYW1lIiwicGhvdG9VcmxzIl0sInByb3BlcnRpZXMiOnsiaWQiOnsidHlwZSI6ImludGVnZXIiLCJmb3JtYXQiOiJpbnQ2NCJ9LCJjYXRlZ29yeSI6eyIkcmVmIjoiIy9kZWZpbml0aW9ucy9DYXRlZ29yeSJ9LCJuYW1lIjp7InR5cGUiOiJzdHJpbmciLCJleGFtcGxlIjoiZG9nZ2llIn0sInBob3RvVXJscyI6eyJ0eXBlIjoiYXJyYXkiLCJ4bWwiOnsibmFtZSI6InBob3RvVXJsIiwid3JhcHBlZCI6dHJ1ZX0sIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifX0sInRhZ3MiOnsidHlwZSI6ImFycmF5IiwieG1sIjp7Im5hbWUiOiJ0YWciLCJ3cmFwcGVkIjp0cnVlfSwiaXRlbXMiOnsiJHJlZiI6IiMvZGVmaW5pdGlvbnMvVGFnIn19LCJzdGF0dXMiOnsidHlwZSI6InN0cmluZyIsImRlc2NyaXB0aW9uIjoicGV0IHN0YXR1cyBpbiB0aGUgc3RvcmUiLCJlbnVtIjpbImF2YWlsYWJsZSIsInBlbmRpbmciLCJzb2xkIl19fSwieG1sIjp7Im5hbWUiOiJQZXQifX0sIkFwaVJlc3BvbnNlIjp7InR5cGUiOiJvYmplY3QiLCJwcm9wZXJ0aWVzIjp7ImNvZGUiOnsidHlwZSI6ImludGVnZXIiLCJmb3JtYXQiOiJpbnQzMiJ9LCJ0eXBlIjp7InR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn19fX0sImV4dGVybmFsRG9jcyI6eyJkZXNjcmlwdGlvbiI6IkZpbmQgb3V0IG1vcmUgYWJvdXQgU3dhZ2dlciIsInVybCI6Imh0dHA6Ly9zd2FnZ2VyLmlvIn19","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522295033248","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"petstore-swagger.json","SsgUrl":"petstore-swagger.json","AccessStatus":"PRIVATE","Uuid":"7d832d08-bd26-41dd-b170-ac577ae6c8ff","ApiLocationUrl":"http://petstore.swagger.io/v2","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-29 10:17:12.532  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.config.CORSResponseFilter  : CORSFilter HTTP Request: POST
2018-03-29 10:17:12.585  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.rest.APIMRestService       : am in create api()
2018-03-29 10:17:12.585  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.rest.APIMRestService       : payload is:	{
  "ref": "refs/heads/master",
  "before": "41203c2645bfaa7de1753bfe54aa62f5cf5f46b7",
  "after": "ac84a95c1ca408207b358650db41e4dc5e567de2",
  "created": false,
  "deleted": false,
  "forced": false,
  "base_ref": null,
  "compare": "https://github.com/Dotridge/cloudbatch/compare/41203c2645bf...ac84a95c1ca4",
  "commits": [
    {
      "id": "ac84a95c1ca408207b358650db41e4dc5e567de2",
      "tree_id": "809db038dcafd566165b4ff831221d87fe353614",
      "distinct": true,
      "message": "added json files for demo",
      "timestamp": "2018-03-29T10:14:45+05:30",
      "url": "https://github.com/Dotridge/cloudbatch/commit/ac84a95c1ca408207b358650db41e4dc5e567de2",
      "author": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "committer": {
        "name": "Narsi1801",
        "email": "sandanarsaiah@gmail.com",
        "username": "Narsi1801"
      },
      "added": [
        "SwaggerUsersAPI.json",
        "petstore-swagger.json"
      ],
      "removed": [

      ],
      "modified": [

      ]
    }
  ],
  "head_commit": {
    "id": "ac84a95c1ca408207b358650db41e4dc5e567de2",
    "tree_id": "809db038dcafd566165b4ff831221d87fe353614",
    "distinct": true,
    "message": "added json files for demo",
    "timestamp": "2018-03-29T10:14:45+05:30",
    "url": "https://github.com/Dotridge/cloudbatch/commit/ac84a95c1ca408207b358650db41e4dc5e567de2",
    "author": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "committer": {
      "name": "Narsi1801",
      "email": "sandanarsaiah@gmail.com",
      "username": "Narsi1801"
    },
    "added": [
      "SwaggerUsersAPI.json",
      "petstore-swagger.json"
    ],
    "removed": [

    ],
    "modified": [

    ]
  },
  "repository": {
    "id": 120929498,
    "name": "cloudbatch",
    "full_name": "Dotridge/cloudbatch",
    "owner": {
      "name": "Dotridge",
      "email": "33683688+Dotridge@users.noreply.github.com",
      "login": "Dotridge",
      "id": 33683688,
      "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dotridge",
      "html_url": "https://github.com/Dotridge",
      "followers_url": "https://api.github.com/users/Dotridge/followers",
      "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
      "organizations_url": "https://api.github.com/users/Dotridge/orgs",
      "repos_url": "https://api.github.com/users/Dotridge/repos",
      "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dotridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "private": false,
    "html_url": "https://github.com/Dotridge/cloudbatch",
    "description": null,
    "fork": false,
    "url": "https://github.com/Dotridge/cloudbatch",
    "forks_url": "https://api.github.com/repos/Dotridge/cloudbatch/forks",
    "keys_url": "https://api.github.com/repos/Dotridge/cloudbatch/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/Dotridge/cloudbatch/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/Dotridge/cloudbatch/teams",
    "hooks_url": "https://api.github.com/repos/Dotridge/cloudbatch/hooks",
    "issue_events_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/events{/number}",
    "events_url": "https://api.github.com/repos/Dotridge/cloudbatch/events",
    "assignees_url": "https://api.github.com/repos/Dotridge/cloudbatch/assignees{/user}",
    "branches_url": "https://api.github.com/repos/Dotridge/cloudbatch/branches{/branch}",
    "tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/tags",
    "blobs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/Dotridge/cloudbatch/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/Dotridge/cloudbatch/languages",
    "stargazers_url": "https://api.github.com/repos/Dotridge/cloudbatch/stargazers",
    "contributors_url": "https://api.github.com/repos/Dotridge/cloudbatch/contributors",
    "subscribers_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscribers",
    "subscription_url": "https://api.github.com/repos/Dotridge/cloudbatch/subscription",
    "commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/Dotridge/cloudbatch/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/Dotridge/cloudbatch/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/Dotridge/cloudbatch/contents/{+path}",
    "compare_url": "https://api.github.com/repos/Dotridge/cloudbatch/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/Dotridge/cloudbatch/merges",
    "archive_url": "https://api.github.com/repos/Dotridge/cloudbatch/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/Dotridge/cloudbatch/downloads",
    "issues_url": "https://api.github.com/repos/Dotridge/cloudbatch/issues{/number}",
    "pulls_url": "https://api.github.com/repos/Dotridge/cloudbatch/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/Dotridge/cloudbatch/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/Dotridge/cloudbatch/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/Dotridge/cloudbatch/labels{/name}",
    "releases_url": "https://api.github.com/repos/Dotridge/cloudbatch/releases{/id}",
    "deployments_url": "https://api.github.com/repos/Dotridge/cloudbatch/deployments",
    "created_at": 1518194047,
    "updated_at": "2018-03-29T04:07:11Z",
    "pushed_at": 1522298706,
    "git_url": "git://github.com/Dotridge/cloudbatch.git",
    "ssh_url": "git@github.com:Dotridge/cloudbatch.git",
    "clone_url": "https://github.com/Dotridge/cloudbatch.git",
    "svn_url": "https://github.com/Dotridge/cloudbatch",
    "homepage": null,
    "size": 47199,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "forks_count": 0,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 0,
    "license": null,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "default_branch": "master",
    "stargazers": 0,
    "master_branch": "master"
  },
  "pusher": {
    "name": "Dotridge",
    "email": "33683688+Dotridge@users.noreply.github.com"
  },
  "sender": {
    "login": "Dotridge",
    "id": 33683688,
    "avatar_url": "https://avatars3.githubusercontent.com/u/33683688?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dotridge",
    "html_url": "https://github.com/Dotridge",
    "followers_url": "https://api.github.com/users/Dotridge/followers",
    "following_url": "https://api.github.com/users/Dotridge/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dotridge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dotridge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dotridge/subscriptions",
    "organizations_url": "https://api.github.com/users/Dotridge/orgs",
    "repos_url": "https://api.github.com/users/Dotridge/repos",
    "events_url": "https://api.github.com/users/Dotridge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dotridge/received_events",
    "type": "User",
    "site_admin": false
  }
}
2018-03-29 10:17:19.351  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.rest.APIMRestService       : access token is:	com.innominds.config.Token@3ee27255
2018-03-29 10:17:19.352  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.util.ServiceUtil           : API Euala Id:	e3ffb13d-9cfa-424a-a212-a6a1f9da0a57
2018-03-29 10:17:20.837  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.util.JsonFormatter         : application url is:	https://reqres.in/api
2018-03-29 10:17:20.848  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-29 10:17:21.332  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('0f4e8204-113c-4189-ae45-1865cb2b5764')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"","InSync":"0","PrivateDescription":"","ServiceDisruption":"0","Name":"Swagger SwaggerUsersAPI.json","SpecFilesize":"9101","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522298367179","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"SwaggerUsersAPI.json","SsgUrl":"SwaggerUsersAPI.json","AccessStatus":"PRIVATE","Uuid":"0f4e8204-113c-4189-ae45-1865cb2b5764","ApiLocationUrl":"https://reqres.in/api","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-29 10:17:21.602  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.util.JsonFormatter         : application url is:	http://petstore.swagger.io/v2
2018-03-29 10:17:21.608  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.util.APIMProxy             : auth uri is:	https://apim.dev.ca.com:38443/apim/2.0/Apis
2018-03-29 10:17:22.143  INFO 4976 --- [http-nio-8080-exec-8] com.innominds.util.APIMProxy             : result is:	{"__metadata":{"uri":"http://apim.dev.ca.com:8080/portal-data/Portal.svc/Api2.0s('6ce3bc55-ee8d-4442-9dd2-51f507666e85')"},"AuthenticationParameters":"{}","ApiGroupUsage":"0","Description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","InSync":"0","PrivateDescription":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","ServiceDisruption":"0","Name":"Swagger petstore-swagger.json","SpecFilesize":"13677","ApplicationUsage":"0","ModifyTs":"0","Version":"1.0.0","SpecContent":"data:;base64,","PortalStatus":"ENABLED","SsgServiceType":"REST","AuthenticationType":"NONE","SsgName":null,"CreateTs":"1522298367985","ApiEulaUuid":"e3ffb13d-9cfa-424a-a212-a6a1f9da0a57","SpecFilename":"petstore-swagger.json","SsgUrl":"petstore-swagger.json","AccessStatus":"PRIVATE","Uuid":"6ce3bc55-ee8d-4442-9dd2-51f507666e85","ApiLocationUrl":"http://petstore.swagger.io/v2","OrgUuid":null,"Organizations":null,"OrganizationUsage":"0","PublishedByPortal":true,"Pending":"0","PolicyEntities":{"results":[{"PolicyEntityUuid":"172594b6-18ba-4b0c-8d61-807db457e81d","PolicyTemplateArguments":{"results":[]}}]},"CustomFieldValues":{"results":[]},"PossibleStatuses":{"results":[]}}
2018-03-29 13:04:30.276  INFO 4976 --- [RMI TCP Connection(158)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2018-03-29 13:04:30.276  INFO 4976 --- [RMI TCP Connection(158)-127.0.0.1] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d826d77: startup date [Thu Mar 29 09:06:44 IST 2018]; root of context hierarchy
2018-03-29 13:04:30.306  INFO 4976 --- [RMI TCP Connection(158)-127.0.0.1] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2018-03-29 13:04:30.306  INFO 4976 --- [RMI TCP Connection(158)-127.0.0.1] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2018-03-29 13:25:01.229  WARN 6412 --- [main] ory$DuplicateJsonObjectContextCustomizer : 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/sanna11/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/sanna11/.m2/repository/org/json/json/20180130/json-20180130.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2018-03-29 13:25:01.311  INFO 6412 --- [main] c.i.GithubPushEventApiApplicationTests   : Starting GithubPushEventApiApplicationTests on GISLOANSD-645 with PID 6412 (started by sanna11 in C:\ca-apim-portal\github-push-event-api)
2018-03-29 13:25:01.311  INFO 6412 --- [main] c.i.GithubPushEventApiApplicationTests   : No active profile set, falling back to default profiles: default
2018-03-29 13:25:01.473  INFO 6412 --- [main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3738449f: startup date [Thu Mar 29 13:25:01 IST 2018]; root of context hierarchy
2018-03-29 13:25:06.427  INFO 6412 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3738449f: startup date [Thu Mar 29 13:25:01 IST 2018]; root of context hierarchy
2018-03-29 13:25:06.501  INFO 6412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/monitor],methods=[POST],consumes=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.innominds.rest.APIMRestService.createApi(java.lang.String)
2018-03-29 13:25:06.503  INFO 6412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/publish],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.innominds.rest.APIMRestService.publishAPI()
2018-03-29 13:25:06.507  INFO 6412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-29 13:25:06.508  INFO 6412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-29 13:25:06.577  INFO 6412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-29 13:25:06.577  INFO 6412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-29 13:25:06.626  INFO 6412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-29 13:25:06.977  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-29 13:25:06.978  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 13:25:06.981  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 13:25:06.982  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-03-29 13:25:06.984  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 13:25:06.985  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-29 13:25:06.986  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 13:25:06.988  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-29 13:25:06.990  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-29 13:25:06.991  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-29 13:25:06.992  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 13:25:06.993  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 13:25:06.995  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-29 13:25:06.996  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 13:25:06.997  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 13:25:06.998  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 13:25:06.999  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-29 13:25:07.000  INFO 6412 --- [main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-29 13:25:07.269  INFO 6412 --- [main] c.i.GithubPushEventApiApplicationTests   : Started GithubPushEventApiApplicationTests in 6.818 seconds (JVM running for 8.834)
2018-03-29 13:25:07.368  INFO 6412 --- [Thread-2] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@3738449f: startup date [Thu Mar 29 13:25:01 IST 2018]; root of context hierarchy
